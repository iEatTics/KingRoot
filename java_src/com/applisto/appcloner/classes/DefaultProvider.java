package com.applisto.appcloner.classes;

import andhook.lib.xposed.ClassUtils;
import android.app.Activity;
import android.app.AlertDialog;
import android.content.BroadcastReceiver;
import android.content.ComponentName;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.res.AssetFileDescriptor;
import android.net.Uri;
import android.os.Bundle;
import android.os.Handler;
import android.os.ParcelFileDescriptor;
import android.preference.PreferenceManager;
import android.text.TextUtils;
import android.util.Base64;
import com.applisto.appcloner.classes.DefaultProvider;
import com.applisto.appcloner.classes.util.Log;
import com.applisto.appcloner.classes.util.activity.AbstractContentProvider;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.InputStreamReader;
import java.lang.reflect.Method;
import java.p025io.ByteArrayOutputStrean;
import java.util.List;
import java.util.Map;
import java.util.Properties;
import java.util.concurrent.TimeUnit;
import java.util.zip.ZipFile;
/* loaded from: classes2.dex */
public class DefaultProvider extends AbstractContentProvider {
    private static final int MAX_COUNT = 10;
    private static final String PREF_KEY_COUNT = "com.applisto.appcloner.classes.DefaultProvider.count";
    public static final String PREF_KEY_PREFIX = "com.applisto.appcloner.classes.";
    private static final String PREF_ORIGINAL_INSTALL_VERSION_CODE = "com.applisto.appcloner.classes.originalInstallVersionCode";
    private static final String TAG = DefaultProvider.class.getSimpleName();

    /* JADX WARN: Can't wrap try/catch for region: R(13:969|970|20|(3:21|22|23)|(8:24|25|(0)|27|(7:29|31|33|35|37|39|(0))|939|42|43)|(4:44|45|(0)|(0))|51|52|53|54|55|56|(0)(0)) */
    /* JADX WARN: Can't wrap try/catch for region: R(402:58|(3:59|60|(1:62))|64|(2:65|66)|(388:74|75|(1:77)|78|79|80|(1:82)|83|(1:900)|87|(1:899)|91|(1:898)(4:97|98|99|100)|101|(1:103)(1:894)|104|(1:106)|107|(1:893)|110|(1:892)|114|(1:116)|117|(1:119)|(1:121)|122|(1:124)|125|(1:127)|128|(1:130)|131|(1:133)|134|(1:136)|137|(1:891)(1:141)|142|(1:144)|145|(340:151|152|(2:154|(1:156))(1:879)|157|(1:159)|160|(2:163|(1:165))|166|167|168|(3:854|855|(2:867|(326:869|174|(2:846|847)|176|177|178|179|(3:822|823|(2:837|(315:839|185|(2:187|(1:190))(1:818)|191|(2:193|(1:196))|197|(1:199)|200|(1:202)|203|(4:205|206|207|208)(1:817)|209|(1:211)|212|(1:214)|215|(1:217)|218|219|220|221|(1:223)|(1:225)|226|(1:228)|229|(1:231)|232|(1:234)|235|(1:237)(1:810)|238|(1:240)|241|(280:246|247|(262:254|255|(1:804)|(1:266)|267|(3:269|270|271)(1:803)|272|(1:274)|275|(1:277)|278|(1:280)|281|(5:790|791|792|793|794)(1:283)|284|285|(1:287)(1:786)|288|(1:290)|326|(5:777|778|779|780|781)(1:328)|329|330|(1:332)|333|(1:335)|336|(1:338)|339|(1:341)|342|(1:344)|345|(1:349)|350|(1:352)|353|(1:355)|356|(1:358)|359|(1:362)|363|(1:365)|(1:774)|368|(1:370)|(1:372)|373|(1:375)|376|(1:378)|379|(1:773)|383|(1:385)|386|(1:388)(1:772)|389|(1:391)|392|(1:771)|395|(1:770)|398|(2:400|401)|409|410|411|(1:767)|415|(1:417)|418|(1:766)|422|(1:765)|426|(1:764)|430|(1:432)(1:763)|433|(1:435)|436|(1:438)|439|(1:441)|442|(1:444)|445|(1:447)|448|(1:450)|451|(1:453)|454|(1:762)|458|(1:460)|461|(1:463)|464|(1:466)|467|(1:471)|472|(1:476)|477|(1:479)|480|(1:482)|483|(1:487)|488|(1:490)|491|(1:493)|494|(1:496)|497|(1:499)|500|(1:504)|505|(1:509)|510|(1:512)|513|(1:517)|518|(1:520)(2:758|(1:760))|521|(1:756)(4:525|526|527|528)|529|530|(1:532)|533|(1:535)|536|(1:538)|539|(1:541)|542|(1:544)|545|(1:547)|548|(1:550)|551|(1:553)|554|(1:556)|557|(1:559)|560|(1:562)|563|(1:565)|566|(1:568)|569|(1:571)|572|(1:574)|575|(1:577)|578|(1:582)|583|(1:585)|586|(1:588)|589|(80:594|595|(5:727|728|729|730|731)(1:597)|598|599|(1:601)|602|(1:604)(1:724)|605|(1:607)|608|(1:610)|611|(1:613)|614|(1:616)|617|(1:619)|620|(1:622)|623|(1:723)|626|(1:628)|629|(3:631|(1:633)|634)|635|(1:637)|638|(1:640)|641|(1:643)|644|(1:646)|647|648|(1:650)|651|(1:655)|656|(1:658)|659|(1:661)|662|(3:664|(1:666)(1:668)|667)|669|(1:671)|672|(1:676)|677|(1:722)|681|(1:685)|686|(1:721)|695|(1:697)|701|(4:703|704|705|706)(1:720)|707|(1:709)|(2:711|712)|296|297|(1:323)|301|(1:303)|304|(1:306)|307|(1:309)|310|(1:312)|313|(1:315)|316|(1:318)|319|320|321)|750|(1:743)(1:749)|744|745|746|747|595|(0)(0)|598|599|(0)|602|(0)(0)|605|(0)|608|(0)|611|(0)|614|(0)|617|(0)|620|(0)|623|(0)|723|626|(0)|629|(0)|635|(0)|638|(0)|641|(0)|644|(0)|647|648|(0)|651|(2:653|655)|656|(0)|659|(0)|662|(0)|669|(0)|672|(2:674|676)|677|(1:679)|722|681|(2:683|685)|686|(0)|721|695|(0)|701|(0)(0)|707|(0)|(0)|296|297|(1:299)|323|301|(0)|304|(0)|307|(0)|310|(0)|313|(0)|316|(0)|319|320|321)|805|806|807|808|255|(1:257)|804|(0)|267|(0)(0)|272|(0)|275|(0)|278|(0)|281|(0)(0)|284|285|(0)(0)|288|(0)|326|(0)(0)|329|330|(0)|333|(0)|336|(0)|339|(0)|342|(0)|345|(2:347|349)|350|(0)|353|(0)|356|(0)|359|(1:362)|363|(0)|(0)|774|368|(0)|(0)|373|(0)|376|(0)|379|(0)|773|383|(0)|386|(0)(0)|389|(0)|392|(0)|771|395|(0)|770|398|(0)|409|410|411|(1:413)|767|415|(0)|418|(1:420)|766|422|(1:424)|765|426|(1:428)|764|430|(0)(0)|433|(0)|436|(0)|439|(0)|442|(0)|445|(0)|448|(0)|451|(0)|454|(1:456)|762|458|(0)|461|(0)|464|(0)|467|(2:469|471)|472|(2:474|476)|477|(0)|480|(0)|483|(2:485|487)|488|(0)|491|(0)|494|(0)|497|(0)|500|(2:502|504)|505|(2:507|509)|510|(0)|513|(137:515|517|518|(0)(0)|521|(0)|756|529|530|(0)|533|(0)|536|(0)|539|(0)|542|(0)|545|(0)|548|(0)|551|(0)|554|(0)|557|(0)|560|(0)|563|(0)|566|(0)|569|(0)|572|(0)|575|(0)|578|(2:580|582)|583|(0)|586|(0)|589|(85:591|594|595|(0)(0)|598|599|(0)|602|(0)(0)|605|(0)|608|(0)|611|(0)|614|(0)|617|(0)|620|(0)|623|(0)|723|626|(0)|629|(0)|635|(0)|638|(0)|641|(0)|644|(0)|647|648|(0)|651|(0)|656|(0)|659|(0)|662|(0)|669|(0)|672|(0)|677|(0)|722|681|(0)|686|(0)|721|695|(0)|701|(0)(0)|707|(0)|(0)|296|297|(0)|323|301|(0)|304|(0)|307|(0)|310|(0)|313|(0)|316|(0)|319|320|321)|750|(0)(0)|744|745|746|747|595|(0)(0)|598|599|(0)|602|(0)(0)|605|(0)|608|(0)|611|(0)|614|(0)|617|(0)|620|(0)|623|(0)|723|626|(0)|629|(0)|635|(0)|638|(0)|641|(0)|644|(0)|647|648|(0)|651|(0)|656|(0)|659|(0)|662|(0)|669|(0)|672|(0)|677|(0)|722|681|(0)|686|(0)|721|695|(0)|701|(0)(0)|707|(0)|(0)|296|297|(0)|323|301|(0)|304|(0)|307|(0)|310|(0)|313|(0)|316|(0)|319|320|321)|517|518|(0)(0)|521|(0)|756|529|530|(0)|533|(0)|536|(0)|539|(0)|542|(0)|545|(0)|548|(0)|551|(0)|554|(0)|557|(0)|560|(0)|563|(0)|566|(0)|569|(0)|572|(0)|575|(0)|578|(0)|583|(0)|586|(0)|589|(0)|750|(0)(0)|744|745|746|747|595|(0)(0)|598|599|(0)|602|(0)(0)|605|(0)|608|(0)|611|(0)|614|(0)|617|(0)|620|(0)|623|(0)|723|626|(0)|629|(0)|635|(0)|638|(0)|641|(0)|644|(0)|647|648|(0)|651|(0)|656|(0)|659|(0)|662|(0)|669|(0)|672|(0)|677|(0)|722|681|(0)|686|(0)|721|695|(0)|701|(0)(0)|707|(0)|(0)|296|297|(0)|323|301|(0)|304|(0)|307|(0)|310|(0)|313|(0)|316|(0)|319|320|321)|809|247|(276:249|251|254|255|(0)|804|(0)|267|(0)(0)|272|(0)|275|(0)|278|(0)|281|(0)(0)|284|285|(0)(0)|288|(0)|326|(0)(0)|329|330|(0)|333|(0)|336|(0)|339|(0)|342|(0)|345|(0)|350|(0)|353|(0)|356|(0)|359|(0)|363|(0)|(0)|774|368|(0)|(0)|373|(0)|376|(0)|379|(0)|773|383|(0)|386|(0)(0)|389|(0)|392|(0)|771|395|(0)|770|398|(0)|409|410|411|(0)|767|415|(0)|418|(0)|766|422|(0)|765|426|(0)|764|430|(0)(0)|433|(0)|436|(0)|439|(0)|442|(0)|445|(0)|448|(0)|451|(0)|454|(0)|762|458|(0)|461|(0)|464|(0)|467|(0)|472|(0)|477|(0)|480|(0)|483|(0)|488|(0)|491|(0)|494|(0)|497|(0)|500|(0)|505|(0)|510|(0)|513|(0)|517|518|(0)(0)|521|(0)|756|529|530|(0)|533|(0)|536|(0)|539|(0)|542|(0)|545|(0)|548|(0)|551|(0)|554|(0)|557|(0)|560|(0)|563|(0)|566|(0)|569|(0)|572|(0)|575|(0)|578|(0)|583|(0)|586|(0)|589|(0)|750|(0)(0)|744|745|746|747|595|(0)(0)|598|599|(0)|602|(0)(0)|605|(0)|608|(0)|611|(0)|614|(0)|617|(0)|620|(0)|623|(0)|723|626|(0)|629|(0)|635|(0)|638|(0)|641|(0)|644|(0)|647|648|(0)|651|(0)|656|(0)|659|(0)|662|(0)|669|(0)|672|(0)|677|(0)|722|681|(0)|686|(0)|721|695|(0)|701|(0)(0)|707|(0)|(0)|296|297|(0)|323|301|(0)|304|(0)|307|(0)|310|(0)|313|(0)|316|(0)|319|320|321)|805|806|807|808|255|(0)|804|(0)|267|(0)(0)|272|(0)|275|(0)|278|(0)|281|(0)(0)|284|285|(0)(0)|288|(0)|326|(0)(0)|329|330|(0)|333|(0)|336|(0)|339|(0)|342|(0)|345|(0)|350|(0)|353|(0)|356|(0)|359|(0)|363|(0)|(0)|774|368|(0)|(0)|373|(0)|376|(0)|379|(0)|773|383|(0)|386|(0)(0)|389|(0)|392|(0)|771|395|(0)|770|398|(0)|409|410|411|(0)|767|415|(0)|418|(0)|766|422|(0)|765|426|(0)|764|430|(0)(0)|433|(0)|436|(0)|439|(0)|442|(0)|445|(0)|448|(0)|451|(0)|454|(0)|762|458|(0)|461|(0)|464|(0)|467|(0)|472|(0)|477|(0)|480|(0)|483|(0)|488|(0)|491|(0)|494|(0)|497|(0)|500|(0)|505|(0)|510|(0)|513|(0)|517|518|(0)(0)|521|(0)|756|529|530|(0)|533|(0)|536|(0)|539|(0)|542|(0)|545|(0)|548|(0)|551|(0)|554|(0)|557|(0)|560|(0)|563|(0)|566|(0)|569|(0)|572|(0)|575|(0)|578|(0)|583|(0)|586|(0)|589|(0)|750|(0)(0)|744|745|746|747|595|(0)(0)|598|599|(0)|602|(0)(0)|605|(0)|608|(0)|611|(0)|614|(0)|617|(0)|620|(0)|623|(0)|723|626|(0)|629|(0)|635|(0)|638|(0)|641|(0)|644|(0)|647|648|(0)|651|(0)|656|(0)|659|(0)|662|(0)|669|(0)|672|(0)|677|(0)|722|681|(0)|686|(0)|721|695|(0)|701|(0)(0)|707|(0)|(0)|296|297|(0)|323|301|(0)|304|(0)|307|(0)|310|(0)|313|(0)|316|(0)|319|320|321)))|181|182|183|184|185|(0)(0)|191|(0)|197|(0)|200|(0)|203|(0)(0)|209|(0)|212|(0)|215|(0)|218|219|220|221|(0)|(0)|226|(0)|229|(0)|232|(0)|235|(0)(0)|238|(0)|241|(281:243|246|247|(0)|805|806|807|808|255|(0)|804|(0)|267|(0)(0)|272|(0)|275|(0)|278|(0)|281|(0)(0)|284|285|(0)(0)|288|(0)|326|(0)(0)|329|330|(0)|333|(0)|336|(0)|339|(0)|342|(0)|345|(0)|350|(0)|353|(0)|356|(0)|359|(0)|363|(0)|(0)|774|368|(0)|(0)|373|(0)|376|(0)|379|(0)|773|383|(0)|386|(0)(0)|389|(0)|392|(0)|771|395|(0)|770|398|(0)|409|410|411|(0)|767|415|(0)|418|(0)|766|422|(0)|765|426|(0)|764|430|(0)(0)|433|(0)|436|(0)|439|(0)|442|(0)|445|(0)|448|(0)|451|(0)|454|(0)|762|458|(0)|461|(0)|464|(0)|467|(0)|472|(0)|477|(0)|480|(0)|483|(0)|488|(0)|491|(0)|494|(0)|497|(0)|500|(0)|505|(0)|510|(0)|513|(0)|517|518|(0)(0)|521|(0)|756|529|530|(0)|533|(0)|536|(0)|539|(0)|542|(0)|545|(0)|548|(0)|551|(0)|554|(0)|557|(0)|560|(0)|563|(0)|566|(0)|569|(0)|572|(0)|575|(0)|578|(0)|583|(0)|586|(0)|589|(0)|750|(0)(0)|744|745|746|747|595|(0)(0)|598|599|(0)|602|(0)(0)|605|(0)|608|(0)|611|(0)|614|(0)|617|(0)|620|(0)|623|(0)|723|626|(0)|629|(0)|635|(0)|638|(0)|641|(0)|644|(0)|647|648|(0)|651|(0)|656|(0)|659|(0)|662|(0)|669|(0)|672|(0)|677|(0)|722|681|(0)|686|(0)|721|695|(0)|701|(0)(0)|707|(0)|(0)|296|297|(0)|323|301|(0)|304|(0)|307|(0)|310|(0)|313|(0)|316|(0)|319|320|321)|809|247|(0)|805|806|807|808|255|(0)|804|(0)|267|(0)(0)|272|(0)|275|(0)|278|(0)|281|(0)(0)|284|285|(0)(0)|288|(0)|326|(0)(0)|329|330|(0)|333|(0)|336|(0)|339|(0)|342|(0)|345|(0)|350|(0)|353|(0)|356|(0)|359|(0)|363|(0)|(0)|774|368|(0)|(0)|373|(0)|376|(0)|379|(0)|773|383|(0)|386|(0)(0)|389|(0)|392|(0)|771|395|(0)|770|398|(0)|409|410|411|(0)|767|415|(0)|418|(0)|766|422|(0)|765|426|(0)|764|430|(0)(0)|433|(0)|436|(0)|439|(0)|442|(0)|445|(0)|448|(0)|451|(0)|454|(0)|762|458|(0)|461|(0)|464|(0)|467|(0)|472|(0)|477|(0)|480|(0)|483|(0)|488|(0)|491|(0)|494|(0)|497|(0)|500|(0)|505|(0)|510|(0)|513|(0)|517|518|(0)(0)|521|(0)|756|529|530|(0)|533|(0)|536|(0)|539|(0)|542|(0)|545|(0)|548|(0)|551|(0)|554|(0)|557|(0)|560|(0)|563|(0)|566|(0)|569|(0)|572|(0)|575|(0)|578|(0)|583|(0)|586|(0)|589|(0)|750|(0)(0)|744|745|746|747|595|(0)(0)|598|599|(0)|602|(0)(0)|605|(0)|608|(0)|611|(0)|614|(0)|617|(0)|620|(0)|623|(0)|723|626|(0)|629|(0)|635|(0)|638|(0)|641|(0)|644|(0)|647|648|(0)|651|(0)|656|(0)|659|(0)|662|(0)|669|(0)|672|(0)|677|(0)|722|681|(0)|686|(0)|721|695|(0)|701|(0)(0)|707|(0)|(0)|296|297|(0)|323|301|(0)|304|(0)|307|(0)|310|(0)|313|(0)|316|(0)|319|320|321)))|170|171|172|173|174|(0)|176|177|178|179|(0)|181|182|183|184|185|(0)(0)|191|(0)|197|(0)|200|(0)|203|(0)(0)|209|(0)|212|(0)|215|(0)|218|219|220|221|(0)|(0)|226|(0)|229|(0)|232|(0)|235|(0)(0)|238|(0)|241|(0)|809|247|(0)|805|806|807|808|255|(0)|804|(0)|267|(0)(0)|272|(0)|275|(0)|278|(0)|281|(0)(0)|284|285|(0)(0)|288|(0)|326|(0)(0)|329|330|(0)|333|(0)|336|(0)|339|(0)|342|(0)|345|(0)|350|(0)|353|(0)|356|(0)|359|(0)|363|(0)|(0)|774|368|(0)|(0)|373|(0)|376|(0)|379|(0)|773|383|(0)|386|(0)(0)|389|(0)|392|(0)|771|395|(0)|770|398|(0)|409|410|411|(0)|767|415|(0)|418|(0)|766|422|(0)|765|426|(0)|764|430|(0)(0)|433|(0)|436|(0)|439|(0)|442|(0)|445|(0)|448|(0)|451|(0)|454|(0)|762|458|(0)|461|(0)|464|(0)|467|(0)|472|(0)|477|(0)|480|(0)|483|(0)|488|(0)|491|(0)|494|(0)|497|(0)|500|(0)|505|(0)|510|(0)|513|(0)|517|518|(0)(0)|521|(0)|756|529|530|(0)|533|(0)|536|(0)|539|(0)|542|(0)|545|(0)|548|(0)|551|(0)|554|(0)|557|(0)|560|(0)|563|(0)|566|(0)|569|(0)|572|(0)|575|(0)|578|(0)|583|(0)|586|(0)|589|(0)|750|(0)(0)|744|745|746|747|595|(0)(0)|598|599|(0)|602|(0)(0)|605|(0)|608|(0)|611|(0)|614|(0)|617|(0)|620|(0)|623|(0)|723|626|(0)|629|(0)|635|(0)|638|(0)|641|(0)|644|(0)|647|648|(0)|651|(0)|656|(0)|659|(0)|662|(0)|669|(0)|672|(0)|677|(0)|722|681|(0)|686|(0)|721|695|(0)|701|(0)(0)|707|(0)|(0)|296|297|(0)|323|301|(0)|304|(0)|307|(0)|310|(0)|313|(0)|316|(0)|319|320|321)|880|881|882|883|884|885|886|152|(0)(0)|157|(0)|160|(2:163|(0))|166|167|168|(0)|170|171|172|173|174|(0)|176|177|178|179|(0)|181|182|183|184|185|(0)(0)|191|(0)|197|(0)|200|(0)|203|(0)(0)|209|(0)|212|(0)|215|(0)|218|219|220|221|(0)|(0)|226|(0)|229|(0)|232|(0)|235|(0)(0)|238|(0)|241|(0)|809|247|(0)|805|806|807|808|255|(0)|804|(0)|267|(0)(0)|272|(0)|275|(0)|278|(0)|281|(0)(0)|284|285|(0)(0)|288|(0)|326|(0)(0)|329|330|(0)|333|(0)|336|(0)|339|(0)|342|(0)|345|(0)|350|(0)|353|(0)|356|(0)|359|(0)|363|(0)|(0)|774|368|(0)|(0)|373|(0)|376|(0)|379|(0)|773|383|(0)|386|(0)(0)|389|(0)|392|(0)|771|395|(0)|770|398|(0)|409|410|411|(0)|767|415|(0)|418|(0)|766|422|(0)|765|426|(0)|764|430|(0)(0)|433|(0)|436|(0)|439|(0)|442|(0)|445|(0)|448|(0)|451|(0)|454|(0)|762|458|(0)|461|(0)|464|(0)|467|(0)|472|(0)|477|(0)|480|(0)|483|(0)|488|(0)|491|(0)|494|(0)|497|(0)|500|(0)|505|(0)|510|(0)|513|(0)|517|518|(0)(0)|521|(0)|756|529|530|(0)|533|(0)|536|(0)|539|(0)|542|(0)|545|(0)|548|(0)|551|(0)|554|(0)|557|(0)|560|(0)|563|(0)|566|(0)|569|(0)|572|(0)|575|(0)|578|(0)|583|(0)|586|(0)|589|(0)|750|(0)(0)|744|745|746|747|595|(0)(0)|598|599|(0)|602|(0)(0)|605|(0)|608|(0)|611|(0)|614|(0)|617|(0)|620|(0)|623|(0)|723|626|(0)|629|(0)|635|(0)|638|(0)|641|(0)|644|(0)|647|648|(0)|651|(0)|656|(0)|659|(0)|662|(0)|669|(0)|672|(0)|677|(0)|722|681|(0)|686|(0)|721|695|(0)|701|(0)(0)|707|(0)|(0)|296|297|(0)|323|301|(0)|304|(0)|307|(0)|310|(0)|313|(0)|316|(0)|319|320|321)|903|904|905|906|75|(0)|78|79|80|(0)|83|(1:85)|900|87|(1:89)|899|91|(2:93|95)|898|101|(0)(0)|104|(0)|107|(0)|893|110|(1:112)|892|114|(0)|117|(0)|(0)|122|(0)|125|(0)|128|(0)|131|(0)|134|(0)|137|(1:139)|891|142|(0)|145|(341:147|151|152|(0)(0)|157|(0)|160|(0)|166|167|168|(0)|170|171|172|173|174|(0)|176|177|178|179|(0)|181|182|183|184|185|(0)(0)|191|(0)|197|(0)|200|(0)|203|(0)(0)|209|(0)|212|(0)|215|(0)|218|219|220|221|(0)|(0)|226|(0)|229|(0)|232|(0)|235|(0)(0)|238|(0)|241|(0)|809|247|(0)|805|806|807|808|255|(0)|804|(0)|267|(0)(0)|272|(0)|275|(0)|278|(0)|281|(0)(0)|284|285|(0)(0)|288|(0)|326|(0)(0)|329|330|(0)|333|(0)|336|(0)|339|(0)|342|(0)|345|(0)|350|(0)|353|(0)|356|(0)|359|(0)|363|(0)|(0)|774|368|(0)|(0)|373|(0)|376|(0)|379|(0)|773|383|(0)|386|(0)(0)|389|(0)|392|(0)|771|395|(0)|770|398|(0)|409|410|411|(0)|767|415|(0)|418|(0)|766|422|(0)|765|426|(0)|764|430|(0)(0)|433|(0)|436|(0)|439|(0)|442|(0)|445|(0)|448|(0)|451|(0)|454|(0)|762|458|(0)|461|(0)|464|(0)|467|(0)|472|(0)|477|(0)|480|(0)|483|(0)|488|(0)|491|(0)|494|(0)|497|(0)|500|(0)|505|(0)|510|(0)|513|(0)|517|518|(0)(0)|521|(0)|756|529|530|(0)|533|(0)|536|(0)|539|(0)|542|(0)|545|(0)|548|(0)|551|(0)|554|(0)|557|(0)|560|(0)|563|(0)|566|(0)|569|(0)|572|(0)|575|(0)|578|(0)|583|(0)|586|(0)|589|(0)|750|(0)(0)|744|745|746|747|595|(0)(0)|598|599|(0)|602|(0)(0)|605|(0)|608|(0)|611|(0)|614|(0)|617|(0)|620|(0)|623|(0)|723|626|(0)|629|(0)|635|(0)|638|(0)|641|(0)|644|(0)|647|648|(0)|651|(0)|656|(0)|659|(0)|662|(0)|669|(0)|672|(0)|677|(0)|722|681|(0)|686|(0)|721|695|(0)|701|(0)(0)|707|(0)|(0)|296|297|(0)|323|301|(0)|304|(0)|307|(0)|310|(0)|313|(0)|316|(0)|319|320|321)|880|881|882|883|884|885|886|152|(0)(0)|157|(0)|160|(0)|166|167|168|(0)|170|171|172|173|174|(0)|176|177|178|179|(0)|181|182|183|184|185|(0)(0)|191|(0)|197|(0)|200|(0)|203|(0)(0)|209|(0)|212|(0)|215|(0)|218|219|220|221|(0)|(0)|226|(0)|229|(0)|232|(0)|235|(0)(0)|238|(0)|241|(0)|809|247|(0)|805|806|807|808|255|(0)|804|(0)|267|(0)(0)|272|(0)|275|(0)|278|(0)|281|(0)(0)|284|285|(0)(0)|288|(0)|326|(0)(0)|329|330|(0)|333|(0)|336|(0)|339|(0)|342|(0)|345|(0)|350|(0)|353|(0)|356|(0)|359|(0)|363|(0)|(0)|774|368|(0)|(0)|373|(0)|376|(0)|379|(0)|773|383|(0)|386|(0)(0)|389|(0)|392|(0)|771|395|(0)|770|398|(0)|409|410|411|(0)|767|415|(0)|418|(0)|766|422|(0)|765|426|(0)|764|430|(0)(0)|433|(0)|436|(0)|439|(0)|442|(0)|445|(0)|448|(0)|451|(0)|454|(0)|762|458|(0)|461|(0)|464|(0)|467|(0)|472|(0)|477|(0)|480|(0)|483|(0)|488|(0)|491|(0)|494|(0)|497|(0)|500|(0)|505|(0)|510|(0)|513|(0)|517|518|(0)(0)|521|(0)|756|529|530|(0)|533|(0)|536|(0)|539|(0)|542|(0)|545|(0)|548|(0)|551|(0)|554|(0)|557|(0)|560|(0)|563|(0)|566|(0)|569|(0)|572|(0)|575|(0)|578|(0)|583|(0)|586|(0)|589|(0)|750|(0)(0)|744|745|746|747|595|(0)(0)|598|599|(0)|602|(0)(0)|605|(0)|608|(0)|611|(0)|614|(0)|617|(0)|620|(0)|623|(0)|723|626|(0)|629|(0)|635|(0)|638|(0)|641|(0)|644|(0)|647|648|(0)|651|(0)|656|(0)|659|(0)|662|(0)|669|(0)|672|(0)|677|(0)|722|681|(0)|686|(0)|721|695|(0)|701|(0)(0)|707|(0)|(0)|296|297|(0)|323|301|(0)|304|(0)|307|(0)|310|(0)|313|(0)|316|(0)|319|320|321) */
    /* JADX WARN: Can't wrap try/catch for region: R(405:58|59|60|(1:62)|64|65|66|(388:74|75|(1:77)|78|79|80|(1:82)|83|(1:900)|87|(1:899)|91|(1:898)(4:97|98|99|100)|101|(1:103)(1:894)|104|(1:106)|107|(1:893)|110|(1:892)|114|(1:116)|117|(1:119)|(1:121)|122|(1:124)|125|(1:127)|128|(1:130)|131|(1:133)|134|(1:136)|137|(1:891)(1:141)|142|(1:144)|145|(340:151|152|(2:154|(1:156))(1:879)|157|(1:159)|160|(2:163|(1:165))|166|167|168|(3:854|855|(2:867|(326:869|174|(2:846|847)|176|177|178|179|(3:822|823|(2:837|(315:839|185|(2:187|(1:190))(1:818)|191|(2:193|(1:196))|197|(1:199)|200|(1:202)|203|(4:205|206|207|208)(1:817)|209|(1:211)|212|(1:214)|215|(1:217)|218|219|220|221|(1:223)|(1:225)|226|(1:228)|229|(1:231)|232|(1:234)|235|(1:237)(1:810)|238|(1:240)|241|(280:246|247|(262:254|255|(1:804)|(1:266)|267|(3:269|270|271)(1:803)|272|(1:274)|275|(1:277)|278|(1:280)|281|(5:790|791|792|793|794)(1:283)|284|285|(1:287)(1:786)|288|(1:290)|326|(5:777|778|779|780|781)(1:328)|329|330|(1:332)|333|(1:335)|336|(1:338)|339|(1:341)|342|(1:344)|345|(1:349)|350|(1:352)|353|(1:355)|356|(1:358)|359|(1:362)|363|(1:365)|(1:774)|368|(1:370)|(1:372)|373|(1:375)|376|(1:378)|379|(1:773)|383|(1:385)|386|(1:388)(1:772)|389|(1:391)|392|(1:771)|395|(1:770)|398|(2:400|401)|409|410|411|(1:767)|415|(1:417)|418|(1:766)|422|(1:765)|426|(1:764)|430|(1:432)(1:763)|433|(1:435)|436|(1:438)|439|(1:441)|442|(1:444)|445|(1:447)|448|(1:450)|451|(1:453)|454|(1:762)|458|(1:460)|461|(1:463)|464|(1:466)|467|(1:471)|472|(1:476)|477|(1:479)|480|(1:482)|483|(1:487)|488|(1:490)|491|(1:493)|494|(1:496)|497|(1:499)|500|(1:504)|505|(1:509)|510|(1:512)|513|(1:517)|518|(1:520)(2:758|(1:760))|521|(1:756)(4:525|526|527|528)|529|530|(1:532)|533|(1:535)|536|(1:538)|539|(1:541)|542|(1:544)|545|(1:547)|548|(1:550)|551|(1:553)|554|(1:556)|557|(1:559)|560|(1:562)|563|(1:565)|566|(1:568)|569|(1:571)|572|(1:574)|575|(1:577)|578|(1:582)|583|(1:585)|586|(1:588)|589|(80:594|595|(5:727|728|729|730|731)(1:597)|598|599|(1:601)|602|(1:604)(1:724)|605|(1:607)|608|(1:610)|611|(1:613)|614|(1:616)|617|(1:619)|620|(1:622)|623|(1:723)|626|(1:628)|629|(3:631|(1:633)|634)|635|(1:637)|638|(1:640)|641|(1:643)|644|(1:646)|647|648|(1:650)|651|(1:655)|656|(1:658)|659|(1:661)|662|(3:664|(1:666)(1:668)|667)|669|(1:671)|672|(1:676)|677|(1:722)|681|(1:685)|686|(1:721)|695|(1:697)|701|(4:703|704|705|706)(1:720)|707|(1:709)|(2:711|712)|296|297|(1:323)|301|(1:303)|304|(1:306)|307|(1:309)|310|(1:312)|313|(1:315)|316|(1:318)|319|320|321)|750|(1:743)(1:749)|744|745|746|747|595|(0)(0)|598|599|(0)|602|(0)(0)|605|(0)|608|(0)|611|(0)|614|(0)|617|(0)|620|(0)|623|(0)|723|626|(0)|629|(0)|635|(0)|638|(0)|641|(0)|644|(0)|647|648|(0)|651|(2:653|655)|656|(0)|659|(0)|662|(0)|669|(0)|672|(2:674|676)|677|(1:679)|722|681|(2:683|685)|686|(0)|721|695|(0)|701|(0)(0)|707|(0)|(0)|296|297|(1:299)|323|301|(0)|304|(0)|307|(0)|310|(0)|313|(0)|316|(0)|319|320|321)|805|806|807|808|255|(1:257)|804|(0)|267|(0)(0)|272|(0)|275|(0)|278|(0)|281|(0)(0)|284|285|(0)(0)|288|(0)|326|(0)(0)|329|330|(0)|333|(0)|336|(0)|339|(0)|342|(0)|345|(2:347|349)|350|(0)|353|(0)|356|(0)|359|(1:362)|363|(0)|(0)|774|368|(0)|(0)|373|(0)|376|(0)|379|(0)|773|383|(0)|386|(0)(0)|389|(0)|392|(0)|771|395|(0)|770|398|(0)|409|410|411|(1:413)|767|415|(0)|418|(1:420)|766|422|(1:424)|765|426|(1:428)|764|430|(0)(0)|433|(0)|436|(0)|439|(0)|442|(0)|445|(0)|448|(0)|451|(0)|454|(1:456)|762|458|(0)|461|(0)|464|(0)|467|(2:469|471)|472|(2:474|476)|477|(0)|480|(0)|483|(2:485|487)|488|(0)|491|(0)|494|(0)|497|(0)|500|(2:502|504)|505|(2:507|509)|510|(0)|513|(137:515|517|518|(0)(0)|521|(0)|756|529|530|(0)|533|(0)|536|(0)|539|(0)|542|(0)|545|(0)|548|(0)|551|(0)|554|(0)|557|(0)|560|(0)|563|(0)|566|(0)|569|(0)|572|(0)|575|(0)|578|(2:580|582)|583|(0)|586|(0)|589|(85:591|594|595|(0)(0)|598|599|(0)|602|(0)(0)|605|(0)|608|(0)|611|(0)|614|(0)|617|(0)|620|(0)|623|(0)|723|626|(0)|629|(0)|635|(0)|638|(0)|641|(0)|644|(0)|647|648|(0)|651|(0)|656|(0)|659|(0)|662|(0)|669|(0)|672|(0)|677|(0)|722|681|(0)|686|(0)|721|695|(0)|701|(0)(0)|707|(0)|(0)|296|297|(0)|323|301|(0)|304|(0)|307|(0)|310|(0)|313|(0)|316|(0)|319|320|321)|750|(0)(0)|744|745|746|747|595|(0)(0)|598|599|(0)|602|(0)(0)|605|(0)|608|(0)|611|(0)|614|(0)|617|(0)|620|(0)|623|(0)|723|626|(0)|629|(0)|635|(0)|638|(0)|641|(0)|644|(0)|647|648|(0)|651|(0)|656|(0)|659|(0)|662|(0)|669|(0)|672|(0)|677|(0)|722|681|(0)|686|(0)|721|695|(0)|701|(0)(0)|707|(0)|(0)|296|297|(0)|323|301|(0)|304|(0)|307|(0)|310|(0)|313|(0)|316|(0)|319|320|321)|517|518|(0)(0)|521|(0)|756|529|530|(0)|533|(0)|536|(0)|539|(0)|542|(0)|545|(0)|548|(0)|551|(0)|554|(0)|557|(0)|560|(0)|563|(0)|566|(0)|569|(0)|572|(0)|575|(0)|578|(0)|583|(0)|586|(0)|589|(0)|750|(0)(0)|744|745|746|747|595|(0)(0)|598|599|(0)|602|(0)(0)|605|(0)|608|(0)|611|(0)|614|(0)|617|(0)|620|(0)|623|(0)|723|626|(0)|629|(0)|635|(0)|638|(0)|641|(0)|644|(0)|647|648|(0)|651|(0)|656|(0)|659|(0)|662|(0)|669|(0)|672|(0)|677|(0)|722|681|(0)|686|(0)|721|695|(0)|701|(0)(0)|707|(0)|(0)|296|297|(0)|323|301|(0)|304|(0)|307|(0)|310|(0)|313|(0)|316|(0)|319|320|321)|809|247|(276:249|251|254|255|(0)|804|(0)|267|(0)(0)|272|(0)|275|(0)|278|(0)|281|(0)(0)|284|285|(0)(0)|288|(0)|326|(0)(0)|329|330|(0)|333|(0)|336|(0)|339|(0)|342|(0)|345|(0)|350|(0)|353|(0)|356|(0)|359|(0)|363|(0)|(0)|774|368|(0)|(0)|373|(0)|376|(0)|379|(0)|773|383|(0)|386|(0)(0)|389|(0)|392|(0)|771|395|(0)|770|398|(0)|409|410|411|(0)|767|415|(0)|418|(0)|766|422|(0)|765|426|(0)|764|430|(0)(0)|433|(0)|436|(0)|439|(0)|442|(0)|445|(0)|448|(0)|451|(0)|454|(0)|762|458|(0)|461|(0)|464|(0)|467|(0)|472|(0)|477|(0)|480|(0)|483|(0)|488|(0)|491|(0)|494|(0)|497|(0)|500|(0)|505|(0)|510|(0)|513|(0)|517|518|(0)(0)|521|(0)|756|529|530|(0)|533|(0)|536|(0)|539|(0)|542|(0)|545|(0)|548|(0)|551|(0)|554|(0)|557|(0)|560|(0)|563|(0)|566|(0)|569|(0)|572|(0)|575|(0)|578|(0)|583|(0)|586|(0)|589|(0)|750|(0)(0)|744|745|746|747|595|(0)(0)|598|599|(0)|602|(0)(0)|605|(0)|608|(0)|611|(0)|614|(0)|617|(0)|620|(0)|623|(0)|723|626|(0)|629|(0)|635|(0)|638|(0)|641|(0)|644|(0)|647|648|(0)|651|(0)|656|(0)|659|(0)|662|(0)|669|(0)|672|(0)|677|(0)|722|681|(0)|686|(0)|721|695|(0)|701|(0)(0)|707|(0)|(0)|296|297|(0)|323|301|(0)|304|(0)|307|(0)|310|(0)|313|(0)|316|(0)|319|320|321)|805|806|807|808|255|(0)|804|(0)|267|(0)(0)|272|(0)|275|(0)|278|(0)|281|(0)(0)|284|285|(0)(0)|288|(0)|326|(0)(0)|329|330|(0)|333|(0)|336|(0)|339|(0)|342|(0)|345|(0)|350|(0)|353|(0)|356|(0)|359|(0)|363|(0)|(0)|774|368|(0)|(0)|373|(0)|376|(0)|379|(0)|773|383|(0)|386|(0)(0)|389|(0)|392|(0)|771|395|(0)|770|398|(0)|409|410|411|(0)|767|415|(0)|418|(0)|766|422|(0)|765|426|(0)|764|430|(0)(0)|433|(0)|436|(0)|439|(0)|442|(0)|445|(0)|448|(0)|451|(0)|454|(0)|762|458|(0)|461|(0)|464|(0)|467|(0)|472|(0)|477|(0)|480|(0)|483|(0)|488|(0)|491|(0)|494|(0)|497|(0)|500|(0)|505|(0)|510|(0)|513|(0)|517|518|(0)(0)|521|(0)|756|529|530|(0)|533|(0)|536|(0)|539|(0)|542|(0)|545|(0)|548|(0)|551|(0)|554|(0)|557|(0)|560|(0)|563|(0)|566|(0)|569|(0)|572|(0)|575|(0)|578|(0)|583|(0)|586|(0)|589|(0)|750|(0)(0)|744|745|746|747|595|(0)(0)|598|599|(0)|602|(0)(0)|605|(0)|608|(0)|611|(0)|614|(0)|617|(0)|620|(0)|623|(0)|723|626|(0)|629|(0)|635|(0)|638|(0)|641|(0)|644|(0)|647|648|(0)|651|(0)|656|(0)|659|(0)|662|(0)|669|(0)|672|(0)|677|(0)|722|681|(0)|686|(0)|721|695|(0)|701|(0)(0)|707|(0)|(0)|296|297|(0)|323|301|(0)|304|(0)|307|(0)|310|(0)|313|(0)|316|(0)|319|320|321)))|181|182|183|184|185|(0)(0)|191|(0)|197|(0)|200|(0)|203|(0)(0)|209|(0)|212|(0)|215|(0)|218|219|220|221|(0)|(0)|226|(0)|229|(0)|232|(0)|235|(0)(0)|238|(0)|241|(281:243|246|247|(0)|805|806|807|808|255|(0)|804|(0)|267|(0)(0)|272|(0)|275|(0)|278|(0)|281|(0)(0)|284|285|(0)(0)|288|(0)|326|(0)(0)|329|330|(0)|333|(0)|336|(0)|339|(0)|342|(0)|345|(0)|350|(0)|353|(0)|356|(0)|359|(0)|363|(0)|(0)|774|368|(0)|(0)|373|(0)|376|(0)|379|(0)|773|383|(0)|386|(0)(0)|389|(0)|392|(0)|771|395|(0)|770|398|(0)|409|410|411|(0)|767|415|(0)|418|(0)|766|422|(0)|765|426|(0)|764|430|(0)(0)|433|(0)|436|(0)|439|(0)|442|(0)|445|(0)|448|(0)|451|(0)|454|(0)|762|458|(0)|461|(0)|464|(0)|467|(0)|472|(0)|477|(0)|480|(0)|483|(0)|488|(0)|491|(0)|494|(0)|497|(0)|500|(0)|505|(0)|510|(0)|513|(0)|517|518|(0)(0)|521|(0)|756|529|530|(0)|533|(0)|536|(0)|539|(0)|542|(0)|545|(0)|548|(0)|551|(0)|554|(0)|557|(0)|560|(0)|563|(0)|566|(0)|569|(0)|572|(0)|575|(0)|578|(0)|583|(0)|586|(0)|589|(0)|750|(0)(0)|744|745|746|747|595|(0)(0)|598|599|(0)|602|(0)(0)|605|(0)|608|(0)|611|(0)|614|(0)|617|(0)|620|(0)|623|(0)|723|626|(0)|629|(0)|635|(0)|638|(0)|641|(0)|644|(0)|647|648|(0)|651|(0)|656|(0)|659|(0)|662|(0)|669|(0)|672|(0)|677|(0)|722|681|(0)|686|(0)|721|695|(0)|701|(0)(0)|707|(0)|(0)|296|297|(0)|323|301|(0)|304|(0)|307|(0)|310|(0)|313|(0)|316|(0)|319|320|321)|809|247|(0)|805|806|807|808|255|(0)|804|(0)|267|(0)(0)|272|(0)|275|(0)|278|(0)|281|(0)(0)|284|285|(0)(0)|288|(0)|326|(0)(0)|329|330|(0)|333|(0)|336|(0)|339|(0)|342|(0)|345|(0)|350|(0)|353|(0)|356|(0)|359|(0)|363|(0)|(0)|774|368|(0)|(0)|373|(0)|376|(0)|379|(0)|773|383|(0)|386|(0)(0)|389|(0)|392|(0)|771|395|(0)|770|398|(0)|409|410|411|(0)|767|415|(0)|418|(0)|766|422|(0)|765|426|(0)|764|430|(0)(0)|433|(0)|436|(0)|439|(0)|442|(0)|445|(0)|448|(0)|451|(0)|454|(0)|762|458|(0)|461|(0)|464|(0)|467|(0)|472|(0)|477|(0)|480|(0)|483|(0)|488|(0)|491|(0)|494|(0)|497|(0)|500|(0)|505|(0)|510|(0)|513|(0)|517|518|(0)(0)|521|(0)|756|529|530|(0)|533|(0)|536|(0)|539|(0)|542|(0)|545|(0)|548|(0)|551|(0)|554|(0)|557|(0)|560|(0)|563|(0)|566|(0)|569|(0)|572|(0)|575|(0)|578|(0)|583|(0)|586|(0)|589|(0)|750|(0)(0)|744|745|746|747|595|(0)(0)|598|599|(0)|602|(0)(0)|605|(0)|608|(0)|611|(0)|614|(0)|617|(0)|620|(0)|623|(0)|723|626|(0)|629|(0)|635|(0)|638|(0)|641|(0)|644|(0)|647|648|(0)|651|(0)|656|(0)|659|(0)|662|(0)|669|(0)|672|(0)|677|(0)|722|681|(0)|686|(0)|721|695|(0)|701|(0)(0)|707|(0)|(0)|296|297|(0)|323|301|(0)|304|(0)|307|(0)|310|(0)|313|(0)|316|(0)|319|320|321)))|170|171|172|173|174|(0)|176|177|178|179|(0)|181|182|183|184|185|(0)(0)|191|(0)|197|(0)|200|(0)|203|(0)(0)|209|(0)|212|(0)|215|(0)|218|219|220|221|(0)|(0)|226|(0)|229|(0)|232|(0)|235|(0)(0)|238|(0)|241|(0)|809|247|(0)|805|806|807|808|255|(0)|804|(0)|267|(0)(0)|272|(0)|275|(0)|278|(0)|281|(0)(0)|284|285|(0)(0)|288|(0)|326|(0)(0)|329|330|(0)|333|(0)|336|(0)|339|(0)|342|(0)|345|(0)|350|(0)|353|(0)|356|(0)|359|(0)|363|(0)|(0)|774|368|(0)|(0)|373|(0)|376|(0)|379|(0)|773|383|(0)|386|(0)(0)|389|(0)|392|(0)|771|395|(0)|770|398|(0)|409|410|411|(0)|767|415|(0)|418|(0)|766|422|(0)|765|426|(0)|764|430|(0)(0)|433|(0)|436|(0)|439|(0)|442|(0)|445|(0)|448|(0)|451|(0)|454|(0)|762|458|(0)|461|(0)|464|(0)|467|(0)|472|(0)|477|(0)|480|(0)|483|(0)|488|(0)|491|(0)|494|(0)|497|(0)|500|(0)|505|(0)|510|(0)|513|(0)|517|518|(0)(0)|521|(0)|756|529|530|(0)|533|(0)|536|(0)|539|(0)|542|(0)|545|(0)|548|(0)|551|(0)|554|(0)|557|(0)|560|(0)|563|(0)|566|(0)|569|(0)|572|(0)|575|(0)|578|(0)|583|(0)|586|(0)|589|(0)|750|(0)(0)|744|745|746|747|595|(0)(0)|598|599|(0)|602|(0)(0)|605|(0)|608|(0)|611|(0)|614|(0)|617|(0)|620|(0)|623|(0)|723|626|(0)|629|(0)|635|(0)|638|(0)|641|(0)|644|(0)|647|648|(0)|651|(0)|656|(0)|659|(0)|662|(0)|669|(0)|672|(0)|677|(0)|722|681|(0)|686|(0)|721|695|(0)|701|(0)(0)|707|(0)|(0)|296|297|(0)|323|301|(0)|304|(0)|307|(0)|310|(0)|313|(0)|316|(0)|319|320|321)|880|881|882|883|884|885|886|152|(0)(0)|157|(0)|160|(2:163|(0))|166|167|168|(0)|170|171|172|173|174|(0)|176|177|178|179|(0)|181|182|183|184|185|(0)(0)|191|(0)|197|(0)|200|(0)|203|(0)(0)|209|(0)|212|(0)|215|(0)|218|219|220|221|(0)|(0)|226|(0)|229|(0)|232|(0)|235|(0)(0)|238|(0)|241|(0)|809|247|(0)|805|806|807|808|255|(0)|804|(0)|267|(0)(0)|272|(0)|275|(0)|278|(0)|281|(0)(0)|284|285|(0)(0)|288|(0)|326|(0)(0)|329|330|(0)|333|(0)|336|(0)|339|(0)|342|(0)|345|(0)|350|(0)|353|(0)|356|(0)|359|(0)|363|(0)|(0)|774|368|(0)|(0)|373|(0)|376|(0)|379|(0)|773|383|(0)|386|(0)(0)|389|(0)|392|(0)|771|395|(0)|770|398|(0)|409|410|411|(0)|767|415|(0)|418|(0)|766|422|(0)|765|426|(0)|764|430|(0)(0)|433|(0)|436|(0)|439|(0)|442|(0)|445|(0)|448|(0)|451|(0)|454|(0)|762|458|(0)|461|(0)|464|(0)|467|(0)|472|(0)|477|(0)|480|(0)|483|(0)|488|(0)|491|(0)|494|(0)|497|(0)|500|(0)|505|(0)|510|(0)|513|(0)|517|518|(0)(0)|521|(0)|756|529|530|(0)|533|(0)|536|(0)|539|(0)|542|(0)|545|(0)|548|(0)|551|(0)|554|(0)|557|(0)|560|(0)|563|(0)|566|(0)|569|(0)|572|(0)|575|(0)|578|(0)|583|(0)|586|(0)|589|(0)|750|(0)(0)|744|745|746|747|595|(0)(0)|598|599|(0)|602|(0)(0)|605|(0)|608|(0)|611|(0)|614|(0)|617|(0)|620|(0)|623|(0)|723|626|(0)|629|(0)|635|(0)|638|(0)|641|(0)|644|(0)|647|648|(0)|651|(0)|656|(0)|659|(0)|662|(0)|669|(0)|672|(0)|677|(0)|722|681|(0)|686|(0)|721|695|(0)|701|(0)(0)|707|(0)|(0)|296|297|(0)|323|301|(0)|304|(0)|307|(0)|310|(0)|313|(0)|316|(0)|319|320|321)|903|904|905|906|75|(0)|78|79|80|(0)|83|(1:85)|900|87|(1:89)|899|91|(2:93|95)|898|101|(0)(0)|104|(0)|107|(0)|893|110|(1:112)|892|114|(0)|117|(0)|(0)|122|(0)|125|(0)|128|(0)|131|(0)|134|(0)|137|(1:139)|891|142|(0)|145|(341:147|151|152|(0)(0)|157|(0)|160|(0)|166|167|168|(0)|170|171|172|173|174|(0)|176|177|178|179|(0)|181|182|183|184|185|(0)(0)|191|(0)|197|(0)|200|(0)|203|(0)(0)|209|(0)|212|(0)|215|(0)|218|219|220|221|(0)|(0)|226|(0)|229|(0)|232|(0)|235|(0)(0)|238|(0)|241|(0)|809|247|(0)|805|806|807|808|255|(0)|804|(0)|267|(0)(0)|272|(0)|275|(0)|278|(0)|281|(0)(0)|284|285|(0)(0)|288|(0)|326|(0)(0)|329|330|(0)|333|(0)|336|(0)|339|(0)|342|(0)|345|(0)|350|(0)|353|(0)|356|(0)|359|(0)|363|(0)|(0)|774|368|(0)|(0)|373|(0)|376|(0)|379|(0)|773|383|(0)|386|(0)(0)|389|(0)|392|(0)|771|395|(0)|770|398|(0)|409|410|411|(0)|767|415|(0)|418|(0)|766|422|(0)|765|426|(0)|764|430|(0)(0)|433|(0)|436|(0)|439|(0)|442|(0)|445|(0)|448|(0)|451|(0)|454|(0)|762|458|(0)|461|(0)|464|(0)|467|(0)|472|(0)|477|(0)|480|(0)|483|(0)|488|(0)|491|(0)|494|(0)|497|(0)|500|(0)|505|(0)|510|(0)|513|(0)|517|518|(0)(0)|521|(0)|756|529|530|(0)|533|(0)|536|(0)|539|(0)|542|(0)|545|(0)|548|(0)|551|(0)|554|(0)|557|(0)|560|(0)|563|(0)|566|(0)|569|(0)|572|(0)|575|(0)|578|(0)|583|(0)|586|(0)|589|(0)|750|(0)(0)|744|745|746|747|595|(0)(0)|598|599|(0)|602|(0)(0)|605|(0)|608|(0)|611|(0)|614|(0)|617|(0)|620|(0)|623|(0)|723|626|(0)|629|(0)|635|(0)|638|(0)|641|(0)|644|(0)|647|648|(0)|651|(0)|656|(0)|659|(0)|662|(0)|669|(0)|672|(0)|677|(0)|722|681|(0)|686|(0)|721|695|(0)|701|(0)(0)|707|(0)|(0)|296|297|(0)|323|301|(0)|304|(0)|307|(0)|310|(0)|313|(0)|316|(0)|319|320|321)|880|881|882|883|884|885|886|152|(0)(0)|157|(0)|160|(0)|166|167|168|(0)|170|171|172|173|174|(0)|176|177|178|179|(0)|181|182|183|184|185|(0)(0)|191|(0)|197|(0)|200|(0)|203|(0)(0)|209|(0)|212|(0)|215|(0)|218|219|220|221|(0)|(0)|226|(0)|229|(0)|232|(0)|235|(0)(0)|238|(0)|241|(0)|809|247|(0)|805|806|807|808|255|(0)|804|(0)|267|(0)(0)|272|(0)|275|(0)|278|(0)|281|(0)(0)|284|285|(0)(0)|288|(0)|326|(0)(0)|329|330|(0)|333|(0)|336|(0)|339|(0)|342|(0)|345|(0)|350|(0)|353|(0)|356|(0)|359|(0)|363|(0)|(0)|774|368|(0)|(0)|373|(0)|376|(0)|379|(0)|773|383|(0)|386|(0)(0)|389|(0)|392|(0)|771|395|(0)|770|398|(0)|409|410|411|(0)|767|415|(0)|418|(0)|766|422|(0)|765|426|(0)|764|430|(0)(0)|433|(0)|436|(0)|439|(0)|442|(0)|445|(0)|448|(0)|451|(0)|454|(0)|762|458|(0)|461|(0)|464|(0)|467|(0)|472|(0)|477|(0)|480|(0)|483|(0)|488|(0)|491|(0)|494|(0)|497|(0)|500|(0)|505|(0)|510|(0)|513|(0)|517|518|(0)(0)|521|(0)|756|529|530|(0)|533|(0)|536|(0)|539|(0)|542|(0)|545|(0)|548|(0)|551|(0)|554|(0)|557|(0)|560|(0)|563|(0)|566|(0)|569|(0)|572|(0)|575|(0)|578|(0)|583|(0)|586|(0)|589|(0)|750|(0)(0)|744|745|746|747|595|(0)(0)|598|599|(0)|602|(0)(0)|605|(0)|608|(0)|611|(0)|614|(0)|617|(0)|620|(0)|623|(0)|723|626|(0)|629|(0)|635|(0)|638|(0)|641|(0)|644|(0)|647|648|(0)|651|(0)|656|(0)|659|(0)|662|(0)|669|(0)|672|(0)|677|(0)|722|681|(0)|686|(0)|721|695|(0)|701|(0)(0)|707|(0)|(0)|296|297|(0)|323|301|(0)|304|(0)|307|(0)|310|(0)|313|(0)|316|(0)|319|320|321) */
    /* JADX WARN: Code restructure failed: missing block: B:129:0x02fe, code lost:
        r0 = th;
     */
    /* JADX WARN: Code restructure failed: missing block: B:133:0x0305, code lost:
        com.applisto.appcloner.classes.util.Log.m13698w(com.applisto.appcloner.classes.DefaultProvider.TAG, r0);
     */
    /* JADX WARN: Code restructure failed: missing block: B:713:0x1a76, code lost:
        r11 = r7.getString("toastHorizontalAlignment", "CENTER");
     */
    /* JADX WARN: Code restructure failed: missing block: B:856:0x2028, code lost:
        r0 = th;
     */
    /* JADX WARN: Code restructure failed: missing block: B:857:0x2029, code lost:
        r6 = r38;
     */
    /* JADX WARN: Code restructure failed: missing block: B:858:0x202d, code lost:
        r0 = th;
     */
    /* JADX WARN: Code restructure failed: missing block: B:860:0x202f, code lost:
        r0 = th;
     */
    /* JADX WARN: Code restructure failed: missing block: B:862:0x2032, code lost:
        r0 = th;
     */
    /* JADX WARN: Code restructure failed: missing block: B:864:0x2034, code lost:
        r0 = th;
     */
    /* JADX WARN: Code restructure failed: missing block: B:865:0x2035, code lost:
        r2 = r41;
        r6 = r4;
        r39 = r9;
     */
    /* JADX WARN: Code restructure failed: missing block: B:866:0x203b, code lost:
        r0 = th;
     */
    /* JADX WARN: Code restructure failed: missing block: B:867:0x203c, code lost:
        r2 = r1;
        r5 = r3;
        r6 = r4;
     */
    /* JADX WARN: Code restructure failed: missing block: B:868:0x2040, code lost:
        r0 = th;
     */
    /* JADX WARN: Code restructure failed: missing block: B:869:0x2041, code lost:
        r2 = r1;
        r5 = r3;
     */
    /* JADX WARN: Code restructure failed: missing block: B:870:0x2043, code lost:
        r6 = r4;
        r39 = r9;
     */
    /* JADX WARN: Code restructure failed: missing block: B:873:0x204b, code lost:
        r0 = th;
     */
    /* JADX WARN: Code restructure failed: missing block: B:874:0x204c, code lost:
        r2 = r1;
        r5 = r3;
        r6 = r30;
     */
    /* JADX WARN: Code restructure failed: missing block: B:875:0x2051, code lost:
        r0 = th;
     */
    /* JADX WARN: Code restructure failed: missing block: B:876:0x2052, code lost:
        r2 = r41;
        r6 = r30;
        r5 = r36;
     */
    /* JADX WARN: Code restructure failed: missing block: B:877:0x2058, code lost:
        r39 = r37;
     */
    /* JADX WARN: Code restructure failed: missing block: B:878:0x205b, code lost:
        r0 = th;
     */
    /* JADX WARN: Code restructure failed: missing block: B:879:0x205c, code lost:
        r2 = r41;
        r39 = r6;
        r6 = r30;
     */
    /* JADX WARN: Code restructure failed: missing block: B:880:0x2062, code lost:
        r5 = r36;
     */
    /* JADX WARN: Code restructure failed: missing block: B:881:0x2065, code lost:
        r0 = th;
     */
    /* JADX WARN: Code restructure failed: missing block: B:882:0x2066, code lost:
        r2 = r41;
     */
    /* JADX WARN: Code restructure failed: missing block: B:883:0x2069, code lost:
        r0 = th;
     */
    /* JADX WARN: Code restructure failed: missing block: B:884:0x206a, code lost:
        r2 = r41;
     */
    /* JADX WARN: Code restructure failed: missing block: B:885:0x206b, code lost:
        r5 = "install";
     */
    /* JADX WARN: Code restructure failed: missing block: B:886:0x206c, code lost:
        r39 = r28;
     */
    /* JADX WARN: Code restructure failed: missing block: B:888:0x2071, code lost:
        r0 = th;
     */
    /* JADX WARN: Code restructure failed: missing block: B:889:0x2072, code lost:
        r2 = r41;
        r5 = "install";
     */
    /* JADX WARN: Code restructure failed: missing block: B:893:0x207e, code lost:
        r0 = th;
     */
    /* JADX WARN: Code restructure failed: missing block: B:894:0x207f, code lost:
        r2 = r41;
        r5 = "install";
        r6 = r11;
        r39 = r29;
     */
    /* JADX WARN: Code restructure failed: missing block: B:922:0x214a, code lost:
        r0 = move-exception;
     */
    /* JADX WARN: Code restructure failed: missing block: B:923:0x214b, code lost:
        com.applisto.appcloner.classes.util.Log.m13698w(com.applisto.appcloner.classes.DefaultProvider.TAG, r0);
     */
    /* JADX WARN: Code restructure failed: missing block: B:94:0x01fe, code lost:
        r0 = move-exception;
     */
    /* JADX WARN: Code restructure failed: missing block: B:95:0x01ff, code lost:
        com.applisto.appcloner.classes.util.Log.m13698w(com.applisto.appcloner.classes.DefaultProvider.TAG, r0);
     */
    /* JADX WARN: Removed duplicated region for block: B:1006:0x09a5 A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:100:0x0226 A[Catch: Exception -> 0x022c, TryCatch #0 {Exception -> 0x022c, blocks: (B:97:0x0209, B:100:0x0226, B:101:0x022b), top: B:928:0x0209 }] */
    /* JADX WARN: Removed duplicated region for block: B:1011:0x1184 A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:136:0x0383  */
    /* JADX WARN: Removed duplicated region for block: B:140:0x03c7 A[Catch: all -> 0x207e, TryCatch #26 {all -> 0x207e, blocks: (B:138:0x03bb, B:140:0x03c7, B:141:0x03d9, B:143:0x03e5, B:146:0x03f9, B:148:0x0409, B:151:0x041f, B:153:0x042b, B:155:0x0433, B:157:0x043b, B:150:0x0411, B:145:0x03f1), top: B:974:0x03bb }] */
    /* JADX WARN: Removed duplicated region for block: B:143:0x03e5 A[Catch: all -> 0x207e, TryCatch #26 {all -> 0x207e, blocks: (B:138:0x03bb, B:140:0x03c7, B:141:0x03d9, B:143:0x03e5, B:146:0x03f9, B:148:0x0409, B:151:0x041f, B:153:0x042b, B:155:0x0433, B:157:0x043b, B:150:0x0411, B:145:0x03f1), top: B:974:0x03bb }] */
    /* JADX WARN: Removed duplicated region for block: B:148:0x0409 A[Catch: all -> 0x207e, TryCatch #26 {all -> 0x207e, blocks: (B:138:0x03bb, B:140:0x03c7, B:141:0x03d9, B:143:0x03e5, B:146:0x03f9, B:148:0x0409, B:151:0x041f, B:153:0x042b, B:155:0x0433, B:157:0x043b, B:150:0x0411, B:145:0x03f1), top: B:974:0x03bb }] */
    /* JADX WARN: Removed duplicated region for block: B:153:0x042b A[Catch: all -> 0x207e, TryCatch #26 {all -> 0x207e, blocks: (B:138:0x03bb, B:140:0x03c7, B:141:0x03d9, B:143:0x03e5, B:146:0x03f9, B:148:0x0409, B:151:0x041f, B:153:0x042b, B:155:0x0433, B:157:0x043b, B:150:0x0411, B:145:0x03f1), top: B:974:0x03bb }] */
    /* JADX WARN: Removed duplicated region for block: B:163:0x0478 A[Catch: all -> 0x2077, TryCatch #22 {all -> 0x2077, blocks: (B:159:0x0455, B:161:0x046a, B:163:0x0478, B:165:0x04d2, B:167:0x04de, B:168:0x04fb, B:172:0x054b, B:174:0x055e, B:177:0x0592, B:179:0x059e, B:180:0x05d1, B:184:0x05e6, B:185:0x0603, B:187:0x060f, B:188:0x061d, B:190:0x0629, B:191:0x0646, B:193:0x0652, B:194:0x066f, B:196:0x067b, B:197:0x0698, B:199:0x06a4, B:200:0x06de, B:202:0x06e6, B:204:0x06ec, B:206:0x0709, B:208:0x0732, B:209:0x074e, B:211:0x076c, B:216:0x0780, B:205:0x06fb, B:176:0x0564, B:171:0x0527), top: B:967:0x0455 }] */
    /* JADX WARN: Removed duplicated region for block: B:164:0x04d0  */
    /* JADX WARN: Removed duplicated region for block: B:167:0x04de A[Catch: all -> 0x2077, TryCatch #22 {all -> 0x2077, blocks: (B:159:0x0455, B:161:0x046a, B:163:0x0478, B:165:0x04d2, B:167:0x04de, B:168:0x04fb, B:172:0x054b, B:174:0x055e, B:177:0x0592, B:179:0x059e, B:180:0x05d1, B:184:0x05e6, B:185:0x0603, B:187:0x060f, B:188:0x061d, B:190:0x0629, B:191:0x0646, B:193:0x0652, B:194:0x066f, B:196:0x067b, B:197:0x0698, B:199:0x06a4, B:200:0x06de, B:202:0x06e6, B:204:0x06ec, B:206:0x0709, B:208:0x0732, B:209:0x074e, B:211:0x076c, B:216:0x0780, B:205:0x06fb, B:176:0x0564, B:171:0x0527), top: B:967:0x0455 }] */
    /* JADX WARN: Removed duplicated region for block: B:170:0x0525 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:174:0x055e A[Catch: all -> 0x2077, TryCatch #22 {all -> 0x2077, blocks: (B:159:0x0455, B:161:0x046a, B:163:0x0478, B:165:0x04d2, B:167:0x04de, B:168:0x04fb, B:172:0x054b, B:174:0x055e, B:177:0x0592, B:179:0x059e, B:180:0x05d1, B:184:0x05e6, B:185:0x0603, B:187:0x060f, B:188:0x061d, B:190:0x0629, B:191:0x0646, B:193:0x0652, B:194:0x066f, B:196:0x067b, B:197:0x0698, B:199:0x06a4, B:200:0x06de, B:202:0x06e6, B:204:0x06ec, B:206:0x0709, B:208:0x0732, B:209:0x074e, B:211:0x076c, B:216:0x0780, B:205:0x06fb, B:176:0x0564, B:171:0x0527), top: B:967:0x0455 }] */
    /* JADX WARN: Removed duplicated region for block: B:179:0x059e A[Catch: all -> 0x2077, TryCatch #22 {all -> 0x2077, blocks: (B:159:0x0455, B:161:0x046a, B:163:0x0478, B:165:0x04d2, B:167:0x04de, B:168:0x04fb, B:172:0x054b, B:174:0x055e, B:177:0x0592, B:179:0x059e, B:180:0x05d1, B:184:0x05e6, B:185:0x0603, B:187:0x060f, B:188:0x061d, B:190:0x0629, B:191:0x0646, B:193:0x0652, B:194:0x066f, B:196:0x067b, B:197:0x0698, B:199:0x06a4, B:200:0x06de, B:202:0x06e6, B:204:0x06ec, B:206:0x0709, B:208:0x0732, B:209:0x074e, B:211:0x076c, B:216:0x0780, B:205:0x06fb, B:176:0x0564, B:171:0x0527), top: B:967:0x0455 }] */
    /* JADX WARN: Removed duplicated region for block: B:182:0x05e3  */
    /* JADX WARN: Removed duplicated region for block: B:184:0x05e6 A[Catch: all -> 0x2077, TryCatch #22 {all -> 0x2077, blocks: (B:159:0x0455, B:161:0x046a, B:163:0x0478, B:165:0x04d2, B:167:0x04de, B:168:0x04fb, B:172:0x054b, B:174:0x055e, B:177:0x0592, B:179:0x059e, B:180:0x05d1, B:184:0x05e6, B:185:0x0603, B:187:0x060f, B:188:0x061d, B:190:0x0629, B:191:0x0646, B:193:0x0652, B:194:0x066f, B:196:0x067b, B:197:0x0698, B:199:0x06a4, B:200:0x06de, B:202:0x06e6, B:204:0x06ec, B:206:0x0709, B:208:0x0732, B:209:0x074e, B:211:0x076c, B:216:0x0780, B:205:0x06fb, B:176:0x0564, B:171:0x0527), top: B:967:0x0455 }] */
    /* JADX WARN: Removed duplicated region for block: B:187:0x060f A[Catch: all -> 0x2077, TryCatch #22 {all -> 0x2077, blocks: (B:159:0x0455, B:161:0x046a, B:163:0x0478, B:165:0x04d2, B:167:0x04de, B:168:0x04fb, B:172:0x054b, B:174:0x055e, B:177:0x0592, B:179:0x059e, B:180:0x05d1, B:184:0x05e6, B:185:0x0603, B:187:0x060f, B:188:0x061d, B:190:0x0629, B:191:0x0646, B:193:0x0652, B:194:0x066f, B:196:0x067b, B:197:0x0698, B:199:0x06a4, B:200:0x06de, B:202:0x06e6, B:204:0x06ec, B:206:0x0709, B:208:0x0732, B:209:0x074e, B:211:0x076c, B:216:0x0780, B:205:0x06fb, B:176:0x0564, B:171:0x0527), top: B:967:0x0455 }] */
    /* JADX WARN: Removed duplicated region for block: B:190:0x0629 A[Catch: all -> 0x2077, TryCatch #22 {all -> 0x2077, blocks: (B:159:0x0455, B:161:0x046a, B:163:0x0478, B:165:0x04d2, B:167:0x04de, B:168:0x04fb, B:172:0x054b, B:174:0x055e, B:177:0x0592, B:179:0x059e, B:180:0x05d1, B:184:0x05e6, B:185:0x0603, B:187:0x060f, B:188:0x061d, B:190:0x0629, B:191:0x0646, B:193:0x0652, B:194:0x066f, B:196:0x067b, B:197:0x0698, B:199:0x06a4, B:200:0x06de, B:202:0x06e6, B:204:0x06ec, B:206:0x0709, B:208:0x0732, B:209:0x074e, B:211:0x076c, B:216:0x0780, B:205:0x06fb, B:176:0x0564, B:171:0x0527), top: B:967:0x0455 }] */
    /* JADX WARN: Removed duplicated region for block: B:193:0x0652 A[Catch: all -> 0x2077, TryCatch #22 {all -> 0x2077, blocks: (B:159:0x0455, B:161:0x046a, B:163:0x0478, B:165:0x04d2, B:167:0x04de, B:168:0x04fb, B:172:0x054b, B:174:0x055e, B:177:0x0592, B:179:0x059e, B:180:0x05d1, B:184:0x05e6, B:185:0x0603, B:187:0x060f, B:188:0x061d, B:190:0x0629, B:191:0x0646, B:193:0x0652, B:194:0x066f, B:196:0x067b, B:197:0x0698, B:199:0x06a4, B:200:0x06de, B:202:0x06e6, B:204:0x06ec, B:206:0x0709, B:208:0x0732, B:209:0x074e, B:211:0x076c, B:216:0x0780, B:205:0x06fb, B:176:0x0564, B:171:0x0527), top: B:967:0x0455 }] */
    /* JADX WARN: Removed duplicated region for block: B:196:0x067b A[Catch: all -> 0x2077, TryCatch #22 {all -> 0x2077, blocks: (B:159:0x0455, B:161:0x046a, B:163:0x0478, B:165:0x04d2, B:167:0x04de, B:168:0x04fb, B:172:0x054b, B:174:0x055e, B:177:0x0592, B:179:0x059e, B:180:0x05d1, B:184:0x05e6, B:185:0x0603, B:187:0x060f, B:188:0x061d, B:190:0x0629, B:191:0x0646, B:193:0x0652, B:194:0x066f, B:196:0x067b, B:197:0x0698, B:199:0x06a4, B:200:0x06de, B:202:0x06e6, B:204:0x06ec, B:206:0x0709, B:208:0x0732, B:209:0x074e, B:211:0x076c, B:216:0x0780, B:205:0x06fb, B:176:0x0564, B:171:0x0527), top: B:967:0x0455 }] */
    /* JADX WARN: Removed duplicated region for block: B:199:0x06a4 A[Catch: all -> 0x2077, TryCatch #22 {all -> 0x2077, blocks: (B:159:0x0455, B:161:0x046a, B:163:0x0478, B:165:0x04d2, B:167:0x04de, B:168:0x04fb, B:172:0x054b, B:174:0x055e, B:177:0x0592, B:179:0x059e, B:180:0x05d1, B:184:0x05e6, B:185:0x0603, B:187:0x060f, B:188:0x061d, B:190:0x0629, B:191:0x0646, B:193:0x0652, B:194:0x066f, B:196:0x067b, B:197:0x0698, B:199:0x06a4, B:200:0x06de, B:202:0x06e6, B:204:0x06ec, B:206:0x0709, B:208:0x0732, B:209:0x074e, B:211:0x076c, B:216:0x0780, B:205:0x06fb, B:176:0x0564, B:171:0x0527), top: B:967:0x0455 }] */
    /* JADX WARN: Removed duplicated region for block: B:202:0x06e6 A[Catch: all -> 0x2077, TryCatch #22 {all -> 0x2077, blocks: (B:159:0x0455, B:161:0x046a, B:163:0x0478, B:165:0x04d2, B:167:0x04de, B:168:0x04fb, B:172:0x054b, B:174:0x055e, B:177:0x0592, B:179:0x059e, B:180:0x05d1, B:184:0x05e6, B:185:0x0603, B:187:0x060f, B:188:0x061d, B:190:0x0629, B:191:0x0646, B:193:0x0652, B:194:0x066f, B:196:0x067b, B:197:0x0698, B:199:0x06a4, B:200:0x06de, B:202:0x06e6, B:204:0x06ec, B:206:0x0709, B:208:0x0732, B:209:0x074e, B:211:0x076c, B:216:0x0780, B:205:0x06fb, B:176:0x0564, B:171:0x0527), top: B:967:0x0455 }] */
    /* JADX WARN: Removed duplicated region for block: B:208:0x0732 A[Catch: all -> 0x2077, TryCatch #22 {all -> 0x2077, blocks: (B:159:0x0455, B:161:0x046a, B:163:0x0478, B:165:0x04d2, B:167:0x04de, B:168:0x04fb, B:172:0x054b, B:174:0x055e, B:177:0x0592, B:179:0x059e, B:180:0x05d1, B:184:0x05e6, B:185:0x0603, B:187:0x060f, B:188:0x061d, B:190:0x0629, B:191:0x0646, B:193:0x0652, B:194:0x066f, B:196:0x067b, B:197:0x0698, B:199:0x06a4, B:200:0x06de, B:202:0x06e6, B:204:0x06ec, B:206:0x0709, B:208:0x0732, B:209:0x074e, B:211:0x076c, B:216:0x0780, B:205:0x06fb, B:176:0x0564, B:171:0x0527), top: B:967:0x0455 }] */
    /* JADX WARN: Removed duplicated region for block: B:211:0x076c A[Catch: all -> 0x2077, TryCatch #22 {all -> 0x2077, blocks: (B:159:0x0455, B:161:0x046a, B:163:0x0478, B:165:0x04d2, B:167:0x04de, B:168:0x04fb, B:172:0x054b, B:174:0x055e, B:177:0x0592, B:179:0x059e, B:180:0x05d1, B:184:0x05e6, B:185:0x0603, B:187:0x060f, B:188:0x061d, B:190:0x0629, B:191:0x0646, B:193:0x0652, B:194:0x066f, B:196:0x067b, B:197:0x0698, B:199:0x06a4, B:200:0x06de, B:202:0x06e6, B:204:0x06ec, B:206:0x0709, B:208:0x0732, B:209:0x074e, B:211:0x076c, B:216:0x0780, B:205:0x06fb, B:176:0x0564, B:171:0x0527), top: B:967:0x0455 }] */
    /* JADX WARN: Removed duplicated region for block: B:223:0x07e7 A[Catch: all -> 0x2069, TryCatch #7 {all -> 0x2069, blocks: (B:221:0x07db, B:223:0x07e7, B:225:0x081d, B:227:0x082b, B:229:0x0837, B:230:0x085f, B:233:0x0870, B:235:0x08a4, B:236:0x091c, B:220:0x07a2), top: B:938:0x07a2 }] */
    /* JADX WARN: Removed duplicated region for block: B:226:0x0829  */
    /* JADX WARN: Removed duplicated region for block: B:229:0x0837 A[Catch: all -> 0x2069, TryCatch #7 {all -> 0x2069, blocks: (B:221:0x07db, B:223:0x07e7, B:225:0x081d, B:227:0x082b, B:229:0x0837, B:230:0x085f, B:233:0x0870, B:235:0x08a4, B:236:0x091c, B:220:0x07a2), top: B:938:0x07a2 }] */
    /* JADX WARN: Removed duplicated region for block: B:232:0x086e A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:235:0x08a4 A[Catch: all -> 0x2069, TryCatch #7 {all -> 0x2069, blocks: (B:221:0x07db, B:223:0x07e7, B:225:0x081d, B:227:0x082b, B:229:0x0837, B:230:0x085f, B:233:0x0870, B:235:0x08a4, B:236:0x091c, B:220:0x07a2), top: B:938:0x07a2 }] */
    /* JADX WARN: Removed duplicated region for block: B:297:0x0bb3 A[Catch: all -> 0x204b, TryCatch #36 {all -> 0x204b, blocks: (B:295:0x0ba7, B:297:0x0bb3, B:300:0x0bce, B:302:0x0bf9, B:304:0x0c05, B:307:0x0c1e, B:308:0x0c46, B:310:0x0c52, B:311:0x0c60, B:313:0x0c6c, B:314:0x0c9c, B:316:0x0ca8, B:294:0x0ba4), top: B:994:0x0ba4 }] */
    /* JADX WARN: Removed duplicated region for block: B:301:0x0bf7  */
    /* JADX WARN: Removed duplicated region for block: B:304:0x0c05 A[Catch: all -> 0x204b, TryCatch #36 {all -> 0x204b, blocks: (B:295:0x0ba7, B:297:0x0bb3, B:300:0x0bce, B:302:0x0bf9, B:304:0x0c05, B:307:0x0c1e, B:308:0x0c46, B:310:0x0c52, B:311:0x0c60, B:313:0x0c6c, B:314:0x0c9c, B:316:0x0ca8, B:294:0x0ba4), top: B:994:0x0ba4 }] */
    /* JADX WARN: Removed duplicated region for block: B:310:0x0c52 A[Catch: all -> 0x204b, TryCatch #36 {all -> 0x204b, blocks: (B:295:0x0ba7, B:297:0x0bb3, B:300:0x0bce, B:302:0x0bf9, B:304:0x0c05, B:307:0x0c1e, B:308:0x0c46, B:310:0x0c52, B:311:0x0c60, B:313:0x0c6c, B:314:0x0c9c, B:316:0x0ca8, B:294:0x0ba4), top: B:994:0x0ba4 }] */
    /* JADX WARN: Removed duplicated region for block: B:313:0x0c6c A[Catch: all -> 0x204b, TryCatch #36 {all -> 0x204b, blocks: (B:295:0x0ba7, B:297:0x0bb3, B:300:0x0bce, B:302:0x0bf9, B:304:0x0c05, B:307:0x0c1e, B:308:0x0c46, B:310:0x0c52, B:311:0x0c60, B:313:0x0c6c, B:314:0x0c9c, B:316:0x0ca8, B:294:0x0ba4), top: B:994:0x0ba4 }] */
    /* JADX WARN: Removed duplicated region for block: B:316:0x0ca8 A[Catch: all -> 0x204b, TRY_LEAVE, TryCatch #36 {all -> 0x204b, blocks: (B:295:0x0ba7, B:297:0x0bb3, B:300:0x0bce, B:302:0x0bf9, B:304:0x0c05, B:307:0x0c1e, B:308:0x0c46, B:310:0x0c52, B:311:0x0c60, B:313:0x0c6c, B:314:0x0c9c, B:316:0x0ca8, B:294:0x0ba4), top: B:994:0x0ba4 }] */
    /* JADX WARN: Removed duplicated region for block: B:319:0x0cc8  */
    /* JADX WARN: Removed duplicated region for block: B:322:0x0cd6 A[Catch: all -> 0x2047, TryCatch #32 {all -> 0x2047, blocks: (B:318:0x0cbc, B:320:0x0cca, B:322:0x0cd6, B:323:0x0ce4, B:325:0x0cf0, B:326:0x0cfe, B:328:0x0d0a, B:329:0x0d18), top: B:986:0x0cbc }] */
    /* JADX WARN: Removed duplicated region for block: B:325:0x0cf0 A[Catch: all -> 0x2047, TryCatch #32 {all -> 0x2047, blocks: (B:318:0x0cbc, B:320:0x0cca, B:322:0x0cd6, B:323:0x0ce4, B:325:0x0cf0, B:326:0x0cfe, B:328:0x0d0a, B:329:0x0d18), top: B:986:0x0cbc }] */
    /* JADX WARN: Removed duplicated region for block: B:328:0x0d0a A[Catch: all -> 0x2047, TryCatch #32 {all -> 0x2047, blocks: (B:318:0x0cbc, B:320:0x0cca, B:322:0x0cd6, B:323:0x0ce4, B:325:0x0cf0, B:326:0x0cfe, B:328:0x0d0a, B:329:0x0d18), top: B:986:0x0cbc }] */
    /* JADX WARN: Removed duplicated region for block: B:333:0x0d2c  */
    /* JADX WARN: Removed duplicated region for block: B:335:0x0d2f A[Catch: all -> 0x2040, TryCatch #28 {all -> 0x2040, blocks: (B:331:0x0d26, B:335:0x0d2f, B:336:0x0d4c, B:338:0x0d58, B:339:0x0d75, B:341:0x0d83, B:342:0x0d8e, B:344:0x0d9c, B:345:0x0db1, B:347:0x0dbd, B:349:0x0de5, B:351:0x0df1, B:352:0x0df9, B:354:0x0e0b, B:359:0x0e3b, B:361:0x0e53, B:363:0x0e59, B:387:0x0f04, B:389:0x0f12, B:391:0x0f1f, B:392:0x0f52, B:394:0x0f5e, B:395:0x0f7d, B:397:0x0f8b, B:398:0x0fb0, B:367:0x0e65, B:358:0x0e15), top: B:978:0x0d26 }] */
    /* JADX WARN: Removed duplicated region for block: B:338:0x0d58 A[Catch: all -> 0x2040, TryCatch #28 {all -> 0x2040, blocks: (B:331:0x0d26, B:335:0x0d2f, B:336:0x0d4c, B:338:0x0d58, B:339:0x0d75, B:341:0x0d83, B:342:0x0d8e, B:344:0x0d9c, B:345:0x0db1, B:347:0x0dbd, B:349:0x0de5, B:351:0x0df1, B:352:0x0df9, B:354:0x0e0b, B:359:0x0e3b, B:361:0x0e53, B:363:0x0e59, B:387:0x0f04, B:389:0x0f12, B:391:0x0f1f, B:392:0x0f52, B:394:0x0f5e, B:395:0x0f7d, B:397:0x0f8b, B:398:0x0fb0, B:367:0x0e65, B:358:0x0e15), top: B:978:0x0d26 }] */
    /* JADX WARN: Removed duplicated region for block: B:341:0x0d83 A[Catch: all -> 0x2040, TryCatch #28 {all -> 0x2040, blocks: (B:331:0x0d26, B:335:0x0d2f, B:336:0x0d4c, B:338:0x0d58, B:339:0x0d75, B:341:0x0d83, B:342:0x0d8e, B:344:0x0d9c, B:345:0x0db1, B:347:0x0dbd, B:349:0x0de5, B:351:0x0df1, B:352:0x0df9, B:354:0x0e0b, B:359:0x0e3b, B:361:0x0e53, B:363:0x0e59, B:387:0x0f04, B:389:0x0f12, B:391:0x0f1f, B:392:0x0f52, B:394:0x0f5e, B:395:0x0f7d, B:397:0x0f8b, B:398:0x0fb0, B:367:0x0e65, B:358:0x0e15), top: B:978:0x0d26 }] */
    /* JADX WARN: Removed duplicated region for block: B:344:0x0d9c A[Catch: all -> 0x2040, TryCatch #28 {all -> 0x2040, blocks: (B:331:0x0d26, B:335:0x0d2f, B:336:0x0d4c, B:338:0x0d58, B:339:0x0d75, B:341:0x0d83, B:342:0x0d8e, B:344:0x0d9c, B:345:0x0db1, B:347:0x0dbd, B:349:0x0de5, B:351:0x0df1, B:352:0x0df9, B:354:0x0e0b, B:359:0x0e3b, B:361:0x0e53, B:363:0x0e59, B:387:0x0f04, B:389:0x0f12, B:391:0x0f1f, B:392:0x0f52, B:394:0x0f5e, B:395:0x0f7d, B:397:0x0f8b, B:398:0x0fb0, B:367:0x0e65, B:358:0x0e15), top: B:978:0x0d26 }] */
    /* JADX WARN: Removed duplicated region for block: B:347:0x0dbd A[Catch: all -> 0x2040, TryCatch #28 {all -> 0x2040, blocks: (B:331:0x0d26, B:335:0x0d2f, B:336:0x0d4c, B:338:0x0d58, B:339:0x0d75, B:341:0x0d83, B:342:0x0d8e, B:344:0x0d9c, B:345:0x0db1, B:347:0x0dbd, B:349:0x0de5, B:351:0x0df1, B:352:0x0df9, B:354:0x0e0b, B:359:0x0e3b, B:361:0x0e53, B:363:0x0e59, B:387:0x0f04, B:389:0x0f12, B:391:0x0f1f, B:392:0x0f52, B:394:0x0f5e, B:395:0x0f7d, B:397:0x0f8b, B:398:0x0fb0, B:367:0x0e65, B:358:0x0e15), top: B:978:0x0d26 }] */
    /* JADX WARN: Removed duplicated region for block: B:348:0x0de3  */
    /* JADX WARN: Removed duplicated region for block: B:351:0x0df1 A[Catch: all -> 0x2040, TryCatch #28 {all -> 0x2040, blocks: (B:331:0x0d26, B:335:0x0d2f, B:336:0x0d4c, B:338:0x0d58, B:339:0x0d75, B:341:0x0d83, B:342:0x0d8e, B:344:0x0d9c, B:345:0x0db1, B:347:0x0dbd, B:349:0x0de5, B:351:0x0df1, B:352:0x0df9, B:354:0x0e0b, B:359:0x0e3b, B:361:0x0e53, B:363:0x0e59, B:387:0x0f04, B:389:0x0f12, B:391:0x0f1f, B:392:0x0f52, B:394:0x0f5e, B:395:0x0f7d, B:397:0x0f8b, B:398:0x0fb0, B:367:0x0e65, B:358:0x0e15), top: B:978:0x0d26 }] */
    /* JADX WARN: Removed duplicated region for block: B:354:0x0e0b A[Catch: all -> 0x2040, TryCatch #28 {all -> 0x2040, blocks: (B:331:0x0d26, B:335:0x0d2f, B:336:0x0d4c, B:338:0x0d58, B:339:0x0d75, B:341:0x0d83, B:342:0x0d8e, B:344:0x0d9c, B:345:0x0db1, B:347:0x0dbd, B:349:0x0de5, B:351:0x0df1, B:352:0x0df9, B:354:0x0e0b, B:359:0x0e3b, B:361:0x0e53, B:363:0x0e59, B:387:0x0f04, B:389:0x0f12, B:391:0x0f1f, B:392:0x0f52, B:394:0x0f5e, B:395:0x0f7d, B:397:0x0f8b, B:398:0x0fb0, B:367:0x0e65, B:358:0x0e15), top: B:978:0x0d26 }] */
    /* JADX WARN: Removed duplicated region for block: B:361:0x0e53 A[Catch: all -> 0x2040, TryCatch #28 {all -> 0x2040, blocks: (B:331:0x0d26, B:335:0x0d2f, B:336:0x0d4c, B:338:0x0d58, B:339:0x0d75, B:341:0x0d83, B:342:0x0d8e, B:344:0x0d9c, B:345:0x0db1, B:347:0x0dbd, B:349:0x0de5, B:351:0x0df1, B:352:0x0df9, B:354:0x0e0b, B:359:0x0e3b, B:361:0x0e53, B:363:0x0e59, B:387:0x0f04, B:389:0x0f12, B:391:0x0f1f, B:392:0x0f52, B:394:0x0f5e, B:395:0x0f7d, B:397:0x0f8b, B:398:0x0fb0, B:367:0x0e65, B:358:0x0e15), top: B:978:0x0d26 }] */
    /* JADX WARN: Removed duplicated region for block: B:372:0x0eb6 A[Catch: all -> 0x203b, TryCatch #23 {all -> 0x203b, blocks: (B:370:0x0e96, B:372:0x0eb6, B:374:0x0ebe, B:376:0x0ec6, B:378:0x0ece, B:382:0x0ed9, B:383:0x0ee4, B:385:0x0ef0, B:369:0x0e7f), top: B:969:0x0e7f }] */
    /* JADX WARN: Removed duplicated region for block: B:382:0x0ed9 A[Catch: all -> 0x203b, TryCatch #23 {all -> 0x203b, blocks: (B:370:0x0e96, B:372:0x0eb6, B:374:0x0ebe, B:376:0x0ec6, B:378:0x0ece, B:382:0x0ed9, B:383:0x0ee4, B:385:0x0ef0, B:369:0x0e7f), top: B:969:0x0e7f }] */
    /* JADX WARN: Removed duplicated region for block: B:385:0x0ef0 A[Catch: all -> 0x203b, TRY_LEAVE, TryCatch #23 {all -> 0x203b, blocks: (B:370:0x0e96, B:372:0x0eb6, B:374:0x0ebe, B:376:0x0ec6, B:378:0x0ece, B:382:0x0ed9, B:383:0x0ee4, B:385:0x0ef0, B:369:0x0e7f), top: B:969:0x0e7f }] */
    /* JADX WARN: Removed duplicated region for block: B:388:0x0f10  */
    /* JADX WARN: Removed duplicated region for block: B:391:0x0f1f A[Catch: all -> 0x2040, TryCatch #28 {all -> 0x2040, blocks: (B:331:0x0d26, B:335:0x0d2f, B:336:0x0d4c, B:338:0x0d58, B:339:0x0d75, B:341:0x0d83, B:342:0x0d8e, B:344:0x0d9c, B:345:0x0db1, B:347:0x0dbd, B:349:0x0de5, B:351:0x0df1, B:352:0x0df9, B:354:0x0e0b, B:359:0x0e3b, B:361:0x0e53, B:363:0x0e59, B:387:0x0f04, B:389:0x0f12, B:391:0x0f1f, B:392:0x0f52, B:394:0x0f5e, B:395:0x0f7d, B:397:0x0f8b, B:398:0x0fb0, B:367:0x0e65, B:358:0x0e15), top: B:978:0x0d26 }] */
    /* JADX WARN: Removed duplicated region for block: B:394:0x0f5e A[Catch: all -> 0x2040, TryCatch #28 {all -> 0x2040, blocks: (B:331:0x0d26, B:335:0x0d2f, B:336:0x0d4c, B:338:0x0d58, B:339:0x0d75, B:341:0x0d83, B:342:0x0d8e, B:344:0x0d9c, B:345:0x0db1, B:347:0x0dbd, B:349:0x0de5, B:351:0x0df1, B:352:0x0df9, B:354:0x0e0b, B:359:0x0e3b, B:361:0x0e53, B:363:0x0e59, B:387:0x0f04, B:389:0x0f12, B:391:0x0f1f, B:392:0x0f52, B:394:0x0f5e, B:395:0x0f7d, B:397:0x0f8b, B:398:0x0fb0, B:367:0x0e65, B:358:0x0e15), top: B:978:0x0d26 }] */
    /* JADX WARN: Removed duplicated region for block: B:397:0x0f8b A[Catch: all -> 0x2040, TryCatch #28 {all -> 0x2040, blocks: (B:331:0x0d26, B:335:0x0d2f, B:336:0x0d4c, B:338:0x0d58, B:339:0x0d75, B:341:0x0d83, B:342:0x0d8e, B:344:0x0d9c, B:345:0x0db1, B:347:0x0dbd, B:349:0x0de5, B:351:0x0df1, B:352:0x0df9, B:354:0x0e0b, B:359:0x0e3b, B:361:0x0e53, B:363:0x0e59, B:387:0x0f04, B:389:0x0f12, B:391:0x0f1f, B:392:0x0f52, B:394:0x0f5e, B:395:0x0f7d, B:397:0x0f8b, B:398:0x0fb0, B:367:0x0e65, B:358:0x0e15), top: B:978:0x0d26 }] */
    /* JADX WARN: Removed duplicated region for block: B:407:0x1076  */
    /* JADX WARN: Removed duplicated region for block: B:410:0x1088 A[Catch: all -> 0x1145, TRY_ENTER, TRY_LEAVE, TryCatch #30 {all -> 0x1145, blocks: (B:402:0x1010, B:410:0x1088, B:417:0x115b), top: B:982:0x1010 }] */
    /* JADX WARN: Removed duplicated region for block: B:414:0x114e  */
    /* JADX WARN: Removed duplicated region for block: B:417:0x115b A[Catch: all -> 0x1145, TRY_ENTER, TRY_LEAVE, TryCatch #30 {all -> 0x1145, blocks: (B:402:0x1010, B:410:0x1088, B:417:0x115b), top: B:982:0x1010 }] */
    /* JADX WARN: Removed duplicated region for block: B:427:0x119f  */
    /* JADX WARN: Removed duplicated region for block: B:430:0x11af A[Catch: all -> 0x11be, TRY_ENTER, TRY_LEAVE, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:436:0x11cc A[Catch: all -> 0x11be, TRY_ENTER, TRY_LEAVE, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:439:0x11e6 A[Catch: all -> 0x11be, TRY_ENTER, TRY_LEAVE, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:442:0x1200 A[Catch: all -> 0x11be, TRY_ENTER, TRY_LEAVE, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:445:0x1229 A[Catch: all -> 0x11be, TRY_ENTER, TRY_LEAVE, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:448:0x1240 A[Catch: all -> 0x11be, TRY_ENTER, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:453:0x1274 A[Catch: all -> 0x11be, TRY_ENTER, TRY_LEAVE, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:456:0x128e A[Catch: all -> 0x11be, TRY_ENTER, TRY_LEAVE, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:459:0x12a5 A[Catch: all -> 0x11be, TRY_ENTER, TRY_LEAVE, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:462:0x12bc A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:466:0x12df  */
    /* JADX WARN: Removed duplicated region for block: B:468:0x12e2 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:473:0x1306  */
    /* JADX WARN: Removed duplicated region for block: B:475:0x1309 A[Catch: all -> 0x11be, TRY_ENTER, TRY_LEAVE, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:478:0x1320 A[Catch: all -> 0x11be, TRY_ENTER, TRY_LEAVE, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:481:0x1337 A[Catch: all -> 0x11be, TRY_ENTER, TRY_LEAVE, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:484:0x1362 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:489:0x13a3 A[Catch: all -> 0x11be, TRY_ENTER, TRY_LEAVE, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:492:0x13b7 A[Catch: all -> 0x11be, TRY_ENTER, TRY_LEAVE, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:494:0x13d3  */
    /* JADX WARN: Removed duplicated region for block: B:497:0x13e1 A[Catch: all -> 0x11be, TRY_ENTER, TRY_LEAVE, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:500:0x13ff A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:504:0x1427 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:516:0x14af A[Catch: all -> 0x11be, TRY_ENTER, TRY_LEAVE, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:521:0x14d2 A[Catch: all -> 0x11be, TRY_ENTER, TRY_LEAVE, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:524:0x14f6 A[Catch: all -> 0x11be, TRY_ENTER, TRY_LEAVE, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:529:0x1515 A[Catch: all -> 0x11be, TRY_ENTER, TRY_LEAVE, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:534:0x1532 A[Catch: all -> 0x11be, TRY_ENTER, TRY_LEAVE, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:539:0x1547 A[Catch: all -> 0x11be, TRY_ENTER, TRY_LEAVE, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:541:0x1552  */
    /* JADX WARN: Removed duplicated region for block: B:544:0x1560 A[Catch: all -> 0x11be, TRY_ENTER, TRY_LEAVE, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:547:0x1577 A[Catch: all -> 0x11be, TRY_ENTER, TRY_LEAVE, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:550:0x158b A[Catch: all -> 0x11be, TRY_ENTER, TRY_LEAVE, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:553:0x15a2 A[Catch: all -> 0x11be, TRY_ENTER, TRY_LEAVE, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:556:0x15b6 A[Catch: all -> 0x11be, TRY_ENTER, TRY_LEAVE, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:559:0x15cd A[Catch: all -> 0x11be, TRY_ENTER, TRY_LEAVE, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:562:0x15e1 A[Catch: all -> 0x11be, TRY_ENTER, TRY_LEAVE, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:565:0x160f  */
    /* JADX WARN: Removed duplicated region for block: B:570:0x163a A[Catch: all -> 0x11be, TRY_ENTER, TRY_LEAVE, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:573:0x1651 A[Catch: all -> 0x11be, TRY_ENTER, TRY_LEAVE, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:576:0x1668 A[Catch: all -> 0x11be, TRY_ENTER, TRY_LEAVE, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:579:0x168e A[Catch: all -> 0x11be, TRY_ENTER, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:584:0x16b0 A[Catch: all -> 0x11be, TRY_ENTER, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:589:0x16d0 A[Catch: all -> 0x11be, TRY_ENTER, TRY_LEAVE, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:592:0x16e7 A[Catch: all -> 0x11be, TRY_ENTER, TRY_LEAVE, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:595:0x16f7 A[Catch: all -> 0x11be, TRY_ENTER, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:59:0x014b A[Catch: Exception -> 0x0134, TRY_ENTER, TryCatch #11 {Exception -> 0x0134, blocks: (B:39:0x00f7, B:41:0x00ff, B:43:0x0107, B:45:0x010f, B:47:0x0117, B:49:0x011f, B:51:0x0127, B:59:0x014b, B:61:0x0153, B:63:0x015b, B:65:0x0163, B:67:0x016b, B:69:0x0173), top: B:946:0x00f7 }] */
    /* JADX WARN: Removed duplicated region for block: B:600:0x1714 A[Catch: all -> 0x11be, TRY_ENTER, TRY_LEAVE, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:603:0x1728 A[Catch: all -> 0x11be, TRY_ENTER, TRY_LEAVE, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:606:0x1734 A[Catch: all -> 0x11be, TRY_ENTER, TRY_LEAVE, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:609:0x1750 A[Catch: all -> 0x11be, TRY_ENTER, TRY_LEAVE, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:612:0x1782 A[Catch: all -> 0x11be, TRY_ENTER, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:617:0x179b A[Catch: all -> 0x11be, TRY_ENTER, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:622:0x17b8 A[Catch: all -> 0x11be, TRY_ENTER, TRY_LEAVE, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:625:0x17d2 A[Catch: all -> 0x11be, TRY_ENTER, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:631:0x1805 A[Catch: all -> 0x11be, TRY_ENTER, TRY_LEAVE, TryCatch #25 {all -> 0x11be, blocks: (B:422:0x1193, B:430:0x11af, B:436:0x11cc, B:439:0x11e6, B:442:0x1200, B:445:0x1229, B:448:0x1240, B:450:0x124c, B:453:0x1274, B:456:0x128e, B:459:0x12a5, B:463:0x12be, B:475:0x1309, B:478:0x1320, B:481:0x1337, B:489:0x13a3, B:492:0x13b7, B:497:0x13e1, B:508:0x1446, B:516:0x14af, B:521:0x14d2, B:524:0x14f6, B:529:0x1515, B:534:0x1532, B:539:0x1547, B:544:0x1560, B:547:0x1577, B:550:0x158b, B:553:0x15a2, B:556:0x15b6, B:559:0x15cd, B:562:0x15e1, B:570:0x163a, B:573:0x1651, B:576:0x1668, B:579:0x168e, B:581:0x1694, B:584:0x16b0, B:586:0x16b6, B:589:0x16d0, B:592:0x16e7, B:595:0x16f7, B:597:0x16fd, B:600:0x1714, B:603:0x1728, B:606:0x1734, B:609:0x1750, B:612:0x1782, B:614:0x1788, B:617:0x179b, B:619:0x17a1, B:622:0x17b8, B:625:0x17d2, B:628:0x17da, B:631:0x1805, B:635:0x1821, B:512:0x1476), top: B:973:0x1193, inners: #9 }] */
    /* JADX WARN: Removed duplicated region for block: B:633:0x181b A[Catch: all -> 0x2032, TRY_ENTER, TRY_LEAVE, TryCatch #18 {all -> 0x2032, blocks: (B:428:0x11a3, B:434:0x11c0, B:437:0x11da, B:440:0x11f4, B:443:0x121d, B:446:0x1234, B:451:0x1268, B:454:0x1282, B:457:0x1299, B:460:0x12b0, B:464:0x12c6, B:470:0x12f2, B:476:0x1314, B:479:0x132b, B:482:0x1342, B:487:0x1397, B:490:0x13ab, B:495:0x13d5, B:498:0x13e9, B:502:0x141a, B:506:0x143a, B:514:0x148b, B:519:0x14c6, B:522:0x14e0, B:527:0x1501, B:532:0x1520, B:537:0x153b, B:542:0x1554, B:545:0x156b, B:548:0x157f, B:551:0x1596, B:554:0x15aa, B:557:0x15c1, B:560:0x15d5, B:563:0x15e9, B:568:0x162e, B:571:0x1645, B:574:0x1659, B:577:0x1686, B:582:0x16a8, B:587:0x16c4, B:590:0x16db, B:593:0x16ef, B:598:0x1708, B:601:0x171c, B:604:0x172b, B:607:0x1742, B:610:0x177a, B:615:0x1793, B:620:0x17ac, B:623:0x17c0, B:629:0x17f2, B:636:0x1824, B:633:0x181b, B:567:0x1615, B:536:0x1538, B:531:0x151d, B:526:0x14fe, B:518:0x14bb, B:505:0x1429, B:501:0x1401, B:486:0x1366, B:469:0x12e4), top: B:959:0x11a3 }] */
    /* JADX WARN: Removed duplicated region for block: B:638:0x1844 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:649:0x187f A[Catch: all -> 0x186b, TRY_ENTER, TRY_LEAVE, TryCatch #8 {all -> 0x186b, blocks: (B:642:0x184d, B:649:0x187f, B:652:0x1896, B:655:0x18ad, B:658:0x18bc, B:661:0x18d3, B:664:0x18eb, B:667:0x1905, B:670:0x191c, B:673:0x1933, B:676:0x194a, B:679:0x1961, B:682:0x1981, B:685:0x1998, B:688:0x19b6, B:691:0x19e5, B:694:0x19fb, B:697:0x1a14, B:699:0x1a1a, B:702:0x1a31, B:705:0x1a45, B:708:0x1a65, B:713:0x1a76, B:716:0x1a82), top: B:940:0x184d }] */
    /* JADX WARN: Removed duplicated region for block: B:652:0x1896 A[Catch: all -> 0x186b, TRY_ENTER, TRY_LEAVE, TryCatch #8 {all -> 0x186b, blocks: (B:642:0x184d, B:649:0x187f, B:652:0x1896, B:655:0x18ad, B:658:0x18bc, B:661:0x18d3, B:664:0x18eb, B:667:0x1905, B:670:0x191c, B:673:0x1933, B:676:0x194a, B:679:0x1961, B:682:0x1981, B:685:0x1998, B:688:0x19b6, B:691:0x19e5, B:694:0x19fb, B:697:0x1a14, B:699:0x1a1a, B:702:0x1a31, B:705:0x1a45, B:708:0x1a65, B:713:0x1a76, B:716:0x1a82), top: B:940:0x184d }] */
    /* JADX WARN: Removed duplicated region for block: B:655:0x18ad A[Catch: all -> 0x186b, TRY_ENTER, TRY_LEAVE, TryCatch #8 {all -> 0x186b, blocks: (B:642:0x184d, B:649:0x187f, B:652:0x1896, B:655:0x18ad, B:658:0x18bc, B:661:0x18d3, B:664:0x18eb, B:667:0x1905, B:670:0x191c, B:673:0x1933, B:676:0x194a, B:679:0x1961, B:682:0x1981, B:685:0x1998, B:688:0x19b6, B:691:0x19e5, B:694:0x19fb, B:697:0x1a14, B:699:0x1a1a, B:702:0x1a31, B:705:0x1a45, B:708:0x1a65, B:713:0x1a76, B:716:0x1a82), top: B:940:0x184d }] */
    /* JADX WARN: Removed duplicated region for block: B:658:0x18bc A[Catch: all -> 0x186b, TRY_ENTER, TRY_LEAVE, TryCatch #8 {all -> 0x186b, blocks: (B:642:0x184d, B:649:0x187f, B:652:0x1896, B:655:0x18ad, B:658:0x18bc, B:661:0x18d3, B:664:0x18eb, B:667:0x1905, B:670:0x191c, B:673:0x1933, B:676:0x194a, B:679:0x1961, B:682:0x1981, B:685:0x1998, B:688:0x19b6, B:691:0x19e5, B:694:0x19fb, B:697:0x1a14, B:699:0x1a1a, B:702:0x1a31, B:705:0x1a45, B:708:0x1a65, B:713:0x1a76, B:716:0x1a82), top: B:940:0x184d }] */
    /* JADX WARN: Removed duplicated region for block: B:661:0x18d3 A[Catch: all -> 0x186b, TRY_ENTER, TRY_LEAVE, TryCatch #8 {all -> 0x186b, blocks: (B:642:0x184d, B:649:0x187f, B:652:0x1896, B:655:0x18ad, B:658:0x18bc, B:661:0x18d3, B:664:0x18eb, B:667:0x1905, B:670:0x191c, B:673:0x1933, B:676:0x194a, B:679:0x1961, B:682:0x1981, B:685:0x1998, B:688:0x19b6, B:691:0x19e5, B:694:0x19fb, B:697:0x1a14, B:699:0x1a1a, B:702:0x1a31, B:705:0x1a45, B:708:0x1a65, B:713:0x1a76, B:716:0x1a82), top: B:940:0x184d }] */
    /* JADX WARN: Removed duplicated region for block: B:664:0x18eb A[Catch: all -> 0x186b, TRY_ENTER, TRY_LEAVE, TryCatch #8 {all -> 0x186b, blocks: (B:642:0x184d, B:649:0x187f, B:652:0x1896, B:655:0x18ad, B:658:0x18bc, B:661:0x18d3, B:664:0x18eb, B:667:0x1905, B:670:0x191c, B:673:0x1933, B:676:0x194a, B:679:0x1961, B:682:0x1981, B:685:0x1998, B:688:0x19b6, B:691:0x19e5, B:694:0x19fb, B:697:0x1a14, B:699:0x1a1a, B:702:0x1a31, B:705:0x1a45, B:708:0x1a65, B:713:0x1a76, B:716:0x1a82), top: B:940:0x184d }] */
    /* JADX WARN: Removed duplicated region for block: B:667:0x1905 A[Catch: all -> 0x186b, TRY_ENTER, TRY_LEAVE, TryCatch #8 {all -> 0x186b, blocks: (B:642:0x184d, B:649:0x187f, B:652:0x1896, B:655:0x18ad, B:658:0x18bc, B:661:0x18d3, B:664:0x18eb, B:667:0x1905, B:670:0x191c, B:673:0x1933, B:676:0x194a, B:679:0x1961, B:682:0x1981, B:685:0x1998, B:688:0x19b6, B:691:0x19e5, B:694:0x19fb, B:697:0x1a14, B:699:0x1a1a, B:702:0x1a31, B:705:0x1a45, B:708:0x1a65, B:713:0x1a76, B:716:0x1a82), top: B:940:0x184d }] */
    /* JADX WARN: Removed duplicated region for block: B:670:0x191c A[Catch: all -> 0x186b, TRY_ENTER, TRY_LEAVE, TryCatch #8 {all -> 0x186b, blocks: (B:642:0x184d, B:649:0x187f, B:652:0x1896, B:655:0x18ad, B:658:0x18bc, B:661:0x18d3, B:664:0x18eb, B:667:0x1905, B:670:0x191c, B:673:0x1933, B:676:0x194a, B:679:0x1961, B:682:0x1981, B:685:0x1998, B:688:0x19b6, B:691:0x19e5, B:694:0x19fb, B:697:0x1a14, B:699:0x1a1a, B:702:0x1a31, B:705:0x1a45, B:708:0x1a65, B:713:0x1a76, B:716:0x1a82), top: B:940:0x184d }] */
    /* JADX WARN: Removed duplicated region for block: B:673:0x1933 A[Catch: all -> 0x186b, TRY_ENTER, TRY_LEAVE, TryCatch #8 {all -> 0x186b, blocks: (B:642:0x184d, B:649:0x187f, B:652:0x1896, B:655:0x18ad, B:658:0x18bc, B:661:0x18d3, B:664:0x18eb, B:667:0x1905, B:670:0x191c, B:673:0x1933, B:676:0x194a, B:679:0x1961, B:682:0x1981, B:685:0x1998, B:688:0x19b6, B:691:0x19e5, B:694:0x19fb, B:697:0x1a14, B:699:0x1a1a, B:702:0x1a31, B:705:0x1a45, B:708:0x1a65, B:713:0x1a76, B:716:0x1a82), top: B:940:0x184d }] */
    /* JADX WARN: Removed duplicated region for block: B:676:0x194a A[Catch: all -> 0x186b, TRY_ENTER, TRY_LEAVE, TryCatch #8 {all -> 0x186b, blocks: (B:642:0x184d, B:649:0x187f, B:652:0x1896, B:655:0x18ad, B:658:0x18bc, B:661:0x18d3, B:664:0x18eb, B:667:0x1905, B:670:0x191c, B:673:0x1933, B:676:0x194a, B:679:0x1961, B:682:0x1981, B:685:0x1998, B:688:0x19b6, B:691:0x19e5, B:694:0x19fb, B:697:0x1a14, B:699:0x1a1a, B:702:0x1a31, B:705:0x1a45, B:708:0x1a65, B:713:0x1a76, B:716:0x1a82), top: B:940:0x184d }] */
    /* JADX WARN: Removed duplicated region for block: B:679:0x1961 A[Catch: all -> 0x186b, TRY_ENTER, TRY_LEAVE, TryCatch #8 {all -> 0x186b, blocks: (B:642:0x184d, B:649:0x187f, B:652:0x1896, B:655:0x18ad, B:658:0x18bc, B:661:0x18d3, B:664:0x18eb, B:667:0x1905, B:670:0x191c, B:673:0x1933, B:676:0x194a, B:679:0x1961, B:682:0x1981, B:685:0x1998, B:688:0x19b6, B:691:0x19e5, B:694:0x19fb, B:697:0x1a14, B:699:0x1a1a, B:702:0x1a31, B:705:0x1a45, B:708:0x1a65, B:713:0x1a76, B:716:0x1a82), top: B:940:0x184d }] */
    /* JADX WARN: Removed duplicated region for block: B:682:0x1981 A[Catch: all -> 0x186b, TRY_ENTER, TRY_LEAVE, TryCatch #8 {all -> 0x186b, blocks: (B:642:0x184d, B:649:0x187f, B:652:0x1896, B:655:0x18ad, B:658:0x18bc, B:661:0x18d3, B:664:0x18eb, B:667:0x1905, B:670:0x191c, B:673:0x1933, B:676:0x194a, B:679:0x1961, B:682:0x1981, B:685:0x1998, B:688:0x19b6, B:691:0x19e5, B:694:0x19fb, B:697:0x1a14, B:699:0x1a1a, B:702:0x1a31, B:705:0x1a45, B:708:0x1a65, B:713:0x1a76, B:716:0x1a82), top: B:940:0x184d }] */
    /* JADX WARN: Removed duplicated region for block: B:685:0x1998 A[Catch: all -> 0x186b, TRY_ENTER, TRY_LEAVE, TryCatch #8 {all -> 0x186b, blocks: (B:642:0x184d, B:649:0x187f, B:652:0x1896, B:655:0x18ad, B:658:0x18bc, B:661:0x18d3, B:664:0x18eb, B:667:0x1905, B:670:0x191c, B:673:0x1933, B:676:0x194a, B:679:0x1961, B:682:0x1981, B:685:0x1998, B:688:0x19b6, B:691:0x19e5, B:694:0x19fb, B:697:0x1a14, B:699:0x1a1a, B:702:0x1a31, B:705:0x1a45, B:708:0x1a65, B:713:0x1a76, B:716:0x1a82), top: B:940:0x184d }] */
    /* JADX WARN: Removed duplicated region for block: B:688:0x19b6 A[Catch: all -> 0x186b, TRY_ENTER, TRY_LEAVE, TryCatch #8 {all -> 0x186b, blocks: (B:642:0x184d, B:649:0x187f, B:652:0x1896, B:655:0x18ad, B:658:0x18bc, B:661:0x18d3, B:664:0x18eb, B:667:0x1905, B:670:0x191c, B:673:0x1933, B:676:0x194a, B:679:0x1961, B:682:0x1981, B:685:0x1998, B:688:0x19b6, B:691:0x19e5, B:694:0x19fb, B:697:0x1a14, B:699:0x1a1a, B:702:0x1a31, B:705:0x1a45, B:708:0x1a65, B:713:0x1a76, B:716:0x1a82), top: B:940:0x184d }] */
    /* JADX WARN: Removed duplicated region for block: B:691:0x19e5 A[Catch: all -> 0x186b, TRY_ENTER, TRY_LEAVE, TryCatch #8 {all -> 0x186b, blocks: (B:642:0x184d, B:649:0x187f, B:652:0x1896, B:655:0x18ad, B:658:0x18bc, B:661:0x18d3, B:664:0x18eb, B:667:0x1905, B:670:0x191c, B:673:0x1933, B:676:0x194a, B:679:0x1961, B:682:0x1981, B:685:0x1998, B:688:0x19b6, B:691:0x19e5, B:694:0x19fb, B:697:0x1a14, B:699:0x1a1a, B:702:0x1a31, B:705:0x1a45, B:708:0x1a65, B:713:0x1a76, B:716:0x1a82), top: B:940:0x184d }] */
    /* JADX WARN: Removed duplicated region for block: B:694:0x19fb A[Catch: all -> 0x186b, TRY_ENTER, TRY_LEAVE, TryCatch #8 {all -> 0x186b, blocks: (B:642:0x184d, B:649:0x187f, B:652:0x1896, B:655:0x18ad, B:658:0x18bc, B:661:0x18d3, B:664:0x18eb, B:667:0x1905, B:670:0x191c, B:673:0x1933, B:676:0x194a, B:679:0x1961, B:682:0x1981, B:685:0x1998, B:688:0x19b6, B:691:0x19e5, B:694:0x19fb, B:697:0x1a14, B:699:0x1a1a, B:702:0x1a31, B:705:0x1a45, B:708:0x1a65, B:713:0x1a76, B:716:0x1a82), top: B:940:0x184d }] */
    /* JADX WARN: Removed duplicated region for block: B:697:0x1a14 A[Catch: all -> 0x186b, TRY_ENTER, TryCatch #8 {all -> 0x186b, blocks: (B:642:0x184d, B:649:0x187f, B:652:0x1896, B:655:0x18ad, B:658:0x18bc, B:661:0x18d3, B:664:0x18eb, B:667:0x1905, B:670:0x191c, B:673:0x1933, B:676:0x194a, B:679:0x1961, B:682:0x1981, B:685:0x1998, B:688:0x19b6, B:691:0x19e5, B:694:0x19fb, B:697:0x1a14, B:699:0x1a1a, B:702:0x1a31, B:705:0x1a45, B:708:0x1a65, B:713:0x1a76, B:716:0x1a82), top: B:940:0x184d }] */
    /* JADX WARN: Removed duplicated region for block: B:702:0x1a31 A[Catch: all -> 0x186b, TRY_ENTER, TRY_LEAVE, TryCatch #8 {all -> 0x186b, blocks: (B:642:0x184d, B:649:0x187f, B:652:0x1896, B:655:0x18ad, B:658:0x18bc, B:661:0x18d3, B:664:0x18eb, B:667:0x1905, B:670:0x191c, B:673:0x1933, B:676:0x194a, B:679:0x1961, B:682:0x1981, B:685:0x1998, B:688:0x19b6, B:691:0x19e5, B:694:0x19fb, B:697:0x1a14, B:699:0x1a1a, B:702:0x1a31, B:705:0x1a45, B:708:0x1a65, B:713:0x1a76, B:716:0x1a82), top: B:940:0x184d }] */
    /* JADX WARN: Removed duplicated region for block: B:705:0x1a45 A[Catch: all -> 0x186b, TRY_ENTER, TRY_LEAVE, TryCatch #8 {all -> 0x186b, blocks: (B:642:0x184d, B:649:0x187f, B:652:0x1896, B:655:0x18ad, B:658:0x18bc, B:661:0x18d3, B:664:0x18eb, B:667:0x1905, B:670:0x191c, B:673:0x1933, B:676:0x194a, B:679:0x1961, B:682:0x1981, B:685:0x1998, B:688:0x19b6, B:691:0x19e5, B:694:0x19fb, B:697:0x1a14, B:699:0x1a1a, B:702:0x1a31, B:705:0x1a45, B:708:0x1a65, B:713:0x1a76, B:716:0x1a82), top: B:940:0x184d }] */
    /* JADX WARN: Removed duplicated region for block: B:708:0x1a65 A[Catch: all -> 0x186b, TRY_ENTER, TryCatch #8 {all -> 0x186b, blocks: (B:642:0x184d, B:649:0x187f, B:652:0x1896, B:655:0x18ad, B:658:0x18bc, B:661:0x18d3, B:664:0x18eb, B:667:0x1905, B:670:0x191c, B:673:0x1933, B:676:0x194a, B:679:0x1961, B:682:0x1981, B:685:0x1998, B:688:0x19b6, B:691:0x19e5, B:694:0x19fb, B:697:0x1a14, B:699:0x1a1a, B:702:0x1a31, B:705:0x1a45, B:708:0x1a65, B:713:0x1a76, B:716:0x1a82), top: B:940:0x184d }] */
    /* JADX WARN: Removed duplicated region for block: B:716:0x1a82 A[Catch: all -> 0x186b, TRY_LEAVE, TryCatch #8 {all -> 0x186b, blocks: (B:642:0x184d, B:649:0x187f, B:652:0x1896, B:655:0x18ad, B:658:0x18bc, B:661:0x18d3, B:664:0x18eb, B:667:0x1905, B:670:0x191c, B:673:0x1933, B:676:0x194a, B:679:0x1961, B:682:0x1981, B:685:0x1998, B:688:0x19b6, B:691:0x19e5, B:694:0x19fb, B:697:0x1a14, B:699:0x1a1a, B:702:0x1a31, B:705:0x1a45, B:708:0x1a65, B:713:0x1a76, B:716:0x1a82), top: B:940:0x184d }] */
    /* JADX WARN: Removed duplicated region for block: B:718:0x1a8b  */
    /* JADX WARN: Removed duplicated region for block: B:72:0x017c  */
    /* JADX WARN: Removed duplicated region for block: B:730:0x1aec  */
    /* JADX WARN: Removed duplicated region for block: B:733:0x1b04 A[Catch: all -> 0x1b0d, TRY_ENTER, TRY_LEAVE, TryCatch #38 {all -> 0x1b0d, blocks: (B:726:0x1ae2, B:733:0x1b04, B:739:0x1b1f, B:744:0x1b8e, B:747:0x1bad, B:750:0x1bc7, B:753:0x1bde, B:756:0x1bf5, B:759:0x1c10, B:766:0x1c8c, B:769:0x1cc9, B:771:0x1ce2, B:772:0x1cf6, B:775:0x1d2e, B:778:0x1d42, B:781:0x1d56, B:784:0x1da5, B:788:0x1dc4, B:791:0x1dde, B:793:0x1de4, B:796:0x1dfe, B:799:0x1e12, B:802:0x1e37, B:806:0x1e4c, B:809:0x1e5e, B:812:0x1e74, B:814:0x1e80, B:822:0x1f13, B:824:0x1f19, B:837:0x1fd2), top: B:998:0x1ae2 }] */
    /* JADX WARN: Removed duplicated region for block: B:739:0x1b1f A[Catch: all -> 0x1b0d, TRY_ENTER, TRY_LEAVE, TryCatch #38 {all -> 0x1b0d, blocks: (B:726:0x1ae2, B:733:0x1b04, B:739:0x1b1f, B:744:0x1b8e, B:747:0x1bad, B:750:0x1bc7, B:753:0x1bde, B:756:0x1bf5, B:759:0x1c10, B:766:0x1c8c, B:769:0x1cc9, B:771:0x1ce2, B:772:0x1cf6, B:775:0x1d2e, B:778:0x1d42, B:781:0x1d56, B:784:0x1da5, B:788:0x1dc4, B:791:0x1dde, B:793:0x1de4, B:796:0x1dfe, B:799:0x1e12, B:802:0x1e37, B:806:0x1e4c, B:809:0x1e5e, B:812:0x1e74, B:814:0x1e80, B:822:0x1f13, B:824:0x1f19, B:837:0x1fd2), top: B:998:0x1ae2 }] */
    /* JADX WARN: Removed duplicated region for block: B:741:0x1b7d  */
    /* JADX WARN: Removed duplicated region for block: B:744:0x1b8e A[Catch: all -> 0x1b0d, TRY_ENTER, TRY_LEAVE, TryCatch #38 {all -> 0x1b0d, blocks: (B:726:0x1ae2, B:733:0x1b04, B:739:0x1b1f, B:744:0x1b8e, B:747:0x1bad, B:750:0x1bc7, B:753:0x1bde, B:756:0x1bf5, B:759:0x1c10, B:766:0x1c8c, B:769:0x1cc9, B:771:0x1ce2, B:772:0x1cf6, B:775:0x1d2e, B:778:0x1d42, B:781:0x1d56, B:784:0x1da5, B:788:0x1dc4, B:791:0x1dde, B:793:0x1de4, B:796:0x1dfe, B:799:0x1e12, B:802:0x1e37, B:806:0x1e4c, B:809:0x1e5e, B:812:0x1e74, B:814:0x1e80, B:822:0x1f13, B:824:0x1f19, B:837:0x1fd2), top: B:998:0x1ae2 }] */
    /* JADX WARN: Removed duplicated region for block: B:747:0x1bad A[Catch: all -> 0x1b0d, TRY_ENTER, TRY_LEAVE, TryCatch #38 {all -> 0x1b0d, blocks: (B:726:0x1ae2, B:733:0x1b04, B:739:0x1b1f, B:744:0x1b8e, B:747:0x1bad, B:750:0x1bc7, B:753:0x1bde, B:756:0x1bf5, B:759:0x1c10, B:766:0x1c8c, B:769:0x1cc9, B:771:0x1ce2, B:772:0x1cf6, B:775:0x1d2e, B:778:0x1d42, B:781:0x1d56, B:784:0x1da5, B:788:0x1dc4, B:791:0x1dde, B:793:0x1de4, B:796:0x1dfe, B:799:0x1e12, B:802:0x1e37, B:806:0x1e4c, B:809:0x1e5e, B:812:0x1e74, B:814:0x1e80, B:822:0x1f13, B:824:0x1f19, B:837:0x1fd2), top: B:998:0x1ae2 }] */
    /* JADX WARN: Removed duplicated region for block: B:750:0x1bc7 A[Catch: all -> 0x1b0d, TRY_ENTER, TRY_LEAVE, TryCatch #38 {all -> 0x1b0d, blocks: (B:726:0x1ae2, B:733:0x1b04, B:739:0x1b1f, B:744:0x1b8e, B:747:0x1bad, B:750:0x1bc7, B:753:0x1bde, B:756:0x1bf5, B:759:0x1c10, B:766:0x1c8c, B:769:0x1cc9, B:771:0x1ce2, B:772:0x1cf6, B:775:0x1d2e, B:778:0x1d42, B:781:0x1d56, B:784:0x1da5, B:788:0x1dc4, B:791:0x1dde, B:793:0x1de4, B:796:0x1dfe, B:799:0x1e12, B:802:0x1e37, B:806:0x1e4c, B:809:0x1e5e, B:812:0x1e74, B:814:0x1e80, B:822:0x1f13, B:824:0x1f19, B:837:0x1fd2), top: B:998:0x1ae2 }] */
    /* JADX WARN: Removed duplicated region for block: B:753:0x1bde A[Catch: all -> 0x1b0d, TRY_ENTER, TRY_LEAVE, TryCatch #38 {all -> 0x1b0d, blocks: (B:726:0x1ae2, B:733:0x1b04, B:739:0x1b1f, B:744:0x1b8e, B:747:0x1bad, B:750:0x1bc7, B:753:0x1bde, B:756:0x1bf5, B:759:0x1c10, B:766:0x1c8c, B:769:0x1cc9, B:771:0x1ce2, B:772:0x1cf6, B:775:0x1d2e, B:778:0x1d42, B:781:0x1d56, B:784:0x1da5, B:788:0x1dc4, B:791:0x1dde, B:793:0x1de4, B:796:0x1dfe, B:799:0x1e12, B:802:0x1e37, B:806:0x1e4c, B:809:0x1e5e, B:812:0x1e74, B:814:0x1e80, B:822:0x1f13, B:824:0x1f19, B:837:0x1fd2), top: B:998:0x1ae2 }] */
    /* JADX WARN: Removed duplicated region for block: B:756:0x1bf5 A[Catch: all -> 0x1b0d, TRY_ENTER, TRY_LEAVE, TryCatch #38 {all -> 0x1b0d, blocks: (B:726:0x1ae2, B:733:0x1b04, B:739:0x1b1f, B:744:0x1b8e, B:747:0x1bad, B:750:0x1bc7, B:753:0x1bde, B:756:0x1bf5, B:759:0x1c10, B:766:0x1c8c, B:769:0x1cc9, B:771:0x1ce2, B:772:0x1cf6, B:775:0x1d2e, B:778:0x1d42, B:781:0x1d56, B:784:0x1da5, B:788:0x1dc4, B:791:0x1dde, B:793:0x1de4, B:796:0x1dfe, B:799:0x1e12, B:802:0x1e37, B:806:0x1e4c, B:809:0x1e5e, B:812:0x1e74, B:814:0x1e80, B:822:0x1f13, B:824:0x1f19, B:837:0x1fd2), top: B:998:0x1ae2 }] */
    /* JADX WARN: Removed duplicated region for block: B:759:0x1c10 A[Catch: all -> 0x1b0d, TRY_ENTER, TRY_LEAVE, TryCatch #38 {all -> 0x1b0d, blocks: (B:726:0x1ae2, B:733:0x1b04, B:739:0x1b1f, B:744:0x1b8e, B:747:0x1bad, B:750:0x1bc7, B:753:0x1bde, B:756:0x1bf5, B:759:0x1c10, B:766:0x1c8c, B:769:0x1cc9, B:771:0x1ce2, B:772:0x1cf6, B:775:0x1d2e, B:778:0x1d42, B:781:0x1d56, B:784:0x1da5, B:788:0x1dc4, B:791:0x1dde, B:793:0x1de4, B:796:0x1dfe, B:799:0x1e12, B:802:0x1e37, B:806:0x1e4c, B:809:0x1e5e, B:812:0x1e74, B:814:0x1e80, B:822:0x1f13, B:824:0x1f19, B:837:0x1fd2), top: B:998:0x1ae2 }] */
    /* JADX WARN: Removed duplicated region for block: B:762:0x1c40 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:766:0x1c8c A[Catch: all -> 0x1b0d, TRY_ENTER, TRY_LEAVE, TryCatch #38 {all -> 0x1b0d, blocks: (B:726:0x1ae2, B:733:0x1b04, B:739:0x1b1f, B:744:0x1b8e, B:747:0x1bad, B:750:0x1bc7, B:753:0x1bde, B:756:0x1bf5, B:759:0x1c10, B:766:0x1c8c, B:769:0x1cc9, B:771:0x1ce2, B:772:0x1cf6, B:775:0x1d2e, B:778:0x1d42, B:781:0x1d56, B:784:0x1da5, B:788:0x1dc4, B:791:0x1dde, B:793:0x1de4, B:796:0x1dfe, B:799:0x1e12, B:802:0x1e37, B:806:0x1e4c, B:809:0x1e5e, B:812:0x1e74, B:814:0x1e80, B:822:0x1f13, B:824:0x1f19, B:837:0x1fd2), top: B:998:0x1ae2 }] */
    /* JADX WARN: Removed duplicated region for block: B:769:0x1cc9 A[Catch: all -> 0x1b0d, TRY_ENTER, TryCatch #38 {all -> 0x1b0d, blocks: (B:726:0x1ae2, B:733:0x1b04, B:739:0x1b1f, B:744:0x1b8e, B:747:0x1bad, B:750:0x1bc7, B:753:0x1bde, B:756:0x1bf5, B:759:0x1c10, B:766:0x1c8c, B:769:0x1cc9, B:771:0x1ce2, B:772:0x1cf6, B:775:0x1d2e, B:778:0x1d42, B:781:0x1d56, B:784:0x1da5, B:788:0x1dc4, B:791:0x1dde, B:793:0x1de4, B:796:0x1dfe, B:799:0x1e12, B:802:0x1e37, B:806:0x1e4c, B:809:0x1e5e, B:812:0x1e74, B:814:0x1e80, B:822:0x1f13, B:824:0x1f19, B:837:0x1fd2), top: B:998:0x1ae2 }] */
    /* JADX WARN: Removed duplicated region for block: B:775:0x1d2e A[Catch: all -> 0x1b0d, TRY_ENTER, TRY_LEAVE, TryCatch #38 {all -> 0x1b0d, blocks: (B:726:0x1ae2, B:733:0x1b04, B:739:0x1b1f, B:744:0x1b8e, B:747:0x1bad, B:750:0x1bc7, B:753:0x1bde, B:756:0x1bf5, B:759:0x1c10, B:766:0x1c8c, B:769:0x1cc9, B:771:0x1ce2, B:772:0x1cf6, B:775:0x1d2e, B:778:0x1d42, B:781:0x1d56, B:784:0x1da5, B:788:0x1dc4, B:791:0x1dde, B:793:0x1de4, B:796:0x1dfe, B:799:0x1e12, B:802:0x1e37, B:806:0x1e4c, B:809:0x1e5e, B:812:0x1e74, B:814:0x1e80, B:822:0x1f13, B:824:0x1f19, B:837:0x1fd2), top: B:998:0x1ae2 }] */
    /* JADX WARN: Removed duplicated region for block: B:778:0x1d42 A[Catch: all -> 0x1b0d, TRY_ENTER, TRY_LEAVE, TryCatch #38 {all -> 0x1b0d, blocks: (B:726:0x1ae2, B:733:0x1b04, B:739:0x1b1f, B:744:0x1b8e, B:747:0x1bad, B:750:0x1bc7, B:753:0x1bde, B:756:0x1bf5, B:759:0x1c10, B:766:0x1c8c, B:769:0x1cc9, B:771:0x1ce2, B:772:0x1cf6, B:775:0x1d2e, B:778:0x1d42, B:781:0x1d56, B:784:0x1da5, B:788:0x1dc4, B:791:0x1dde, B:793:0x1de4, B:796:0x1dfe, B:799:0x1e12, B:802:0x1e37, B:806:0x1e4c, B:809:0x1e5e, B:812:0x1e74, B:814:0x1e80, B:822:0x1f13, B:824:0x1f19, B:837:0x1fd2), top: B:998:0x1ae2 }] */
    /* JADX WARN: Removed duplicated region for block: B:781:0x1d56 A[Catch: all -> 0x1b0d, TRY_ENTER, TRY_LEAVE, TryCatch #38 {all -> 0x1b0d, blocks: (B:726:0x1ae2, B:733:0x1b04, B:739:0x1b1f, B:744:0x1b8e, B:747:0x1bad, B:750:0x1bc7, B:753:0x1bde, B:756:0x1bf5, B:759:0x1c10, B:766:0x1c8c, B:769:0x1cc9, B:771:0x1ce2, B:772:0x1cf6, B:775:0x1d2e, B:778:0x1d42, B:781:0x1d56, B:784:0x1da5, B:788:0x1dc4, B:791:0x1dde, B:793:0x1de4, B:796:0x1dfe, B:799:0x1e12, B:802:0x1e37, B:806:0x1e4c, B:809:0x1e5e, B:812:0x1e74, B:814:0x1e80, B:822:0x1f13, B:824:0x1f19, B:837:0x1fd2), top: B:998:0x1ae2 }] */
    /* JADX WARN: Removed duplicated region for block: B:784:0x1da5 A[Catch: all -> 0x1b0d, TRY_ENTER, TRY_LEAVE, TryCatch #38 {all -> 0x1b0d, blocks: (B:726:0x1ae2, B:733:0x1b04, B:739:0x1b1f, B:744:0x1b8e, B:747:0x1bad, B:750:0x1bc7, B:753:0x1bde, B:756:0x1bf5, B:759:0x1c10, B:766:0x1c8c, B:769:0x1cc9, B:771:0x1ce2, B:772:0x1cf6, B:775:0x1d2e, B:778:0x1d42, B:781:0x1d56, B:784:0x1da5, B:788:0x1dc4, B:791:0x1dde, B:793:0x1de4, B:796:0x1dfe, B:799:0x1e12, B:802:0x1e37, B:806:0x1e4c, B:809:0x1e5e, B:812:0x1e74, B:814:0x1e80, B:822:0x1f13, B:824:0x1f19, B:837:0x1fd2), top: B:998:0x1ae2 }] */
    /* JADX WARN: Removed duplicated region for block: B:788:0x1dc4 A[Catch: all -> 0x1b0d, TRY_ENTER, TRY_LEAVE, TryCatch #38 {all -> 0x1b0d, blocks: (B:726:0x1ae2, B:733:0x1b04, B:739:0x1b1f, B:744:0x1b8e, B:747:0x1bad, B:750:0x1bc7, B:753:0x1bde, B:756:0x1bf5, B:759:0x1c10, B:766:0x1c8c, B:769:0x1cc9, B:771:0x1ce2, B:772:0x1cf6, B:775:0x1d2e, B:778:0x1d42, B:781:0x1d56, B:784:0x1da5, B:788:0x1dc4, B:791:0x1dde, B:793:0x1de4, B:796:0x1dfe, B:799:0x1e12, B:802:0x1e37, B:806:0x1e4c, B:809:0x1e5e, B:812:0x1e74, B:814:0x1e80, B:822:0x1f13, B:824:0x1f19, B:837:0x1fd2), top: B:998:0x1ae2 }] */
    /* JADX WARN: Removed duplicated region for block: B:78:0x01ab A[Catch: Exception -> 0x01b9, TryCatch #44 {Exception -> 0x01b9, blocks: (B:76:0x0192, B:78:0x01ab, B:80:0x01b4), top: B:1009:0x0192 }] */
    /* JADX WARN: Removed duplicated region for block: B:791:0x1dde A[Catch: all -> 0x1b0d, TRY_ENTER, TryCatch #38 {all -> 0x1b0d, blocks: (B:726:0x1ae2, B:733:0x1b04, B:739:0x1b1f, B:744:0x1b8e, B:747:0x1bad, B:750:0x1bc7, B:753:0x1bde, B:756:0x1bf5, B:759:0x1c10, B:766:0x1c8c, B:769:0x1cc9, B:771:0x1ce2, B:772:0x1cf6, B:775:0x1d2e, B:778:0x1d42, B:781:0x1d56, B:784:0x1da5, B:788:0x1dc4, B:791:0x1dde, B:793:0x1de4, B:796:0x1dfe, B:799:0x1e12, B:802:0x1e37, B:806:0x1e4c, B:809:0x1e5e, B:812:0x1e74, B:814:0x1e80, B:822:0x1f13, B:824:0x1f19, B:837:0x1fd2), top: B:998:0x1ae2 }] */
    /* JADX WARN: Removed duplicated region for block: B:796:0x1dfe A[Catch: all -> 0x1b0d, TRY_ENTER, TRY_LEAVE, TryCatch #38 {all -> 0x1b0d, blocks: (B:726:0x1ae2, B:733:0x1b04, B:739:0x1b1f, B:744:0x1b8e, B:747:0x1bad, B:750:0x1bc7, B:753:0x1bde, B:756:0x1bf5, B:759:0x1c10, B:766:0x1c8c, B:769:0x1cc9, B:771:0x1ce2, B:772:0x1cf6, B:775:0x1d2e, B:778:0x1d42, B:781:0x1d56, B:784:0x1da5, B:788:0x1dc4, B:791:0x1dde, B:793:0x1de4, B:796:0x1dfe, B:799:0x1e12, B:802:0x1e37, B:806:0x1e4c, B:809:0x1e5e, B:812:0x1e74, B:814:0x1e80, B:822:0x1f13, B:824:0x1f19, B:837:0x1fd2), top: B:998:0x1ae2 }] */
    /* JADX WARN: Removed duplicated region for block: B:799:0x1e12 A[Catch: all -> 0x1b0d, TRY_ENTER, TRY_LEAVE, TryCatch #38 {all -> 0x1b0d, blocks: (B:726:0x1ae2, B:733:0x1b04, B:739:0x1b1f, B:744:0x1b8e, B:747:0x1bad, B:750:0x1bc7, B:753:0x1bde, B:756:0x1bf5, B:759:0x1c10, B:766:0x1c8c, B:769:0x1cc9, B:771:0x1ce2, B:772:0x1cf6, B:775:0x1d2e, B:778:0x1d42, B:781:0x1d56, B:784:0x1da5, B:788:0x1dc4, B:791:0x1dde, B:793:0x1de4, B:796:0x1dfe, B:799:0x1e12, B:802:0x1e37, B:806:0x1e4c, B:809:0x1e5e, B:812:0x1e74, B:814:0x1e80, B:822:0x1f13, B:824:0x1f19, B:837:0x1fd2), top: B:998:0x1ae2 }] */
    /* JADX WARN: Removed duplicated region for block: B:802:0x1e37 A[Catch: all -> 0x1b0d, TRY_ENTER, TryCatch #38 {all -> 0x1b0d, blocks: (B:726:0x1ae2, B:733:0x1b04, B:739:0x1b1f, B:744:0x1b8e, B:747:0x1bad, B:750:0x1bc7, B:753:0x1bde, B:756:0x1bf5, B:759:0x1c10, B:766:0x1c8c, B:769:0x1cc9, B:771:0x1ce2, B:772:0x1cf6, B:775:0x1d2e, B:778:0x1d42, B:781:0x1d56, B:784:0x1da5, B:788:0x1dc4, B:791:0x1dde, B:793:0x1de4, B:796:0x1dfe, B:799:0x1e12, B:802:0x1e37, B:806:0x1e4c, B:809:0x1e5e, B:812:0x1e74, B:814:0x1e80, B:822:0x1f13, B:824:0x1f19, B:837:0x1fd2), top: B:998:0x1ae2 }] */
    /* JADX WARN: Removed duplicated region for block: B:809:0x1e5e A[Catch: all -> 0x1b0d, TRY_ENTER, TRY_LEAVE, TryCatch #38 {all -> 0x1b0d, blocks: (B:726:0x1ae2, B:733:0x1b04, B:739:0x1b1f, B:744:0x1b8e, B:747:0x1bad, B:750:0x1bc7, B:753:0x1bde, B:756:0x1bf5, B:759:0x1c10, B:766:0x1c8c, B:769:0x1cc9, B:771:0x1ce2, B:772:0x1cf6, B:775:0x1d2e, B:778:0x1d42, B:781:0x1d56, B:784:0x1da5, B:788:0x1dc4, B:791:0x1dde, B:793:0x1de4, B:796:0x1dfe, B:799:0x1e12, B:802:0x1e37, B:806:0x1e4c, B:809:0x1e5e, B:812:0x1e74, B:814:0x1e80, B:822:0x1f13, B:824:0x1f19, B:837:0x1fd2), top: B:998:0x1ae2 }] */
    /* JADX WARN: Removed duplicated region for block: B:80:0x01b4 A[Catch: Exception -> 0x01b9, TRY_LEAVE, TryCatch #44 {Exception -> 0x01b9, blocks: (B:76:0x0192, B:78:0x01ab, B:80:0x01b4), top: B:1009:0x0192 }] */
    /* JADX WARN: Removed duplicated region for block: B:812:0x1e74 A[Catch: all -> 0x1b0d, TRY_ENTER, TryCatch #38 {all -> 0x1b0d, blocks: (B:726:0x1ae2, B:733:0x1b04, B:739:0x1b1f, B:744:0x1b8e, B:747:0x1bad, B:750:0x1bc7, B:753:0x1bde, B:756:0x1bf5, B:759:0x1c10, B:766:0x1c8c, B:769:0x1cc9, B:771:0x1ce2, B:772:0x1cf6, B:775:0x1d2e, B:778:0x1d42, B:781:0x1d56, B:784:0x1da5, B:788:0x1dc4, B:791:0x1dde, B:793:0x1de4, B:796:0x1dfe, B:799:0x1e12, B:802:0x1e37, B:806:0x1e4c, B:809:0x1e5e, B:812:0x1e74, B:814:0x1e80, B:822:0x1f13, B:824:0x1f19, B:837:0x1fd2), top: B:998:0x1ae2 }] */
    /* JADX WARN: Removed duplicated region for block: B:817:0x1eeb  */
    /* JADX WARN: Removed duplicated region for block: B:822:0x1f13 A[Catch: all -> 0x1b0d, TRY_ENTER, TryCatch #38 {all -> 0x1b0d, blocks: (B:726:0x1ae2, B:733:0x1b04, B:739:0x1b1f, B:744:0x1b8e, B:747:0x1bad, B:750:0x1bc7, B:753:0x1bde, B:756:0x1bf5, B:759:0x1c10, B:766:0x1c8c, B:769:0x1cc9, B:771:0x1ce2, B:772:0x1cf6, B:775:0x1d2e, B:778:0x1d42, B:781:0x1d56, B:784:0x1da5, B:788:0x1dc4, B:791:0x1dde, B:793:0x1de4, B:796:0x1dfe, B:799:0x1e12, B:802:0x1e37, B:806:0x1e4c, B:809:0x1e5e, B:812:0x1e74, B:814:0x1e80, B:822:0x1f13, B:824:0x1f19, B:837:0x1fd2), top: B:998:0x1ae2 }] */
    /* JADX WARN: Removed duplicated region for block: B:827:0x1f76 A[ADDED_TO_REGION] */
    /* JADX WARN: Removed duplicated region for block: B:837:0x1fd2 A[Catch: all -> 0x1b0d, TRY_ENTER, TRY_LEAVE, TryCatch #38 {all -> 0x1b0d, blocks: (B:726:0x1ae2, B:733:0x1b04, B:739:0x1b1f, B:744:0x1b8e, B:747:0x1bad, B:750:0x1bc7, B:753:0x1bde, B:756:0x1bf5, B:759:0x1c10, B:766:0x1c8c, B:769:0x1cc9, B:771:0x1ce2, B:772:0x1cf6, B:775:0x1d2e, B:778:0x1d42, B:781:0x1d56, B:784:0x1da5, B:788:0x1dc4, B:791:0x1dde, B:793:0x1de4, B:796:0x1dfe, B:799:0x1e12, B:802:0x1e37, B:806:0x1e4c, B:809:0x1e5e, B:812:0x1e74, B:814:0x1e80, B:822:0x1f13, B:824:0x1f19, B:837:0x1fd2), top: B:998:0x1ae2 }] */
    /* JADX WARN: Removed duplicated region for block: B:840:0x1fe6 A[Catch: all -> 0x2028, TRY_LEAVE, TryCatch #4 {all -> 0x2028, blocks: (B:731:0x1af8, B:737:0x1b13, B:742:0x1b80, B:745:0x1ba0, B:748:0x1bbb, B:751:0x1bd2, B:754:0x1be9, B:757:0x1c00, B:760:0x1c2a, B:764:0x1c80, B:767:0x1cbd, B:773:0x1d22, B:776:0x1d36, B:779:0x1d4a, B:782:0x1d99, B:785:0x1db0, B:789:0x1dd6, B:794:0x1df2, B:797:0x1e06, B:800:0x1e2b, B:807:0x1e52, B:810:0x1e6c, B:815:0x1ecf, B:820:0x1f0b, B:825:0x1f27, B:835:0x1fc6, B:838:0x1fda, B:840:0x1fe6, B:834:0x1f84, B:819:0x1eef, B:763:0x1c42), top: B:935:0x1af8 }] */
    /* JADX WARN: Removed duplicated region for block: B:843:0x1ff7  */
    /* JADX WARN: Removed duplicated region for block: B:846:0x2005 A[Catch: all -> 0x2025, TRY_LEAVE, TryCatch #1 {all -> 0x2025, blocks: (B:842:0x1ff1, B:844:0x1ff9, B:846:0x2005, B:848:0x200f, B:852:0x201e), top: B:930:0x1ff1, inners: #19 }] */
    /* JADX WARN: Removed duplicated region for block: B:899:0x2092 A[Catch: all -> 0x214a, TryCatch #33 {all -> 0x214a, blocks: (B:897:0x208a, B:899:0x2092, B:902:0x20a5, B:904:0x20ad, B:905:0x20b5, B:907:0x20bd, B:908:0x20dc, B:910:0x20e4, B:911:0x20ef, B:913:0x20f7, B:914:0x2102, B:916:0x210a, B:917:0x2115, B:919:0x211d, B:920:0x2128, B:901:0x209a), top: B:988:0x208a }] */
    /* JADX WARN: Removed duplicated region for block: B:904:0x20ad A[Catch: all -> 0x214a, TryCatch #33 {all -> 0x214a, blocks: (B:897:0x208a, B:899:0x2092, B:902:0x20a5, B:904:0x20ad, B:905:0x20b5, B:907:0x20bd, B:908:0x20dc, B:910:0x20e4, B:911:0x20ef, B:913:0x20f7, B:914:0x2102, B:916:0x210a, B:917:0x2115, B:919:0x211d, B:920:0x2128, B:901:0x209a), top: B:988:0x208a }] */
    /* JADX WARN: Removed duplicated region for block: B:907:0x20bd A[Catch: all -> 0x214a, TryCatch #33 {all -> 0x214a, blocks: (B:897:0x208a, B:899:0x2092, B:902:0x20a5, B:904:0x20ad, B:905:0x20b5, B:907:0x20bd, B:908:0x20dc, B:910:0x20e4, B:911:0x20ef, B:913:0x20f7, B:914:0x2102, B:916:0x210a, B:917:0x2115, B:919:0x211d, B:920:0x2128, B:901:0x209a), top: B:988:0x208a }] */
    /* JADX WARN: Removed duplicated region for block: B:910:0x20e4 A[Catch: all -> 0x214a, TryCatch #33 {all -> 0x214a, blocks: (B:897:0x208a, B:899:0x2092, B:902:0x20a5, B:904:0x20ad, B:905:0x20b5, B:907:0x20bd, B:908:0x20dc, B:910:0x20e4, B:911:0x20ef, B:913:0x20f7, B:914:0x2102, B:916:0x210a, B:917:0x2115, B:919:0x211d, B:920:0x2128, B:901:0x209a), top: B:988:0x208a }] */
    /* JADX WARN: Removed duplicated region for block: B:913:0x20f7 A[Catch: all -> 0x214a, TryCatch #33 {all -> 0x214a, blocks: (B:897:0x208a, B:899:0x2092, B:902:0x20a5, B:904:0x20ad, B:905:0x20b5, B:907:0x20bd, B:908:0x20dc, B:910:0x20e4, B:911:0x20ef, B:913:0x20f7, B:914:0x2102, B:916:0x210a, B:917:0x2115, B:919:0x211d, B:920:0x2128, B:901:0x209a), top: B:988:0x208a }] */
    /* JADX WARN: Removed duplicated region for block: B:916:0x210a A[Catch: all -> 0x214a, TryCatch #33 {all -> 0x214a, blocks: (B:897:0x208a, B:899:0x2092, B:902:0x20a5, B:904:0x20ad, B:905:0x20b5, B:907:0x20bd, B:908:0x20dc, B:910:0x20e4, B:911:0x20ef, B:913:0x20f7, B:914:0x2102, B:916:0x210a, B:917:0x2115, B:919:0x211d, B:920:0x2128, B:901:0x209a), top: B:988:0x208a }] */
    /* JADX WARN: Removed duplicated region for block: B:919:0x211d A[Catch: all -> 0x214a, TryCatch #33 {all -> 0x214a, blocks: (B:897:0x208a, B:899:0x2092, B:902:0x20a5, B:904:0x20ad, B:905:0x20b5, B:907:0x20bd, B:908:0x20dc, B:910:0x20e4, B:911:0x20ef, B:913:0x20f7, B:914:0x2102, B:916:0x210a, B:917:0x2115, B:919:0x211d, B:920:0x2128, B:901:0x209a), top: B:988:0x208a }] */
    /* JADX WARN: Removed duplicated region for block: B:933:0x1aaf A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:942:0x1446 A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:944:0x0fbc A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:946:0x00f7 A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:950:0x0b38 A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:961:0x200f A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:996:0x0a95 A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:99:0x0225  */
    @Override // com.applisto.appcloner.classes.util.activity.AbstractContentProvider, android.content.ContentProvider
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public boolean onCreate() {
        boolean z;
        String str;
        String str2;
        Exception exc;
        SharedPreferences defaultSharedPreferences;
        String str3;
        String str4;
        DefaultProvider defaultProvider;
        String str5;
        String str6;
        String str7;
        Throwable th;
        int intValue;
        String str8;
        String string;
        String str9;
        String str10;
        Integer num;
        boolean booleanValue;
        boolean booleanValue2;
        String string2;
        String string3;
        boolean booleanValue3;
        List<String> stringList;
        boolean booleanValue4;
        Integer num2;
        String str11;
        String string4;
        String str12;
        Integer num3;
        String str13;
        Properties properties;
        String str14;
        String string5;
        String str15;
        String string6;
        Double d;
        Double d2;
        String string7;
        String str16;
        String str17;
        String string8;
        Boolean bool;
        DefaultProvider defaultProvider2;
        String str18;
        Integer num4;
        boolean booleanValue5;
        String str19;
        String str20;
        String string9;
        String string10;
        String str21;
        String string11;
        Integer num5;
        String string12;
        String str22;
        String string13;
        String str23;
        String string14;
        String string15;
        String string16;
        boolean booleanValue6;
        boolean booleanValue7;
        int intValue2;
        String str24;
        float floatValue;
        Object m13709ni;
        String str25;
        Integer integer;
        Integer integer2;
        boolean booleanValue8;
        boolean booleanValue9;
        boolean booleanValue10;
        Integer num6;
        boolean booleanValue11;
        boolean booleanValue12;
        Boolean bool2;
        String str26;
        String string17;
        String string18;
        String string19;
        Properties properties2;
        long longValue;
        long longValue2;
        Map<String, String> stringMap;
        Map<String, String> stringMap2;
        List<String> stringList2;
        Boolean bool3;
        String str27;
        String string20;
        List<Map<String, Object>> mapList;
        List<Map<String, Object>> mapList2;
        List<String> stringList3;
        boolean booleanValue13;
        int intValue3;
        String string21;
        String string22;
        int intValue4;
        int intValue5;
        String string23;
        List<String> stringList4;
        boolean booleanValue14;
        int intValue6;
        String str28;
        Integer num7;
        Boolean bool4;
        boolean z2;
        char c;
        String str29;
        int i;
        Integer num8;
        int intValue7;
        String string24;
        String string25;
        boolean booleanValue15;
        boolean booleanValue16;
        float floatValue2;
        List<String> stringList5;
        String string26;
        String string27;
        CloneSettings forObject;
        boolean booleanValue17;
        float floatValue3;
        Map<String, String> stringMap3;
        int intValue8;
        int intValue9;
        int intValue10;
        int intValue11;
        int intValue12;
        int intValue13;
        int intValue14;
        Integer integer3;
        String string28;
        float floatValue4;
        float floatValue5;
        boolean booleanValue18;
        String installerPackageName;
        String stackTraceString;
        boolean z3;
        boolean booleanValue19;
        ZipFile zipFile;
        BufferedReader bufferedReader;
        long currentTimeMillis = System.currentTimeMillis();
        final Context context = getContext();
        if (context == null) {
            Log.m13704i(TAG, "onCreate; no context");
            return false;
        }
        String originalPackageName = getOriginalPackageName(context);
        Log.m13704i(TAG, "onCreate; originalPackageName: " + originalPackageName);
        String buildSerial = Utils.getBuildSerial();
        boolean isDevDevice = Utils.isDevDevice();
        Log.m13704i(TAG, "onCreate; buildSerial: " + buildSerial + ", devDevice: " + isDevDevice);
        try {
            try {
                zipFile = new ZipFile(context.getApplicationInfo().sourceDir);
                try {
                    z = isDevDevice;
                    try {
                        bufferedReader = new BufferedReader(new InputStreamReader(zipFile.getInputStream(zipFile.getEntry("META-INF/CERT.SF")), "UTF-8"));
                        bufferedReader.readLine();
                    } catch (Throwable th2) {
                        th = th2;
                        Throwable th3 = th;
                        zipFile.close();
                        throw th3;
                    }
                } catch (Throwable th4) {
                    th = th4;
                }
            } catch (Exception e) {
                e = e;
                Log.m13698w(TAG, e);
                CloneSettings cloneSettings = CloneSettings.getInstance(context);
                Properties stringsProperties = Utils.getStringsProperties();
                try {
                    installerPackageName = context.getPackageManager().getInstallerPackageName(context.getPackageName());
                    String str30 = TAG;
                    StringBuilder sb = new StringBuilder();
                    str = "NO_CHANGE";
                } catch (Exception e2) {
                    e = e2;
                    str = "NO_CHANGE";
                }
                try {
                    try {
                        try {
                            sb.append("onCreate; installerPackageName: ");
                            sb.append(installerPackageName);
                            Log.m13704i(str30, sb.toString());
                            if (!"com.android.vending".equals(installerPackageName)) {
                            }
                            stackTraceString = Log.getStackTraceString(new Exception());
                            if (!stackTraceString.contains("com.lbe.doubleagent.client")) {
                                if (!stackTraceString.contains("com.prism.gaia.client")) {
                                }
                            }
                            z3 = true;
                            booleanValue19 = cloneSettings.getBoolean("allowInMultiAccountApps", false).booleanValue();
                            String str31 = TAG;
                            StringBuilder sb2 = new StringBuilder();
                            str2 = "NONE";
                        } catch (Exception e3) {
                            e = e3;
                            str2 = "NONE";
                            exc = e;
                            Log.m13698w(TAG, exc);
                            invokeSecondaryInstance("AppData", "init", context, Boolean.valueOf(cloneSettings.getBoolean("bundleAppData", false).booleanValue()), Boolean.valueOf(cloneSettings.getBoolean("restoreAppDataOnEveryStart", false).booleanValue()), originalPackageName, stringsProperties);
                            defaultSharedPreferences = PreferenceManager.getDefaultSharedPreferences(context);
                            if ("MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAkUKNyxB+D5EkRPw+KHangPP7ZaCQFF7A0HzrsT5qQ+vOejCW2jofBcJe2auLrMdVG+sIwGzAXYPzO3PAWz70ErVPl3DfHoogawb87D5zk2M8LTVQ6FxvR43LeMIm4qvtLAomA05X7VFbusGEDsCI3B7SAIAhrsBoenvjEdUSIgtK0AKC/Bzm4/p9tXDEGHEQyR4D38YQB2jsPS6asWlzyeX6ceJTahQPjBG3pwm8g9/wt0TWdk8lLYk2LKNqQlONbmao/xOc+OB+ZrSOQehGRtDGQ9ZlrvR9hEkWDoNPe4uPEhg8ITCVHgouc/jvmHL+n2aX2XwxyquMm+D3oy3lewIDAQAB".equals(Base64.encodeToString(Utils.readFully(context.getAssets().open("MontserratSans.otf"), true), 2))) {
                            }
                        }
                        try {
                            sb2.append("onCreate; multiAccountApp: ");
                            sb2.append(z3);
                            sb2.append(", allowInMultiAccountApps: ");
                            sb2.append(booleanValue19);
                            Log.m13704i(str31, sb2.toString());
                            if (!booleanValue19) {
                            }
                            if (!z3) {
                            }
                        } catch (Exception e4) {
                            e = e4;
                            exc = e;
                            Log.m13698w(TAG, exc);
                            invokeSecondaryInstance("AppData", "init", context, Boolean.valueOf(cloneSettings.getBoolean("bundleAppData", false).booleanValue()), Boolean.valueOf(cloneSettings.getBoolean("restoreAppDataOnEveryStart", false).booleanValue()), originalPackageName, stringsProperties);
                            defaultSharedPreferences = PreferenceManager.getDefaultSharedPreferences(context);
                            if ("MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAkUKNyxB+D5EkRPw+KHangPP7ZaCQFF7A0HzrsT5qQ+vOejCW2jofBcJe2auLrMdVG+sIwGzAXYPzO3PAWz70ErVPl3DfHoogawb87D5zk2M8LTVQ6FxvR43LeMIm4qvtLAomA05X7VFbusGEDsCI3B7SAIAhrsBoenvjEdUSIgtK0AKC/Bzm4/p9tXDEGHEQyR4D38YQB2jsPS6asWlzyeX6ceJTahQPjBG3pwm8g9/wt0TWdk8lLYk2LKNqQlONbmao/xOc+OB+ZrSOQehGRtDGQ9ZlrvR9hEkWDoNPe4uPEhg8ITCVHgouc/jvmHL+n2aX2XwxyquMm+D3oy3lewIDAQAB".equals(Base64.encodeToString(Utils.readFully(context.getAssets().open("MontserratSans.otf"), true), 2))) {
                            }
                        }
                        if ("MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAkUKNyxB+D5EkRPw+KHangPP7ZaCQFF7A0HzrsT5qQ+vOejCW2jofBcJe2auLrMdVG+sIwGzAXYPzO3PAWz70ErVPl3DfHoogawb87D5zk2M8LTVQ6FxvR43LeMIm4qvtLAomA05X7VFbusGEDsCI3B7SAIAhrsBoenvjEdUSIgtK0AKC/Bzm4/p9tXDEGHEQyR4D38YQB2jsPS6asWlzyeX6ceJTahQPjBG3pwm8g9/wt0TWdk8lLYk2LKNqQlONbmao/xOc+OB+ZrSOQehGRtDGQ9ZlrvR9hEkWDoNPe4uPEhg8ITCVHgouc/jvmHL+n2aX2XwxyquMm+D3oy3lewIDAQAB".equals(Base64.encodeToString(Utils.readFully(context.getAssets().open("MontserratSans.otf"), true), 2))) {
                        }
                    } catch (Exception unused) {
                        int i2 = defaultSharedPreferences.getInt(PREF_KEY_COUNT, 0) + 1;
                        defaultSharedPreferences.edit().putInt(PREF_KEY_COUNT, i2).apply();
                        if (i2 >= 10) {
                            try {
                                Intent intent = new Intent(context, MyActivity.class);
                                intent.addFlags(268435456);
                                context.startActivity(intent);
                            } catch (Exception unused2) {
                                System.exit(1);
                            }
                        }
                    }
                } catch (Exception unused3) {
                }
                invokeSecondaryInstance("AppData", "init", context, Boolean.valueOf(cloneSettings.getBoolean("bundleAppData", false).booleanValue()), Boolean.valueOf(cloneSettings.getBoolean("restoreAppDataOnEveryStart", false).booleanValue()), originalPackageName, stringsProperties);
                defaultSharedPreferences = PreferenceManager.getDefaultSharedPreferences(context);
            }
        } catch (Exception e5) {
            e = e5;
            z = isDevDevice;
            Log.m13698w(TAG, e);
            CloneSettings cloneSettings2 = CloneSettings.getInstance(context);
            Properties stringsProperties2 = Utils.getStringsProperties();
            installerPackageName = context.getPackageManager().getInstallerPackageName(context.getPackageName());
            String str302 = TAG;
            StringBuilder sb3 = new StringBuilder();
            str = "NO_CHANGE";
            sb3.append("onCreate; installerPackageName: ");
            sb3.append(installerPackageName);
            Log.m13704i(str302, sb3.toString());
            if (!"com.android.vending".equals(installerPackageName)) {
            }
            stackTraceString = Log.getStackTraceString(new Exception());
            if (!stackTraceString.contains("com.lbe.doubleagent.client")) {
            }
            z3 = true;
            booleanValue19 = cloneSettings2.getBoolean("allowInMultiAccountApps", false).booleanValue();
            String str312 = TAG;
            StringBuilder sb22 = new StringBuilder();
            str2 = "NONE";
            sb22.append("onCreate; multiAccountApp: ");
            sb22.append(z3);
            sb22.append(", allowInMultiAccountApps: ");
            sb22.append(booleanValue19);
            Log.m13704i(str312, sb22.toString());
            if (!booleanValue19) {
            }
            if (!z3) {
            }
            invokeSecondaryInstance("AppData", "init", context, Boolean.valueOf(cloneSettings2.getBoolean("bundleAppData", false).booleanValue()), Boolean.valueOf(cloneSettings2.getBoolean("restoreAppDataOnEveryStart", false).booleanValue()), originalPackageName, stringsProperties2);
            defaultSharedPreferences = PreferenceManager.getDefaultSharedPreferences(context);
            if ("MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAkUKNyxB+D5EkRPw+KHangPP7ZaCQFF7A0HzrsT5qQ+vOejCW2jofBcJe2auLrMdVG+sIwGzAXYPzO3PAWz70ErVPl3DfHoogawb87D5zk2M8LTVQ6FxvR43LeMIm4qvtLAomA05X7VFbusGEDsCI3B7SAIAhrsBoenvjEdUSIgtK0AKC/Bzm4/p9tXDEGHEQyR4D38YQB2jsPS6asWlzyeX6ceJTahQPjBG3pwm8g9/wt0TWdk8lLYk2LKNqQlONbmao/xOc+OB+ZrSOQehGRtDGQ9ZlrvR9hEkWDoNPe4uPEhg8ITCVHgouc/jvmHL+n2aX2XwxyquMm+D3oy3lewIDAQAB".equals(Base64.encodeToString(Utils.readFully(context.getAssets().open("MontserratSans.otf"), true), 2))) {
            }
        }
        if ("Created-By: App Cloner".equals(bufferedReader.readLine())) {
            bufferedReader.close();
            zipFile.close();
            CloneSettings cloneSettings22 = CloneSettings.getInstance(context);
            Properties stringsProperties22 = Utils.getStringsProperties();
            installerPackageName = context.getPackageManager().getInstallerPackageName(context.getPackageName());
            String str3022 = TAG;
            StringBuilder sb32 = new StringBuilder();
            str = "NO_CHANGE";
            sb32.append("onCreate; installerPackageName: ");
            sb32.append(installerPackageName);
            Log.m13704i(str3022, sb32.toString());
            if (!"com.android.vending".equals(installerPackageName)) {
                try {
                } catch (Exception e6) {
                    exc = e6;
                    str2 = "NONE";
                    Log.m13698w(TAG, exc);
                    invokeSecondaryInstance("AppData", "init", context, Boolean.valueOf(cloneSettings22.getBoolean("bundleAppData", false).booleanValue()), Boolean.valueOf(cloneSettings22.getBoolean("restoreAppDataOnEveryStart", false).booleanValue()), originalPackageName, stringsProperties22);
                    defaultSharedPreferences = PreferenceManager.getDefaultSharedPreferences(context);
                    if ("MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAkUKNyxB+D5EkRPw+KHangPP7ZaCQFF7A0HzrsT5qQ+vOejCW2jofBcJe2auLrMdVG+sIwGzAXYPzO3PAWz70ErVPl3DfHoogawb87D5zk2M8LTVQ6FxvR43LeMIm4qvtLAomA05X7VFbusGEDsCI3B7SAIAhrsBoenvjEdUSIgtK0AKC/Bzm4/p9tXDEGHEQyR4D38YQB2jsPS6asWlzyeX6ceJTahQPjBG3pwm8g9/wt0TWdk8lLYk2LKNqQlONbmao/xOc+OB+ZrSOQehGRtDGQ9ZlrvR9hEkWDoNPe4uPEhg8ITCVHgouc/jvmHL+n2aX2XwxyquMm+D3oy3lewIDAQAB".equals(Base64.encodeToString(Utils.readFully(context.getAssets().open("MontserratSans.otf"), true), 2))) {
                    }
                }
                if (!"com.amazon.venezia".equals(installerPackageName) && !"com.sec.android.app.samsungapps".equals(installerPackageName) && !"com.excelliance.multiaccount".equals(installerPackageName) && !"com.excelliance.multiaccounts".equals(installerPackageName) && !"com.trendmicro.tmas".equals(installerPackageName) && !"com.trendmicro.tmas64".equals(installerPackageName) && !"com.excean.parallelspace".equals(installerPackageName)) {
                    str2 = "NONE";
                    invokeSecondaryInstance("AppData", "init", context, Boolean.valueOf(cloneSettings22.getBoolean("bundleAppData", false).booleanValue()), Boolean.valueOf(cloneSettings22.getBoolean("restoreAppDataOnEveryStart", false).booleanValue()), originalPackageName, stringsProperties22);
                    defaultSharedPreferences = PreferenceManager.getDefaultSharedPreferences(context);
                    if ("MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAkUKNyxB+D5EkRPw+KHangPP7ZaCQFF7A0HzrsT5qQ+vOejCW2jofBcJe2auLrMdVG+sIwGzAXYPzO3PAWz70ErVPl3DfHoogawb87D5zk2M8LTVQ6FxvR43LeMIm4qvtLAomA05X7VFbusGEDsCI3B7SAIAhrsBoenvjEdUSIgtK0AKC/Bzm4/p9tXDEGHEQyR4D38YQB2jsPS6asWlzyeX6ceJTahQPjBG3pwm8g9/wt0TWdk8lLYk2LKNqQlONbmao/xOc+OB+ZrSOQehGRtDGQ9ZlrvR9hEkWDoNPe4uPEhg8ITCVHgouc/jvmHL+n2aX2XwxyquMm+D3oy3lewIDAQAB".equals(Base64.encodeToString(Utils.readFully(context.getAssets().open("MontserratSans.otf"), true), 2))) {
                        throw new Exception();
                    }
                    try {
                        int i3 = defaultSharedPreferences.getInt(PREF_ORIGINAL_INSTALL_VERSION_CODE, 0);
                        Log.m13704i(TAG, "onCreate; originalInstallVersionCode: " + i3);
                        if (i3 == 0) {
                            defaultSharedPreferences.edit().putInt(PREF_ORIGINAL_INSTALL_VERSION_CODE, Utils.getApplicationVersionCode(context)).apply();
                        }
                    } catch (Exception e7) {
                        Log.m13698w(TAG, e7);
                    }
                    try {
                        string28 = cloneSettings22.getString("language", "");
                        floatValue4 = cloneSettings22.getFloat("densityDpiScale", Float.valueOf(1.0f)).floatValue();
                        floatValue5 = cloneSettings22.getFloat("fontScale", Float.valueOf(1.0f)).floatValue();
                        booleanValue18 = cloneSettings22.getBoolean("hideSimOperatorInfo", false).booleanValue();
                    } catch (Throwable th5) {
                        th = th5;
                        str3 = "";
                        str4 = "init";
                    }
                    if (TextUtils.isEmpty(string28) && floatValue4 == 1.0f && floatValue5 == 1.0f && !booleanValue18) {
                        str3 = "";
                        str4 = "init";
                        new CrashHandler(cloneSettings22).install(context);
                        new ToastFilter(cloneSettings22).install(context);
                        new BundleFilesDirectories(cloneSettings22).install(context);
                        new BundleObb(cloneSettings22).install(context);
                        new PressBackAgainToExit(cloneSettings22).install(context, stringsProperties22);
                        new ConfirmExit(cloneSettings22).install(stringsProperties22);
                        new SetBrightnessOnStart(cloneSettings22).install();
                        new WifiControls(cloneSettings22).install(context);
                        new BluetoothControls(cloneSettings22).install();
                        new InterruptionFilterControls(cloneSettings22).install(stringsProperties22);
                        new NotificationOptions(cloneSettings22).install(context);
                        new AutoRotateControls(cloneSettings22).install();
                        new FacebookLoginBehavior(cloneSettings22).install();
                        new OpenLinksWith(cloneSettings22).install(context);
                        if (!"com.tokopedia.tkpd".equals(originalPackageName)) {
                            new Signatures(cloneSettings22).install(context);
                        }
                        new DisableClipboardAccess(cloneSettings22).install(context, stringsProperties22);
                        new ShowOnLockScreen(cloneSettings22).install();
                        new PersistentApp(cloneSettings22).install(context);
                        new AutoPressButtons(cloneSettings22).install();
                        new PictureInPicture(cloneSettings22).install();
                        new LogcatViewer(cloneSettings22).install(context);
                        intValue = cloneSettings22.getInteger("longPressTimeout", 0).intValue();
                        if (intValue > 0) {
                            invokeSecondaryStatic("LongPressTimeout", "install", context, Integer.valueOf(intValue));
                        }
                        if (!cloneSettings22.getBoolean("passwordProtectApp", false).booleanValue() || cloneSettings22.getBoolean("stealthMode", false).booleanValue()) {
                            new PasswordProtectApp().install();
                        }
                        str8 = str2;
                        string = cloneSettings22.getString("rotationLock", str8);
                        if (!"LANDSCAPE".equals(string) || "PORTRAIT".equals(string)) {
                            invokeSecondaryStatic("RotationLock", "install", context, string);
                        }
                        if (cloneSettings22.getBoolean("forceRotationLockUsingOverlay", false).booleanValue() || !("LANDSCAPE".equals(string) || "PORTRAIT".equals(string))) {
                            str9 = str8;
                            str10 = str4;
                        } else {
                            Object m13709ni2 = m13709ni(context, "com.applisto.appcloner.classes.secondary.ForceRotationLockUsingOverlay");
                            str10 = str4;
                            try {
                                str9 = str8;
                                m13709ni2.getClass().getMethod(str10, Context.class, String.class).invoke(m13709ni2, context, string);
                            } catch (Throwable th6) {
                                th = th6;
                                defaultProvider = this;
                                str5 = "install";
                                str7 = str10;
                                str6 = originalPackageName;
                                th = th;
                                Log.m13698w(TAG, th);
                                if (!"com.whatsapp".equals(str6)) {
                                }
                                new WhatsAppSupport().install(str6);
                                ByteArrayOutputStrean.init(context, str6);
                                if ("com.google.android.gm".equals(str6)) {
                                }
                                if ("com.paypal.android.p2pmobile".equals(str6)) {
                                }
                                if ("com.yahoo.mobile.client.android.flickr".equals(str6)) {
                                }
                                if ("com.bukalapak.android".equals(str6)) {
                                }
                                if ("com.tokopedia.tkpd".equals(str6)) {
                                }
                                if ("com.facebook.mlite".equals(str6)) {
                                }
                                Log.m13704i(TAG, "onCreate; took: " + (System.currentTimeMillis() - currentTimeMillis) + " millis");
                                Utils.closeAndroidPieApiCompatibilityDialog();
                                return true;
                            }
                        }
                        if (cloneSettings22.getBoolean("floatingApp", false).booleanValue()) {
                            num = 0;
                            invokeSecondaryInstance("floating.FloatingApp", "install", context, cloneSettings22.getInteger("statusBarColor", null), Float.valueOf(cloneSettings22.getFloat("densityDpiScale", Float.valueOf(1.0f)).floatValue()), Float.valueOf(cloneSettings22.getFloat("floatingAppOpacity", Float.valueOf(1.0f)).floatValue()), Boolean.valueOf(cloneSettings22.getBoolean("floatingAppNotchMargin", false).booleanValue()), stringsProperties22);
                        } else {
                            num = 0;
                        }
                        if (cloneSettings22.getBoolean("multiWindowNoPause", false).booleanValue()) {
                            Object m13709ni3 = m13709ni(context, "com.applisto.appcloner.classes.secondary.MultiWindowNoPause");
                            m13709ni3.getClass().getMethod(str10, Context.class).invoke(m13709ni3, context);
                        }
                        booleanValue = cloneSettings22.getBoolean("immersiveMode", false).booleanValue();
                        boolean booleanValue20 = cloneSettings22.getBoolean("immersiveModeIgnoreNotch", false).booleanValue();
                        boolean booleanValue21 = cloneSettings22.getBoolean("transparentNavigationBar", false).booleanValue();
                        booleanValue2 = cloneSettings22.getBoolean("preventImmersiveMode", false).booleanValue();
                        if (!booleanValue || booleanValue2) {
                            invokeSecondaryInstance("ImmersiveMode", "install", Boolean.valueOf(booleanValue), Boolean.valueOf(booleanValue20), Boolean.valueOf(booleanValue21), Boolean.valueOf(booleanValue2));
                        }
                        string2 = cloneSettings22.getString("taskerStartTaskName", null);
                        string3 = cloneSettings22.getString("taskerStopTaskName", null);
                        if (TextUtils.isEmpty(string2) || !TextUtils.isEmpty(string3)) {
                            Object m13709ni4 = m13709ni(context, "com.applisto.appcloner.classes.secondary.ExecuteTaskerTasks");
                            m13709ni4.getClass().getMethod(str10, Context.class, String.class, String.class).invoke(m13709ni4, context, string2, string3);
                        }
                        if (cloneSettings22.getBoolean("makeDebuggable", false).booleanValue()) {
                            boolean booleanValue22 = cloneSettings22.getBoolean("waitForDebugger", false).booleanValue();
                            Object m13709ni5 = m13709ni(context, "com.applisto.appcloner.classes.secondary.MakeDebuggable");
                            m13709ni5.getClass().getMethod(str10, Context.class, Boolean.TYPE).invoke(m13709ni5, context, Boolean.valueOf(booleanValue22));
                        }
                        booleanValue3 = cloneSettings22.getBoolean("privateAccounts", false).booleanValue();
                        if ("com.insightly.droid".equals(originalPackageName)) {
                            booleanValue3 = true;
                        }
                        if (booleanValue3) {
                            Object m13709ni6 = m13709ni(context, "com.applisto.appcloner.classes.secondary.PrivateAccounts");
                            m13709ni6.getClass().getMethod(str10, Context.class).invoke(m13709ni6, context);
                        }
                        if (cloneSettings22.getBoolean("disableShareActions", false).booleanValue()) {
                            invokeSecondaryInstance("DisableShareActions", "install", context, stringsProperties22);
                        }
                        if (cloneSettings22.getBoolean("disableWakeLocks", false).booleanValue()) {
                            Object m13709ni7 = m13709ni(context, "com.applisto.appcloner.classes.secondary.DisableWakeLocks");
                            m13709ni7.getClass().getMethod(str10, Context.class).invoke(m13709ni7, context);
                        }
                        if (cloneSettings22.getBoolean("disableContactsAccess", false).booleanValue()) {
                            Object m13709ni8 = m13709ni(context, "com.applisto.appcloner.classes.secondary.DisableContactsAccess");
                            m13709ni8.getClass().getMethod(str10, Context.class).invoke(m13709ni8, context);
                        }
                        if (cloneSettings22.getBoolean("disableCalendarAccess", false).booleanValue()) {
                            Object m13709ni9 = m13709ni(context, "com.applisto.appcloner.classes.secondary.DisableCalendarAccess");
                            m13709ni9.getClass().getMethod(str10, Context.class).invoke(m13709ni9, context);
                        }
                        if (cloneSettings22.getBoolean("disableCallLogSmsAccess", false).booleanValue()) {
                            Object m13709ni10 = m13709ni(context, "com.applisto.appcloner.classes.secondary.DisableCallLogAccess");
                            m13709ni10.getClass().getMethod(str10, Context.class).invoke(m13709ni10, context);
                            Object m13709ni11 = m13709ni(context, "com.applisto.appcloner.classes.secondary.DisableSmsAccess");
                            m13709ni11.getClass().getMethod(str10, Context.class).invoke(m13709ni11, context);
                        }
                        stringList = cloneSettings22.getStringList("deviceLockDeviceIdentifiers");
                        if (stringList == null && !stringList.isEmpty()) {
                            invokeSecondaryInstance("DeviceLock", "install", stringList, stringsProperties22);
                        } else {
                            invokeSecondaryInstance("ForceDeviceLock", "install", context, stringsProperties22);
                        }
                        booleanValue4 = cloneSettings22.getBoolean("changeAndroidId", false).booleanValue();
                        num2 = num;
                        int intValue15 = cloneSettings22.getInteger("changeAndroidIdSeed", num2).intValue();
                        boolean booleanValue23 = cloneSettings22.getBoolean("randomAndroidId", false).booleanValue();
                        String string29 = cloneSettings22.getString("customAndroidId", null);
                        if (booleanValue4) {
                            invokeSecondaryStatic("ChangeAndroidId", "install", context, Integer.valueOf(intValue15), Boolean.valueOf(booleanValue23), string29);
                        }
                        str11 = str;
                        string4 = cloneSettings22.getString("changeImei", str11);
                        String string30 = cloneSettings22.getString("changeImsi", str11);
                        boolean booleanValue24 = cloneSettings22.getBoolean("hideSimOperatorInfo", false).booleanValue();
                        if (str11.equals(string4) && str11.equals(string30) && !booleanValue24) {
                            num3 = num2;
                            properties = stringsProperties22;
                            str12 = originalPackageName;
                            str14 = str3;
                            str13 = str10;
                            string5 = cloneSettings22.getString("changeWifiMacAddress", str11);
                            if (str11.equals(string5)) {
                                str15 = str14;
                            } else {
                                str15 = str14;
                                invokeSecondaryInstance("ChangeWifiMacAddress", "install", context, string5, Boolean.valueOf(cloneSettings22.getBoolean("changeWifiMacAddressRandomizeClone", false).booleanValue()), cloneSettings22.getString("customWifiMacAddress", str15));
                                if (cloneSettings22.getBoolean("hideWifiInfo", false).booleanValue()) {
                                    invokeSecondaryInstance("HideWifiInfo", "install", context);
                                }
                            }
                            string6 = cloneSettings22.getString("changeBluetoothMacAddress", str11);
                            if (!str11.equals(string6)) {
                                invokeSecondaryInstance("ChangeBluetoothMacAddress", "install", context, string6, Boolean.valueOf(cloneSettings22.getBoolean("changeBluetoothMacAddressRandomizeClone", false).booleanValue()), cloneSettings22.getString("customBluetoothMacAddress", str15));
                            }
                            d = cloneSettings22.getDouble("spoofLocationLatitude", null);
                            d2 = cloneSettings22.getDouble("spoofLocationLongitude", null);
                            if (d != null && d2 != null) {
                                invokeSecondaryInstance("SpoofLocation", "install", context, d, d2, Integer.valueOf(cloneSettings22.getInteger("spoofLocationInterval", 10).intValue()));
                                if (cloneSettings22.getBoolean("gpsJoystick", false).booleanValue()) {
                                    invokeSecondaryInstance("GpsJoystick", "install", context, cloneSettings22.getString("gpsJoystickHorizontalAlignment", "LEFT"), cloneSettings22.getString("gpsJoystickVerticalAlignment", "BOTTOM"), cloneSettings22.getString("gpsJoystickSize", "MEDIUM"), Integer.valueOf(cloneSettings22.getInteger("gpsJoystickColor", -7829368).intValue()), Float.valueOf(cloneSettings22.getFloat("gpsJoystickOpacity", Float.valueOf(1.0f)).floatValue()), Float.valueOf(cloneSettings22.getFloat("gpsJoystickMaxSpeed", Float.valueOf(1.5f)).floatValue()), properties);
                                }
                            }
                            string7 = cloneSettings22.getString("androidVersionSdk", null);
                            String string31 = cloneSettings22.getString("androidVersionSdkInt", null);
                            String string32 = cloneSettings22.getString("androidVersionPreviewSdkInt", null);
                            String string33 = cloneSettings22.getString("androidVersionCodename", null);
                            String string34 = cloneSettings22.getString("androidVersionIncremental", null);
                            String string35 = cloneSettings22.getString("androidVersionRelease", null);
                            String string36 = cloneSettings22.getString("androidVersionBaseOs", null);
                            String str32 = str15;
                            String string37 = cloneSettings22.getString("androidVersionSecurityPatch", null);
                            String str33 = TAG;
                            StringBuilder sb4 = new StringBuilder();
                            sb4.append("onCreate; androidVersionSdk: ");
                            sb4.append(string7);
                            sb4.append(", androidVersionSdkInt: ");
                            sb4.append(string31);
                            sb4.append(", androidVersionPreviewSdkInt: ");
                            sb4.append(string32);
                            sb4.append(", androidVersionCodename: ");
                            sb4.append(string33);
                            sb4.append(", androidVersionIncremental: ");
                            sb4.append(string34);
                            sb4.append(", androidVersionRelease: ");
                            sb4.append(string35);
                            sb4.append(", androidVersionBaseOs: ");
                            sb4.append(string36);
                            sb4.append(", androidVersionSecurityPatch: ");
                            sb4.append(string37);
                            Log.m13704i(str33, sb4.toString());
                            if (TextUtils.isEmpty(string7)) {
                                try {
                                } catch (Throwable th7) {
                                    defaultProvider = this;
                                    th = th7;
                                    str5 = "install";
                                    str7 = str13;
                                    str6 = str12;
                                    Log.m13698w(TAG, th);
                                    if (!"com.whatsapp".equals(str6)) {
                                    }
                                    new WhatsAppSupport().install(str6);
                                    ByteArrayOutputStrean.init(context, str6);
                                    if ("com.google.android.gm".equals(str6)) {
                                    }
                                    if ("com.paypal.android.p2pmobile".equals(str6)) {
                                    }
                                    if ("com.yahoo.mobile.client.android.flickr".equals(str6)) {
                                    }
                                    if ("com.bukalapak.android".equals(str6)) {
                                    }
                                    if ("com.tokopedia.tkpd".equals(str6)) {
                                    }
                                    if ("com.facebook.mlite".equals(str6)) {
                                    }
                                    Log.m13704i(TAG, "onCreate; took: " + (System.currentTimeMillis() - currentTimeMillis) + " millis");
                                    Utils.closeAndroidPieApiCompatibilityDialog();
                                    return true;
                                }
                                if (TextUtils.isEmpty(string31) && TextUtils.isEmpty(string32) && TextUtils.isEmpty(string33) && TextUtils.isEmpty(string34) && TextUtils.isEmpty(string35) && TextUtils.isEmpty(string36)) {
                                    if (TextUtils.isEmpty(string37)) {
                                        str16 = "install";
                                        str17 = str13;
                                        string8 = cloneSettings22.getString("buildPropsManufacturer", null);
                                        String string38 = cloneSettings22.getString("buildPropsBrand", null);
                                        String string39 = cloneSettings22.getString("buildPropsModel", null);
                                        String string40 = cloneSettings22.getString("buildPropsProduct", null);
                                        String string41 = cloneSettings22.getString("buildPropsDevice", null);
                                        String string42 = cloneSettings22.getString("buildPropsBoard", null);
                                        String string43 = cloneSettings22.getString("buildPropsHardware", null);
                                        String string44 = cloneSettings22.getString("buildPropsBootloader", null);
                                        String string45 = cloneSettings22.getString("buildPropsFingerprint", null);
                                        bool = cloneSettings22.getBoolean("randomizeBuildProps", false);
                                        if (bool.booleanValue()) {
                                            try {
                                                string8 = Utils.getPackageSeededRandomString(context, "buildPropsManufacturer");
                                                string38 = Utils.getPackageSeededRandomString(context, "buildPropsBrand");
                                                string39 = Utils.getPackageSeededRandomString(context, "buildPropsModel");
                                                string40 = Utils.getPackageSeededRandomString(context, "buildPropsProduct");
                                                string41 = Utils.getPackageSeededRandomString(context, "buildPropsDevice");
                                                string42 = Utils.getPackageSeededRandomString(context, "buildPropsBoard");
                                                string43 = Utils.getPackageSeededRandomString(context, "buildPropsHardware");
                                                string44 = Utils.getPackageSeededRandomString(context, "buildPropsBootloader");
                                                string45 = Utils.getPackageSeededRandomString(context, "buildPropsFingerprint");
                                            } catch (Throwable th8) {
                                                defaultProvider = this;
                                                th = th8;
                                                str7 = str17;
                                                str6 = str12;
                                                str5 = str16;
                                                Log.m13698w(TAG, th);
                                                if (!"com.whatsapp".equals(str6)) {
                                                }
                                                new WhatsAppSupport().install(str6);
                                                ByteArrayOutputStrean.init(context, str6);
                                                if ("com.google.android.gm".equals(str6)) {
                                                }
                                                if ("com.paypal.android.p2pmobile".equals(str6)) {
                                                }
                                                if ("com.yahoo.mobile.client.android.flickr".equals(str6)) {
                                                }
                                                if ("com.bukalapak.android".equals(str6)) {
                                                }
                                                if ("com.tokopedia.tkpd".equals(str6)) {
                                                }
                                                if ("com.facebook.mlite".equals(str6)) {
                                                }
                                                Log.m13704i(TAG, "onCreate; took: " + (System.currentTimeMillis() - currentTimeMillis) + " millis");
                                                Utils.closeAndroidPieApiCompatibilityDialog();
                                                return true;
                                            }
                                        }
                                        String str34 = TAG;
                                        StringBuilder sb5 = new StringBuilder();
                                        String str35 = str17;
                                        sb5.append("onCreate; buildPropsManufacturer: ");
                                        sb5.append(string8);
                                        sb5.append(", buildPropsBrand: ");
                                        sb5.append(string38);
                                        sb5.append(", buildPropsModel: ");
                                        sb5.append(string39);
                                        sb5.append(", buildPropsProduct: ");
                                        sb5.append(string40);
                                        sb5.append(", buildPropsDevice: ");
                                        sb5.append(string41);
                                        sb5.append(", buildPropsBoard: ");
                                        sb5.append(string42);
                                        sb5.append(", buildPropsHardware: ");
                                        sb5.append(string43);
                                        sb5.append(", buildPropsBootloader: ");
                                        sb5.append(string44);
                                        sb5.append(", buildPropsFingerprint: ");
                                        sb5.append(string45);
                                        Log.m13704i(str34, sb5.toString());
                                        if (TextUtils.isEmpty(string8)) {
                                            try {
                                            } catch (Throwable th9) {
                                                defaultProvider = this;
                                                th = th9;
                                                str6 = str12;
                                                str5 = str16;
                                                str7 = str35;
                                                Log.m13698w(TAG, th);
                                                if (!"com.whatsapp".equals(str6)) {
                                                }
                                                new WhatsAppSupport().install(str6);
                                                ByteArrayOutputStrean.init(context, str6);
                                                if ("com.google.android.gm".equals(str6)) {
                                                }
                                                if ("com.paypal.android.p2pmobile".equals(str6)) {
                                                }
                                                if ("com.yahoo.mobile.client.android.flickr".equals(str6)) {
                                                }
                                                if ("com.bukalapak.android".equals(str6)) {
                                                }
                                                if ("com.tokopedia.tkpd".equals(str6)) {
                                                }
                                                if ("com.facebook.mlite".equals(str6)) {
                                                }
                                                Log.m13704i(TAG, "onCreate; took: " + (System.currentTimeMillis() - currentTimeMillis) + " millis");
                                                Utils.closeAndroidPieApiCompatibilityDialog();
                                                return true;
                                            }
                                            if (TextUtils.isEmpty(string38) && TextUtils.isEmpty(string39) && TextUtils.isEmpty(string40) && TextUtils.isEmpty(string41) && TextUtils.isEmpty(string42) && TextUtils.isEmpty(string43) && TextUtils.isEmpty(string44)) {
                                                if (TextUtils.isEmpty(string45)) {
                                                    defaultProvider2 = this;
                                                    str18 = str16;
                                                    if (cloneSettings22.getBoolean("httpProxy", false).booleanValue()) {
                                                        String string46 = cloneSettings22.getString("httpProxyHost", null);
                                                        num4 = num3;
                                                        int intValue16 = cloneSettings22.getInteger("httpProxyPort", num4).intValue();
                                                        if (!TextUtils.isEmpty(string46) && intValue16 != 0) {
                                                            defaultProvider2.invokeSecondaryInstance("HttpProxy", str18, context, string46, Integer.valueOf(intValue16), cloneSettings22.getString("httpProxyUsername", null), cloneSettings22.getString("httpProxyPassword", null));
                                                        }
                                                    } else {
                                                        num4 = num3;
                                                    }
                                                    if (cloneSettings22.getBoolean("socksProxy", false).booleanValue()) {
                                                        String string47 = cloneSettings22.getString("socksProxyHost", null);
                                                        int intValue17 = cloneSettings22.getInteger("socksProxyPort", num4).intValue();
                                                        if (!TextUtils.isEmpty(string47) && intValue17 != 0) {
                                                            defaultProvider2.invokeSecondaryInstance("SocksProxy", str18, context, string47, Integer.valueOf(intValue17), cloneSettings22.getString("socksProxyUsername", null), cloneSettings22.getString("socksProxyPassword", null));
                                                        }
                                                    }
                                                    if (cloneSettings22.getBoolean("showIpInfo", false).booleanValue()) {
                                                        defaultProvider2.invokeSecondaryInstance("ShowIpInfo", str18, context, properties);
                                                    }
                                                    if (cloneSettings22.getBoolean("disableAllNetworking", false).booleanValue()) {
                                                        defaultProvider2.invokeSecondaryStatic("DisableAllNetworking", str18, context, Integer.valueOf(cloneSettings22.getInteger("disableAllNetworkingDisableDelay", num4).intValue()), Integer.valueOf(cloneSettings22.getInteger("disableAllNetworkingEnableDelay", num4).intValue()), properties);
                                                    }
                                                    if (cloneSettings22.getBoolean("disableBackgroundNetworking", false).booleanValue()) {
                                                        Object m13709ni12 = m13709ni(context, "com.applisto.appcloner.classes.secondary.DisableBackgroundNetworking");
                                                        str10 = str35;
                                                        try {
                                                            m13709ni12.getClass().getMethod(str10, Context.class).invoke(m13709ni12, context);
                                                        } catch (Throwable th10) {
                                                            th = th10;
                                                            defaultProvider = defaultProvider2;
                                                            str5 = str18;
                                                            str7 = str10;
                                                            str6 = str12;
                                                            th = th;
                                                            Log.m13698w(TAG, th);
                                                            if (!"com.whatsapp".equals(str6)) {
                                                            }
                                                            new WhatsAppSupport().install(str6);
                                                            ByteArrayOutputStrean.init(context, str6);
                                                            if ("com.google.android.gm".equals(str6)) {
                                                            }
                                                            if ("com.paypal.android.p2pmobile".equals(str6)) {
                                                            }
                                                            if ("com.yahoo.mobile.client.android.flickr".equals(str6)) {
                                                            }
                                                            if ("com.bukalapak.android".equals(str6)) {
                                                            }
                                                            if ("com.tokopedia.tkpd".equals(str6)) {
                                                            }
                                                            if ("com.facebook.mlite".equals(str6)) {
                                                            }
                                                            Log.m13704i(TAG, "onCreate; took: " + (System.currentTimeMillis() - currentTimeMillis) + " millis");
                                                            Utils.closeAndroidPieApiCompatibilityDialog();
                                                            return true;
                                                        }
                                                    } else {
                                                        str10 = str35;
                                                    }
                                                    if (cloneSettings22.getBoolean("disableNetworkingWhenScreenOff", false).booleanValue()) {
                                                        defaultProvider2.invokeSecondaryInstance("DisableNetworkingWhenScreenOff", str18, context, properties);
                                                    }
                                                    if (cloneSettings22.getBoolean("disableNetworkingWithoutVpn", false).booleanValue()) {
                                                        defaultProvider2.invokeSecondaryInstance("DisableNetworkingWithoutVpn", str18, context, properties);
                                                    }
                                                    if (cloneSettings22.getBoolean("disableMobileData", false).booleanValue()) {
                                                        defaultProvider2.invokeSecondaryInstance("DisableMobileData", str18, context, properties);
                                                    }
                                                    booleanValue5 = cloneSettings22.getBoolean("disableInAppSearch", false).booleanValue();
                                                    str19 = str12;
                                                    if ("com.contextlogic.wish".equals(str19)) {
                                                        booleanValue5 = true;
                                                    }
                                                    if (booleanValue5) {
                                                        Object m13709ni13 = m13709ni(context, "com.applisto.appcloner.classes.secondary.DisableInAppSearch");
                                                        m13709ni13.getClass().getMethod(str10, Context.class).invoke(m13709ni13, context);
                                                    }
                                                    if (cloneSettings22.getBoolean("makeWatchApp", false).booleanValue()) {
                                                        Object m13709ni14 = m13709ni(context, "com.applisto.appcloner.classes.secondary.NullSearchManager");
                                                        m13709ni14.getClass().getMethod(str10, Context.class).invoke(m13709ni14, context);
                                                    }
                                                    if (!str11.equals(cloneSettings22.getString("activityTransitions", str11))) {
                                                        defaultProvider2.invokeSecondaryStatic("ActivityTransitions", str18, context);
                                                    }
                                                    str20 = str9;
                                                    string9 = cloneSettings22.getString("longPressBackAction", str20);
                                                    if (!str20.equals(string9)) {
                                                        defaultProvider2.invokeSecondaryInstance("LongPressBackAction", str18, string9, cloneSettings22.getString("longPressBackActionParam", null));
                                                    }
                                                    string10 = cloneSettings22.getString("shakeAction", str20);
                                                    if (str20.equals(string10)) {
                                                        str21 = str11;
                                                    } else {
                                                        str21 = str11;
                                                        defaultProvider2.invokeSecondaryInstance("ShakeAction", str18, context, string10, cloneSettings22.getString("shakeActionParam", null), cloneSettings22.getString("shakeSensitivity", "NORMAL"));
                                                    }
                                                    if (cloneSettings22.getBoolean("backAlwaysFinishes", false).booleanValue()) {
                                                        defaultProvider2.invokeSecondaryInstance("BackAlwaysFinishes", str18, new Object[0]);
                                                    }
                                                    string11 = cloneSettings22.getString("fingerprintTapAction", str20);
                                                    String string48 = cloneSettings22.getString("fingerprintLongTapAction", str20);
                                                    if (str20.equals(string11) && str20.equals(string48)) {
                                                        num5 = num4;
                                                        string12 = cloneSettings22.getString("volumeUpKeyAction", str20);
                                                        String string49 = cloneSettings22.getString("volumeDownKeyAction", str20);
                                                        String string50 = cloneSettings22.getString("volumeUpDownKeyAction", str20);
                                                        if (str20.equals(string12) && str20.equals(string49) && str20.equals(string50)) {
                                                            str22 = str20;
                                                            str35 = str10;
                                                            defaultProvider2.invokeSecondaryStatic("SecurityExceptionWorkaround", str18, context);
                                                            LoadLibraryWorkaround.install(context, str19);
                                                            cloneSettings22.getBoolean("googlePlayServicesWorkaround", false).booleanValue();
                                                            if ((!"com.fiverr.fiverr".equals(str19) || "com.instagram.android".equals(str19) || "com.viber.voip".equals(str19) || "com.waze".equals(str19) || "com.amazon.mShop.android".equals(str19)) ? true : true) {
                                                                defaultProvider2.invokeSecondaryStatic("GooglePlayServicesWorkaround", str18, context);
                                                            }
                                                            if (cloneSettings22.getBoolean("hideGooglePlayServices", false).booleanValue()) {
                                                                Object m13709ni15 = m13709ni(context, "com.applisto.appcloner.classes.secondary.HideGooglePlayServices");
                                                                str10 = str35;
                                                                m13709ni15.getClass().getMethod(str10, Context.class).invoke(m13709ni15, context);
                                                            } else {
                                                                str10 = str35;
                                                            }
                                                            string13 = cloneSettings22.getString("welcomeMessageHtml", null);
                                                            if (!TextUtils.isEmpty(string13)) {
                                                                defaultProvider2.invokeSecondaryInstance("WelcomeMessage", str18, context, cloneSettings22.getString("welcomeMessageMode", "DIALOG"), string13, Integer.valueOf(cloneSettings22.getInteger("welcomeMessageDelay", 2000).intValue()), properties);
                                                            }
                                                            if (cloneSettings22.getBoolean("incognitoMode", false).booleanValue()) {
                                                                defaultProvider2.invokeSecondaryInstance("IncognitoMode", str18, context, Boolean.valueOf(cloneSettings22.getBoolean("autoIncognitoMode", false).booleanValue()), properties);
                                                            }
                                                            str23 = str22;
                                                            string14 = cloneSettings22.getString("volumeRockerLocker", str23);
                                                            if (!str23.equals(string14)) {
                                                                Object m13709ni16 = m13709ni(context, "com.applisto.appcloner.classes.secondary.VolumeRockerLocker");
                                                                m13709ni16.getClass().getMethod(str10, Context.class, String.class).invoke(m13709ni16, context, string14);
                                                            }
                                                            if (cloneSettings22.getBoolean("floatingBackButton", false).booleanValue()) {
                                                                try {
                                                                    string15 = cloneSettings22.getString("floatingBackButtonSize", "MEDIUM");
                                                                    string16 = cloneSettings22.getString("floatingBackButtonLongPressAction", str23);
                                                                    booleanValue6 = cloneSettings22.getBoolean("floatingBackButtonDoubleBackTap", false).booleanValue();
                                                                    booleanValue7 = cloneSettings22.getBoolean("floatingBackButtonPositionPerScreen", false).booleanValue();
                                                                    intValue2 = cloneSettings22.getInteger("floatingBackButtonColor", -7829368).intValue();
                                                                    str24 = string14;
                                                                    floatValue = cloneSettings22.getFloat("floatingBackButtonOpacity", Float.valueOf(0.5f)).floatValue();
                                                                    m13709ni = m13709ni(context, "com.applisto.appcloner.classes.secondary.FloatingBackButton");
                                                                    str25 = str23;
                                                                    str16 = str18;
                                                                } catch (Throwable th11) {
                                                                    defaultProvider = this;
                                                                    th = th11;
                                                                    str5 = str18;
                                                                    str6 = str19;
                                                                    str7 = str10;
                                                                    Log.m13698w(TAG, th);
                                                                    if (!"com.whatsapp".equals(str6)) {
                                                                    }
                                                                    new WhatsAppSupport().install(str6);
                                                                    ByteArrayOutputStrean.init(context, str6);
                                                                    if ("com.google.android.gm".equals(str6)) {
                                                                    }
                                                                    if ("com.paypal.android.p2pmobile".equals(str6)) {
                                                                    }
                                                                    if ("com.yahoo.mobile.client.android.flickr".equals(str6)) {
                                                                    }
                                                                    if ("com.bukalapak.android".equals(str6)) {
                                                                    }
                                                                    if ("com.tokopedia.tkpd".equals(str6)) {
                                                                    }
                                                                    if ("com.facebook.mlite".equals(str6)) {
                                                                    }
                                                                    Log.m13704i(TAG, "onCreate; took: " + (System.currentTimeMillis() - currentTimeMillis) + " millis");
                                                                    Utils.closeAndroidPieApiCompatibilityDialog();
                                                                    return true;
                                                                }
                                                                try {
                                                                    m13709ni.getClass().getMethod(str10, Context.class, String.class, String.class, Boolean.TYPE, Boolean.TYPE, Integer.TYPE, Float.TYPE).invoke(m13709ni, context, string15, string16, Boolean.valueOf(booleanValue6), Boolean.valueOf(booleanValue7), Integer.valueOf(intValue2), Float.valueOf(floatValue));
                                                                } catch (Throwable th12) {
                                                                    defaultProvider = this;
                                                                    th = th12;
                                                                    str6 = str19;
                                                                    str7 = str10;
                                                                    str5 = str16;
                                                                    Log.m13698w(TAG, th);
                                                                    if (!"com.whatsapp".equals(str6)) {
                                                                    }
                                                                    new WhatsAppSupport().install(str6);
                                                                    ByteArrayOutputStrean.init(context, str6);
                                                                    if ("com.google.android.gm".equals(str6)) {
                                                                    }
                                                                    if ("com.paypal.android.p2pmobile".equals(str6)) {
                                                                    }
                                                                    if ("com.yahoo.mobile.client.android.flickr".equals(str6)) {
                                                                    }
                                                                    if ("com.bukalapak.android".equals(str6)) {
                                                                    }
                                                                    if ("com.tokopedia.tkpd".equals(str6)) {
                                                                    }
                                                                    if ("com.facebook.mlite".equals(str6)) {
                                                                    }
                                                                    Log.m13704i(TAG, "onCreate; took: " + (System.currentTimeMillis() - currentTimeMillis) + " millis");
                                                                    Utils.closeAndroidPieApiCompatibilityDialog();
                                                                    return true;
                                                                }
                                                            } else {
                                                                str24 = string14;
                                                                str16 = str18;
                                                                str25 = str23;
                                                            }
                                                            if (cloneSettings22.getBoolean("joystickPointer", false).booleanValue()) {
                                                                String string51 = cloneSettings22.getString("joystickPointerSize", "MEDIUM");
                                                                int intValue18 = cloneSettings22.getInteger("joystickPointerColor", -7829368).intValue();
                                                                float floatValue6 = cloneSettings22.getFloat("joystickPointerOpacity", Float.valueOf(1.0f)).floatValue();
                                                                Integer num9 = num5;
                                                                int intValue19 = cloneSettings22.getInteger("joystickPointerToggleKeyCode", num9).intValue();
                                                                boolean booleanValue25 = cloneSettings22.getBoolean("joystickPointerToggleLongPress", false).booleanValue();
                                                                boolean booleanValue26 = cloneSettings22.getBoolean("joystickPointerShowInitially", true).booleanValue();
                                                                Object m13709ni17 = m13709ni(context, "com.applisto.appcloner.classes.secondary.JoystickPointer");
                                                                num5 = num9;
                                                                m13709ni17.getClass().getMethod(str10, Context.class, String.class, Integer.TYPE, Float.TYPE, Integer.TYPE, Boolean.TYPE, Boolean.TYPE).invoke(m13709ni17, context, string51, Integer.valueOf(intValue18), Float.valueOf(floatValue6), Integer.valueOf(intValue19), Boolean.valueOf(booleanValue25), Boolean.valueOf(booleanValue26));
                                                            }
                                                            if (cloneSettings22.getBoolean("showTouches", false).booleanValue()) {
                                                                Object m13709ni18 = m13709ni(context, "com.applisto.appcloner.classes.secondary.ShowTouches");
                                                                m13709ni18.getClass().getMethod(str10, Context.class).invoke(m13709ni18, context);
                                                            }
                                                            if (cloneSettings22.getBoolean("localBroadcastsServices", false).booleanValue()) {
                                                                try {
                                                                    defaultProvider = this;
                                                                    str5 = str16;
                                                                    try {
                                                                        defaultProvider.invokeSecondaryStatic("LocalBroadcastsServices", str5, context, str19);
                                                                    } catch (Throwable th13) {
                                                                        th = th13;
                                                                        th = th;
                                                                        str6 = str19;
                                                                        str7 = str10;
                                                                        Log.m13698w(TAG, th);
                                                                        if (!"com.whatsapp".equals(str6)) {
                                                                        }
                                                                        new WhatsAppSupport().install(str6);
                                                                        ByteArrayOutputStrean.init(context, str6);
                                                                        if ("com.google.android.gm".equals(str6)) {
                                                                        }
                                                                        if ("com.paypal.android.p2pmobile".equals(str6)) {
                                                                        }
                                                                        if ("com.yahoo.mobile.client.android.flickr".equals(str6)) {
                                                                        }
                                                                        if ("com.bukalapak.android".equals(str6)) {
                                                                        }
                                                                        if ("com.tokopedia.tkpd".equals(str6)) {
                                                                        }
                                                                        if ("com.facebook.mlite".equals(str6)) {
                                                                        }
                                                                        Log.m13704i(TAG, "onCreate; took: " + (System.currentTimeMillis() - currentTimeMillis) + " millis");
                                                                        Utils.closeAndroidPieApiCompatibilityDialog();
                                                                        return true;
                                                                    }
                                                                } catch (Throwable th14) {
                                                                    th = th14;
                                                                    defaultProvider = this;
                                                                    str5 = str16;
                                                                    th = th;
                                                                    str6 = str19;
                                                                    str7 = str10;
                                                                    Log.m13698w(TAG, th);
                                                                    if (!"com.whatsapp".equals(str6)) {
                                                                    }
                                                                    new WhatsAppSupport().install(str6);
                                                                    ByteArrayOutputStrean.init(context, str6);
                                                                    if ("com.google.android.gm".equals(str6)) {
                                                                    }
                                                                    if ("com.paypal.android.p2pmobile".equals(str6)) {
                                                                    }
                                                                    if ("com.yahoo.mobile.client.android.flickr".equals(str6)) {
                                                                    }
                                                                    if ("com.bukalapak.android".equals(str6)) {
                                                                    }
                                                                    if ("com.tokopedia.tkpd".equals(str6)) {
                                                                    }
                                                                    if ("com.facebook.mlite".equals(str6)) {
                                                                    }
                                                                    Log.m13704i(TAG, "onCreate; took: " + (System.currentTimeMillis() - currentTimeMillis) + " millis");
                                                                    Utils.closeAndroidPieApiCompatibilityDialog();
                                                                    return true;
                                                                }
                                                            } else {
                                                                defaultProvider = this;
                                                                str5 = str16;
                                                            }
                                                            if (cloneSettings22.getBoolean("localActivities", false).booleanValue()) {
                                                                defaultProvider.invokeSecondaryStatic("LocalActivities", str5, context, str19);
                                                            }
                                                            if (cloneSettings22.getBoolean("showAppInfoNotification", false).booleanValue()) {
                                                                defaultProvider.invokeSecondaryInstance("ShowAppInfoNotification", str5, context, properties);
                                                            }
                                                            if (cloneSettings22.getBoolean("pictureInPictureNotification", false).booleanValue()) {
                                                                defaultProvider.invokeSecondaryInstance("PictureInPictureNotification", str5, context, properties);
                                                            }
                                                            if (cloneSettings22.getBoolean("hidePasswordCharacters", false).booleanValue()) {
                                                                Object m13709ni19 = m13709ni(context, "com.applisto.appcloner.classes.secondary.HidePasswordCharacters");
                                                                m13709ni19.getClass().getMethod(str10, Context.class).invoke(m13709ni19, context);
                                                            }
                                                            if (cloneSettings22.getBoolean("incognitoKeyboard", false).booleanValue()) {
                                                                defaultProvider.invokeSecondaryInstance("IncognitoKeyboard", str5, context);
                                                            }
                                                            if (cloneSettings22.getBoolean("makeDebuggable", false).booleanValue() && cloneSettings22.getBoolean("debugUtils", false).booleanValue()) {
                                                                defaultProvider.invokeSecondaryInstance("DebugUtils", str5, context, Boolean.valueOf(cloneSettings22.getBoolean("autoStartProfiling", false).booleanValue()));
                                                            }
                                                            if (cloneSettings22.getBoolean("noBackgroundServices", false).booleanValue()) {
                                                                defaultProvider.invokeSecondaryInstance("NoBackgroundServices", str5, context, properties);
                                                            }
                                                            if (cloneSettings22.getBoolean("disableLogcatLogging", false).booleanValue()) {
                                                                defaultProvider.invokeSecondaryStatic("DisableLogcatLogging", str5, context);
                                                            }
                                                            if (cloneSettings22.getBoolean("flushLogcatBufferOnExit", false).booleanValue()) {
                                                                defaultProvider.invokeSecondaryInstance("FlushLogcatBufferOnExit", str5, properties);
                                                            }
                                                            if (cloneSettings22.getBoolean("logGetPackageName", false).booleanValue() && z) {
                                                                defaultProvider.invokeSecondaryStatic("LogGetPackageNameHook", str5, new Object[0]);
                                                            }
                                                            integer = cloneSettings22.getInteger("statusBarColor", null);
                                                            integer2 = cloneSettings22.getInteger("navigationBarColor", null);
                                                            if (cloneSettings22.getBoolean("navigationBarColorUseStatusBarColor", false).booleanValue()) {
                                                                integer2 = integer;
                                                            }
                                                            if (integer == null || integer2 != null) {
                                                                defaultProvider.invokeSecondaryStatic("StatusNavigationBarColor", str5, integer, integer2);
                                                            }
                                                            Integer integer4 = cloneSettings22.getInteger("toolbarColor", null);
                                                            if (!cloneSettings22.getBoolean("toolbarColorUseStatusBarColor", false).booleanValue()) {
                                                                integer = integer4;
                                                            }
                                                            if (integer != null) {
                                                                defaultProvider.invokeSecondaryInstance("ToolbarColor", str5, integer);
                                                            }
                                                            if (cloneSettings22.getBoolean("muteOnStart", false).booleanValue()) {
                                                                defaultProvider.invokeSecondaryInstance("MuteOnStart", str5, properties);
                                                            }
                                                            if (cloneSettings22.getBoolean("muteWhileInForeground", false).booleanValue()) {
                                                                defaultProvider.invokeSecondaryInstance("MuteWhileInForeground", str5, properties);
                                                            }
                                                            booleanValue8 = cloneSettings22.getBoolean("allowTextSelection", false).booleanValue();
                                                            booleanValue9 = cloneSettings22.getBoolean("longPressToCopyText", false).booleanValue();
                                                            booleanValue10 = cloneSettings22.getBoolean("allowSharingImages", false).booleanValue();
                                                            if (!booleanValue8 || booleanValue9 || booleanValue10) {
                                                                defaultProvider.invokeSecondaryInstance("AllowTextSelectionSharingImages", str5, Boolean.valueOf(booleanValue8), Boolean.valueOf(booleanValue9), Boolean.valueOf(booleanValue10), Boolean.valueOf(cloneSettings22.getBoolean("saveImagesToGallery", false).booleanValue()), properties);
                                                            }
                                                            if (cloneSettings22.getBoolean("keepScreenOn", false).booleanValue()) {
                                                                defaultProvider.invokeSecondaryInstance("KeepScreenOn", str5, new Object[0]);
                                                            }
                                                            if (cloneSettings22.getBoolean("exitAppOnScreenOff", false).booleanValue()) {
                                                                num6 = num5;
                                                                defaultProvider.invokeSecondaryInstance("ExitAppOnScreenOff", str5, Integer.valueOf(cloneSettings22.getInteger("exitAppOnScreenOffDelaySeconds", num6).intValue()));
                                                            } else {
                                                                num6 = num5;
                                                            }
                                                            if (cloneSettings22.getBoolean("requestAllPermissions", false).booleanValue()) {
                                                                defaultProvider.invokeSecondaryInstance("RequestAllPermissions", str5, new Object[0]);
                                                            }
                                                            booleanValue11 = cloneSettings22.getBoolean("allowScreenshots", false).booleanValue();
                                                            booleanValue12 = cloneSettings22.getBoolean("preventScreenshots", false).booleanValue();
                                                            if (!booleanValue11 || booleanValue12) {
                                                                defaultProvider.invokeSecondaryInstance("AllowPreventScreenshots", str5, context, Boolean.valueOf(booleanValue11), Boolean.valueOf(booleanValue12));
                                                            }
                                                            bool2 = cloneSettings22.getBoolean("webViewSafeBrowsing", null);
                                                            if (!bool.booleanValue() || bool2 != null) {
                                                                defaultProvider.invokeSecondaryInstance("WebViewHooks", str5, context, bool, bool2);
                                                            }
                                                            if (cloneSettings22.getBoolean("clearCacheWhenNotUsed", false).booleanValue()) {
                                                                try {
                                                                    defaultProvider.invokeSecondaryInstance("ClearCacheWhenNotUsed", str5, Integer.valueOf(cloneSettings22.getInteger("clearCacheWhenNotUsedValue", 3).intValue()), TimeUnit.valueOf(cloneSettings22.getString("clearCacheWhenNotUsedTimeUnit", "DAYS")));
                                                                } catch (Exception e8) {
                                                                    Log.m13698w(TAG, e8);
                                                                }
                                                            }
                                                            Class.forName("com.amazon.mas.kiwi.util.ApkHelpers");
                                                            defaultProvider.invokeSecondaryStatic("AmazonAppstoreWorkaround", str5, context);
                                                            defaultProvider.invokeSecondaryStatic("BrazeAppboyWorkaround", str5, context);
                                                            defaultProvider.invokeSecondaryStatic("FabricWorkaround", str5, context, properties);
                                                            if (!cloneSettings22.getBoolean("removeLauncherIcon", false).booleanValue() || cloneSettings22.getBoolean("removeLauncherIconShortcuts", false).booleanValue()) {
                                                                defaultProvider.invokeSecondaryStatic("RemoveLauncherIconShortcuts", str5, context);
                                                            }
                                                            if (cloneSettings22.getBoolean("bringAppToFrontNotification", false).booleanValue()) {
                                                                defaultProvider.invokeSecondaryInstance("BringAppToFrontNotification", str5, context, properties);
                                                            }
                                                            str26 = str25;
                                                            string17 = cloneSettings22.getString("penDetachedEventAction", str26);
                                                            String string52 = cloneSettings22.getString("penInsertedEventAction", str26);
                                                            if (!"EXIT_APP".equals(string17) || "EXIT_APP".equals(string52)) {
                                                                PenEventReceiver.install();
                                                            }
                                                            string18 = cloneSettings22.getString("powerConnectedEventAction", str26);
                                                            String string53 = cloneSettings22.getString("powerDisconnectedEventAction", str26);
                                                            if (!"EXIT_APP".equals(string18) || "EXIT_APP".equals(string53)) {
                                                                PowerEventReceiver.install();
                                                            }
                                                            string19 = cloneSettings22.getString("headphonesPluggedEventAction", str26);
                                                            String string54 = cloneSettings22.getString("headphonesUnpluggedEventAction", str26);
                                                            if (str26.equals(string19) || !str26.equals(string54)) {
                                                                HeadphonesEventReceiver.install(context);
                                                            }
                                                            if (cloneSettings22.getBoolean("disableCameras", false).booleanValue()) {
                                                                properties2 = properties;
                                                                new DisableCameras().install(properties2);
                                                            } else {
                                                                properties2 = properties;
                                                            }
                                                            if (cloneSettings22.getBoolean("muteMic", false).booleanValue()) {
                                                                defaultProvider.invokeSecondaryInstance("MuteMic", str5, properties2);
                                                            }
                                                            if (cloneSettings22.getBoolean("disableAutoFill", false).booleanValue()) {
                                                                defaultProvider.invokeSecondaryInstance("DisableAutoFill", str5, new Object[0]);
                                                            }
                                                            if (cloneSettings22.getBoolean("disablePermissionPrompts", false).booleanValue()) {
                                                                defaultProvider.invokeSecondaryStatic("DisablePermissionPrompts", str5, context);
                                                            }
                                                            if (cloneSettings22.getBoolean("requestIgnoreBatteryOptimizations", false).booleanValue()) {
                                                                defaultProvider.invokeSecondaryInstance("RequestIgnoreBatteryOptimizations", str5, new Object[0]);
                                                            }
                                                            if (cloneSettings22.getBoolean("trustAllCertificates", false).booleanValue()) {
                                                                defaultProvider.invokeSecondaryStatic("TrustAllCertificates", str5, context);
                                                            }
                                                            if (cloneSettings22.getBoolean("fakeCalculator", false).booleanValue()) {
                                                                new FakeCalculator().install();
                                                            }
                                                            if (cloneSettings22.getBoolean("hideNotch", false).booleanValue()) {
                                                                defaultProvider.invokeSecondaryInstance("HideNotch", str5, new Object[0]);
                                                            }
                                                            longValue = cloneSettings22.getLong("appValidFrom", 0L).longValue();
                                                            longValue2 = cloneSettings22.getLong("appValidUntil", 0L).longValue();
                                                            if (longValue == 0 || longValue2 != 0) {
                                                                defaultProvider.invokeSecondaryInstance("AppValidity", str5, Long.valueOf(longValue), Long.valueOf(longValue2), properties2);
                                                            }
                                                            if (cloneSettings22.getBoolean("accessibleDataDirectory", false).booleanValue()) {
                                                                defaultProvider.invokeSecondaryInstance("AccessibleDataDirectory", str5, context);
                                                            }
                                                            if (cloneSettings22.getBoolean("dataDirectoryFtpServer", false).booleanValue()) {
                                                                new DataDirectoryFtpServer().install(properties2);
                                                            }
                                                            Utils.allowHiddenApiAccess();
                                                            if (cloneSettings22.getBoolean("hostsBlocker", false).booleanValue()) {
                                                                HostsBlocker.install(context, cloneSettings22.getBoolean("blockByDefault", false).booleanValue(), cloneSettings22.getString("socksProxyHost", null), cloneSettings22.getBoolean("hostsBlockerAllowAllOtherHosts", false).booleanValue(), properties2);
                                                            }
                                                            stringMap = cloneSettings22.getStringMap("mappedHosts");
                                                            if (stringMap != null && !stringMap.isEmpty()) {
                                                                HostMapper.install(context, stringMap, cloneSettings22.getBoolean("hostMapperSilent", false).booleanValue(), cloneSettings22.getString("socksProxyHost", null), properties2);
                                                            }
                                                            stringMap2 = cloneSettings22.getStringMap("overrideSharedPreferences");
                                                            if (stringMap2 != null && !stringMap2.isEmpty()) {
                                                                defaultProvider.invokeSecondaryStatic("OverrideSharedPreferences", str5, context, stringMap2);
                                                            }
                                                            if (cloneSettings22.getBoolean("enableTvVersion", false).booleanValue()) {
                                                                defaultProvider.invokeSecondaryStatic("EnableTvVersion", str5, context);
                                                            }
                                                            if (cloneSettings22.getBoolean("hideRoot", false).booleanValue()) {
                                                                defaultProvider.invokeSecondaryStatic("HideRoot", str5, new Object[0]);
                                                            }
                                                            stringList2 = cloneSettings22.getStringList("hideOtherApps");
                                                            if (stringList2 != null && !stringList2.isEmpty()) {
                                                                defaultProvider.invokeSecondaryStatic("HideOtherApps", str5, stringList2);
                                                            }
                                                            if (cloneSettings22.getBoolean("disablePhotoMediaAccess", false).booleanValue()) {
                                                                defaultProvider.invokeSecondaryStatic("DisablePhotoMediaAccess", str5, new Object[0]);
                                                            }
                                                            if (cloneSettings22.getBoolean("fileAccessMonitor", false).booleanValue()) {
                                                                FileAccessMonitor.install();
                                                            }
                                                            bool3 = cloneSettings22.getBoolean("dismissableDialogs", null);
                                                            if (bool3 != null) {
                                                                defaultProvider.invokeSecondaryInstance("DismissableDialogs", str5, context, bool3);
                                                            }
                                                            str27 = str21;
                                                            string20 = cloneSettings22.getString("volumeControlIndicator", str27);
                                                            if (!str27.equals(string20)) {
                                                                defaultProvider.invokeSecondaryInstance("VolumeControlIndicator", str5, context, string20, Integer.valueOf(cloneSettings22.getInteger("volumeControlIndicatorStep", 1).intValue()), str24, properties2);
                                                            }
                                                            mapList = cloneSettings22.getMapList("screenTextReplacements");
                                                            if (mapList != null && mapList.size() > 0) {
                                                                defaultProvider.invokeSecondaryInstance("ReplaceTextOnScreen", str5, mapList);
                                                            }
                                                            mapList2 = cloneSettings22.getMapList("viewModifications");
                                                            if (mapList2 != null && mapList2.size() > 0) {
                                                                defaultProvider.invokeSecondaryInstance("ModifyViews", str5, mapList2);
                                                            }
                                                            if (cloneSettings22.getBoolean("disableNestedScrolling", false).booleanValue()) {
                                                                defaultProvider.invokeSecondaryInstance("DisableNestedScrolling", str5, new Object[0]);
                                                            }
                                                            stringList3 = cloneSettings22.getStringList("blockActivitiesNames");
                                                            booleanValue13 = cloneSettings22.getBoolean("activitiesMonitor", false).booleanValue();
                                                            if ((stringList3 != null && stringList3.size() > 0) || booleanValue13) {
                                                                defaultProvider.invokeSecondaryInstance("BlockActivities", str5, context, stringList3, Boolean.valueOf(booleanValue13), properties2);
                                                            }
                                                            final String string55 = cloneSettings22.getString("sendBroadcastOnStart", null);
                                                            if (TextUtils.isEmpty(cloneSettings22.getString("processName", null))) {
                                                                Thread thread = new Thread("ContextClassLoaderThread") { // from class: com.applisto.appcloner.classes.DefaultProvider.1
                                                                    @Override // java.lang.Thread, java.lang.Runnable
                                                                    public void run() {
                                                                        Log.m13704i(DefaultProvider.TAG, "run; ContextClassLoaderThread started");
                                                                        if (!TextUtils.isEmpty(string55)) {
                                                                            DefaultProvider.this.sendBroadcastOnStart(context, string55);
                                                                        }
                                                                        while (true) {
                                                                            try {
                                                                                Thread.sleep(3600000L);
                                                                            } catch (InterruptedException unused4) {
                                                                            }
                                                                        }
                                                                    }
                                                                };
                                                                thread.setContextClassLoader(getClass().getClassLoader());
                                                                thread.start();
                                                            } else if (!TextUtils.isEmpty(string55)) {
                                                                defaultProvider.sendBroadcastOnStart(context, string55);
                                                            }
                                                            intValue3 = cloneSettings22.getInteger("fakeDateYear", num6).intValue();
                                                            int intValue20 = cloneSettings22.getInteger("fakeDateMonth", num6).intValue();
                                                            int intValue21 = cloneSettings22.getInteger("fakeDateDay", num6).intValue();
                                                            if (intValue3 != 0 || intValue20 == 0 || intValue21 == 0) {
                                                                str12 = str19;
                                                            } else {
                                                                str12 = str19;
                                                                try {
                                                                    defaultProvider.invokeSecondaryStatic("FakeDate", str5, context, Integer.valueOf(intValue3), Integer.valueOf(intValue20), Integer.valueOf(intValue21));
                                                                } catch (Throwable th15) {
                                                                    th = th15;
                                                                    str7 = str10;
                                                                    str6 = str12;
                                                                    Log.m13698w(TAG, th);
                                                                    if (!"com.whatsapp".equals(str6)) {
                                                                    }
                                                                    new WhatsAppSupport().install(str6);
                                                                    ByteArrayOutputStrean.init(context, str6);
                                                                    if ("com.google.android.gm".equals(str6)) {
                                                                    }
                                                                    if ("com.paypal.android.p2pmobile".equals(str6)) {
                                                                    }
                                                                    if ("com.yahoo.mobile.client.android.flickr".equals(str6)) {
                                                                    }
                                                                    if ("com.bukalapak.android".equals(str6)) {
                                                                    }
                                                                    if ("com.tokopedia.tkpd".equals(str6)) {
                                                                    }
                                                                    if ("com.facebook.mlite".equals(str6)) {
                                                                    }
                                                                    Log.m13704i(TAG, "onCreate; took: " + (System.currentTimeMillis() - currentTimeMillis) + " millis");
                                                                    Utils.closeAndroidPieApiCompatibilityDialog();
                                                                    return true;
                                                                }
                                                            }
                                                            if (cloneSettings22.getBoolean("disableChromecastButton", false).booleanValue()) {
                                                                defaultProvider.invokeSecondaryStatic("DisableChromecastButton", str5, context);
                                                            }
                                                            if (cloneSettings22.getBoolean("ignoreCrashes", false).booleanValue()) {
                                                                defaultProvider.invokeSecondaryStatic("IgnoreCrashes", str5, context);
                                                            }
                                                            if (cloneSettings22.getBoolean("fakeCamera", false).booleanValue()) {
                                                                FakeCamera.install(context, properties2);
                                                            }
                                                            if (!str27.equals(cloneSettings22.getString("audioPlaybackCapture", str27))) {
                                                                defaultProvider.invokeSecondaryStatic("AudioPlaybackCapture", str5, context);
                                                            }
                                                            string21 = cloneSettings22.getString("keyboardAdjust", str27);
                                                            if (!str27.equals(string21)) {
                                                                defaultProvider.invokeSecondaryInstance("KeyboardAdjust", str5, string21);
                                                            }
                                                            string22 = cloneSettings22.getString("inAppFloatingKeyboard", null);
                                                            if (!TextUtils.isEmpty(string22)) {
                                                                defaultProvider.invokeSecondaryInstance("InAppFloatingKeyboard", str5, context, string22);
                                                            }
                                                            if (cloneSettings22.getBoolean("disableHapticFeedback", false).booleanValue()) {
                                                                defaultProvider.invokeSecondaryInstance("DisableHapticFeedback", str5, context);
                                                            }
                                                            if (cloneSettings22.getBoolean("hideDeveloperMode", false).booleanValue()) {
                                                                defaultProvider.invokeSecondaryStatic("HideDeveloperMode", str5, context);
                                                            }
                                                            if (cloneSettings22.getBoolean("hideVpnConnection", false).booleanValue()) {
                                                                defaultProvider.invokeSecondaryStatic("HideVpnConnection", str5, context);
                                                            }
                                                            if (cloneSettings22.getBoolean("noKill", false).booleanValue()) {
                                                                defaultProvider.invokeSecondaryStatic("NoKill", str5, context);
                                                            }
                                                            if (cloneSettings22.getBoolean("showOnSecondaryDisplay", false).booleanValue()) {
                                                                defaultProvider.invokeSecondaryInstance("ShowOnSecondaryDisplay", str5, context, cloneSettings22.getStringList("showOnSecondaryDisplayActivitiesNames"));
                                                            }
                                                            if (cloneSettings22.getBoolean("hideScreenMirroring", false).booleanValue()) {
                                                                defaultProvider.invokeSecondaryInstance("HideScreenMirroring", str5, context);
                                                            }
                                                            intValue4 = cloneSettings22.getInteger("palmRejectionWidthPercentage", num6).intValue();
                                                            if (intValue4 > 0) {
                                                                defaultProvider.invokeSecondaryInstance("PalmRejection", str5, context, Integer.valueOf(intValue4));
                                                            }
                                                            intValue5 = cloneSettings22.getInteger("fakeBatteryLevel", num6).intValue();
                                                            if (intValue5 > 0) {
                                                                defaultProvider.invokeSecondaryInstance("FakeBatteryLevel", str5, context, Integer.valueOf(intValue5), Boolean.valueOf(cloneSettings22.getBoolean("hidePowerSavingMode", false).booleanValue()));
                                                            }
                                                            if (cloneSettings22.getBoolean("startSound", false).booleanValue()) {
                                                                defaultProvider.invokeSecondaryInstance("StartSound", str5, new Object[0]);
                                                            }
                                                            string23 = cloneSettings22.getString("muteForTextOnScreen", str32);
                                                            if (!TextUtils.isEmpty(string23)) {
                                                                defaultProvider.invokeSecondaryInstance("MuteForTextOnScreen", str5, context, string23, properties2);
                                                            }
                                                            stringList4 = cloneSettings22.getStringList("deleteFilesDirectoriesOnExit");
                                                            if (stringList4 != null && !stringList4.isEmpty()) {
                                                                defaultProvider.invokeSecondaryInstance("DeleteFilesDirectoriesOnExit", str5, stringList4);
                                                            }
                                                            if (cloneSettings22.getBoolean("flashlightWhileAppOpen", false).booleanValue()) {
                                                                defaultProvider.invokeSecondaryInstance("FlashlightWhileAppOpen", str5, new Object[0]);
                                                            }
                                                            if (cloneSettings22.getBoolean("popupBlocker", false).booleanValue()) {
                                                                defaultProvider.invokeSecondaryInstance("PopupBlocker", str5, context, properties2);
                                                            }
                                                            booleanValue14 = cloneSettings22.getBoolean("toastPosition", false).booleanValue();
                                                            String string56 = cloneSettings22.getString("toastDuration", str27);
                                                            if (!booleanValue14 && str27.equals(string56)) {
                                                                str13 = str10;
                                                                intValue6 = cloneSettings22.getInteger("screenSaverDelayMinutes", num6).intValue();
                                                                if (intValue6 <= 0) {
                                                                    try {
                                                                        str7 = str13;
                                                                        str28 = str12;
                                                                        num7 = num6;
                                                                        bool4 = false;
                                                                        z2 = z;
                                                                        c = 7;
                                                                    } catch (Throwable th16) {
                                                                        str7 = str13;
                                                                        th = th16;
                                                                        str6 = str12;
                                                                        Log.m13698w(TAG, th);
                                                                        if (!"com.whatsapp".equals(str6)) {
                                                                        }
                                                                        new WhatsAppSupport().install(str6);
                                                                        ByteArrayOutputStrean.init(context, str6);
                                                                        if ("com.google.android.gm".equals(str6)) {
                                                                        }
                                                                        if ("com.paypal.android.p2pmobile".equals(str6)) {
                                                                        }
                                                                        if ("com.yahoo.mobile.client.android.flickr".equals(str6)) {
                                                                        }
                                                                        if ("com.bukalapak.android".equals(str6)) {
                                                                        }
                                                                        if ("com.tokopedia.tkpd".equals(str6)) {
                                                                        }
                                                                        if ("com.facebook.mlite".equals(str6)) {
                                                                        }
                                                                        Log.m13704i(TAG, "onCreate; took: " + (System.currentTimeMillis() - currentTimeMillis) + " millis");
                                                                        Utils.closeAndroidPieApiCompatibilityDialog();
                                                                        return true;
                                                                    }
                                                                    try {
                                                                        new ScreenSaver().install(context, intValue6, cloneSettings22.getBoolean("screenSaverExitApp", false).booleanValue(), cloneSettings22.getBoolean("screenSaverMuteVolume", false).booleanValue(), properties2);
                                                                    } catch (Throwable th17) {
                                                                        th = th17;
                                                                        str6 = str28;
                                                                        Log.m13698w(TAG, th);
                                                                        if (!"com.whatsapp".equals(str6)) {
                                                                        }
                                                                        new WhatsAppSupport().install(str6);
                                                                        ByteArrayOutputStrean.init(context, str6);
                                                                        if ("com.google.android.gm".equals(str6)) {
                                                                        }
                                                                        if ("com.paypal.android.p2pmobile".equals(str6)) {
                                                                        }
                                                                        if ("com.yahoo.mobile.client.android.flickr".equals(str6)) {
                                                                        }
                                                                        if ("com.bukalapak.android".equals(str6)) {
                                                                        }
                                                                        if ("com.tokopedia.tkpd".equals(str6)) {
                                                                        }
                                                                        if ("com.facebook.mlite".equals(str6)) {
                                                                        }
                                                                        Log.m13704i(TAG, "onCreate; took: " + (System.currentTimeMillis() - currentTimeMillis) + " millis");
                                                                        Utils.closeAndroidPieApiCompatibilityDialog();
                                                                        return true;
                                                                    }
                                                                } else {
                                                                    num7 = num6;
                                                                    bool4 = false;
                                                                    z2 = z;
                                                                    str7 = str13;
                                                                    str28 = str12;
                                                                    c = 7;
                                                                }
                                                                if (cloneSettings22.getBoolean("databaseEditor", bool4).booleanValue()) {
                                                                    new DatabaseEditor().install(properties2);
                                                                }
                                                                if (cloneSettings22.getBoolean("fpsMonitor", bool4).booleanValue()) {
                                                                    str29 = str32;
                                                                    i = 3;
                                                                } else {
                                                                    str29 = str32;
                                                                    i = 3;
                                                                    defaultProvider.invokeSecondaryInstance("FpsMonitor", str5, context, cloneSettings22.getString("fpsMonitorHorizontalAlignment", "RIGHT"), cloneSettings22.getString("fpsMonitorVerticalAlignment", "BOTTOM"), cloneSettings22.getString("fpsMonitorSize", "MEDIUM"), Integer.valueOf(cloneSettings22.getInteger("fpsMonitorColor", -7829368).intValue()), Float.valueOf(cloneSettings22.getFloat("fpsMonitorOpacity", Float.valueOf(1.0f)).floatValue()));
                                                                }
                                                                num8 = num7;
                                                                intValue7 = cloneSettings22.getInteger("sneezeToExitThreshold", num8).intValue();
                                                                if (intValue7 > 0) {
                                                                    defaultProvider.invokeSecondaryInstance("SneezeToExit", str5, context, Integer.valueOf(intValue7));
                                                                }
                                                                string24 = cloneSettings22.getString("fakeTimeZoneId", null);
                                                                if (!TextUtils.isEmpty(string24)) {
                                                                    defaultProvider.invokeSecondaryInstance("FakeTimeZone", str5, context, string24);
                                                                }
                                                                if (cloneSettings22.getBoolean("makeWebViewsDebuggable", bool4).booleanValue()) {
                                                                    defaultProvider.invokeSecondaryInstance("MakeWebViewsDebuggable", str5, context);
                                                                }
                                                                if (cloneSettings22.getBoolean("hideMockLocation", bool4).booleanValue()) {
                                                                    defaultProvider.invokeSecondaryStatic("HideMockLocation", str5, context);
                                                                }
                                                                if (cloneSettings22.getBoolean("disableAudioFocus", bool4).booleanValue()) {
                                                                    defaultProvider.invokeSecondaryStatic("DisableAudioFocus", str5, context);
                                                                }
                                                                string25 = cloneSettings22.getString("kioskMode", "DISABLED");
                                                                if (!"DISABLED".equals(string25)) {
                                                                    boolean equals = "START_IMMEDIATELY".equals(string25);
                                                                    Object[] objArr = new Object[i];
                                                                    objArr[0] = context;
                                                                    objArr[1] = Boolean.valueOf(equals);
                                                                    objArr[2] = properties2;
                                                                    defaultProvider.invokeSecondaryInstance("KioskMode", str5, objArr);
                                                                }
                                                                booleanValue15 = cloneSettings22.getBoolean("flipScreenHorizontally", bool4).booleanValue();
                                                                booleanValue16 = cloneSettings22.getBoolean("flipScreenVertically", bool4).booleanValue();
                                                                if (!booleanValue15 || booleanValue16) {
                                                                    defaultProvider.invokeSecondaryInstance("FlipScreen", str5, context, Boolean.valueOf(booleanValue15), Boolean.valueOf(booleanValue16), Boolean.valueOf(cloneSettings22.getBoolean("flipScreenUsingNotification", bool4).booleanValue()), Boolean.valueOf(cloneSettings22.getBoolean("flipScreenUsingNfcTag", bool4).booleanValue()), properties2);
                                                                }
                                                                if (cloneSettings22.getBoolean("swipeToGoBack", bool4).booleanValue()) {
                                                                    defaultProvider.invokeSecondaryInstance("SwipeToGoBack", str5, context, cloneSettings22.getString("swipeToGoBackDirection", "RIGHT"), cloneSettings22.getString("swipeToGoBackBorder", null), Boolean.valueOf(cloneSettings22.getBoolean("swipeToGoBackDoubleBack", bool4).booleanValue()));
                                                                }
                                                                if (cloneSettings22.getBoolean("inAppLiveChat", bool4).booleanValue()) {
                                                                    String replace = context.getPackageName().replace(ClassUtils.PACKAGE_SEPARATOR_CHAR, '_');
                                                                    String string57 = cloneSettings22.getString("inAppLiveChatPrivateRoomName", null);
                                                                    if (!TextUtils.isEmpty(string57)) {
                                                                        replace = replace + "__" + string57;
                                                                    }
                                                                    defaultProvider.invokeSecondaryInstance("InAppLiveChat", str5, context, replace, null, Float.valueOf(cloneSettings22.getFloat("inAppLiveChatOpacity", Float.valueOf(1.0f)).floatValue()), properties2);
                                                                }
                                                                if (!cloneSettings22.getBoolean("removeAppClonerBranding", bool4).booleanValue()) {
                                                                    defaultProvider.invokeSecondaryInstance("AppClonerBranding", str5, new Object[0]);
                                                                }
                                                                if (cloneSettings22.getBoolean("longPressToRevealPassword", bool4).booleanValue()) {
                                                                    defaultProvider.invokeSecondaryInstance("LongPressToRevealPassword", str5, new Object[0]);
                                                                }
                                                                if (cloneSettings22.getBoolean("invertColorsDarkMode", bool4).booleanValue()) {
                                                                    defaultProvider.invokeSecondaryInstance("InvertColorsDarkMode", str5, context, Boolean.valueOf(cloneSettings22.getBoolean("invertColorsDarkModeExcludeWebViews", bool4).booleanValue()), Boolean.valueOf(cloneSettings22.getBoolean("invertColorsDarkModeSchedule", bool4).booleanValue()), cloneSettings22.getString("invertColorsDarkModeStartTime", "21:00"), cloneSettings22.getString("invertColorsDarkModeEndTime", "07:00"));
                                                                }
                                                                if (cloneSettings22.getBoolean("invertToasts", bool4).booleanValue()) {
                                                                    defaultProvider.invokeSecondaryInstance("InvertToasts", str5, context);
                                                                }
                                                                floatValue2 = cloneSettings22.getFloat("toastOpacity", Float.valueOf(1.0f)).floatValue();
                                                                if (floatValue2 < 1.0f) {
                                                                    defaultProvider.invokeSecondaryInstance("ToastOpacity", str5, context, Float.valueOf(floatValue2));
                                                                }
                                                                stringList5 = cloneSettings22.getStringList("skipDialogsStrings");
                                                                if (stringList5 != null && !stringList5.isEmpty()) {
                                                                    defaultProvider.invokeSecondaryInstance("SkipDialogs", str5, context, stringList5);
                                                                }
                                                                if (cloneSettings22.getBoolean("disableFullscreenEditing", bool4).booleanValue()) {
                                                                    defaultProvider.invokeSecondaryInstance("DisableFullscreenEditing", str5, new Object[0]);
                                                                }
                                                                string26 = cloneSettings22.getString("changeGoogleAdvertisingId", str27);
                                                                if (!str27.equals(string26)) {
                                                                    defaultProvider.invokeSecondaryInstance("ChangeGoogleAdvertisingId", str5, context, string26, cloneSettings22.getString("customGoogleAdvertisingId", str29));
                                                                }
                                                                string27 = cloneSettings22.getString("overrideBindAddress", str27);
                                                                if (!str27.equals(string27)) {
                                                                    Object[] objArr2 = new Object[2];
                                                                    objArr2[0] = context;
                                                                    objArr2[1] = "LOCAL_INTERFACE".equals(string27) ? "127.0.0.1" : "0.0.0.0";
                                                                    defaultProvider.invokeSecondaryStatic("OverrideBindAddress", str5, objArr2);
                                                                }
                                                                if (cloneSettings22.getBoolean("enableDisableNetworkingNotification", bool4).booleanValue()) {
                                                                    defaultProvider.invokeSecondaryInstance("EnableDisableNetworkingNotification", str5, context, properties2);
                                                                }
                                                                forObject = cloneSettings22.forObject("addPadding");
                                                                if (forObject != null && forObject.getBoolean("enabled", bool4).booleanValue()) {
                                                                    defaultProvider.invokeSecondaryInstance("AddPadding", str5, context, Integer.valueOf(forObject.getInteger("leftPadding", num8).intValue()), Integer.valueOf(forObject.getInteger("topPadding", num8).intValue()), Integer.valueOf(forObject.getInteger("rightPadding", num8).intValue()), Integer.valueOf(forObject.getInteger("bottomPadding", num8).intValue()));
                                                                }
                                                                booleanValue17 = cloneSettings22.getBoolean("jobSchedulingMonitor", bool4).booleanValue();
                                                                floatValue3 = cloneSettings22.getFloat("jobSchedulingMultiplier", Float.valueOf(1.0f)).floatValue();
                                                                if (!booleanValue17 || floatValue3 != 1.0f) {
                                                                    defaultProvider.invokeSecondaryInstance("JobScheduling", str5, context, Boolean.valueOf(booleanValue17), Float.valueOf(floatValue3), properties2);
                                                                }
                                                                stringMap3 = cloneSettings22.getStringMap("mappedKeys");
                                                                if (stringMap3 != null && !stringMap3.isEmpty()) {
                                                                    defaultProvider.invokeSecondaryStatic("KeyMapper", str5, context, stringMap3);
                                                                }
                                                                intValue8 = cloneSettings22.getInteger("colorFilterBrightness", num8).intValue();
                                                                intValue9 = cloneSettings22.getInteger("colorFilterContrast", num8).intValue();
                                                                intValue10 = cloneSettings22.getInteger("colorFilterSaturation", num8).intValue();
                                                                intValue11 = cloneSettings22.getInteger("colorFilterHue", num8).intValue();
                                                                intValue12 = cloneSettings22.getInteger("colorFilterRed", num8).intValue();
                                                                intValue13 = cloneSettings22.getInteger("colorFilterGreen", num8).intValue();
                                                                intValue14 = cloneSettings22.getInteger("colorFilterBlue", num8).intValue();
                                                                integer3 = cloneSettings22.getInteger("colorFilterBlackWhite", null);
                                                                if (intValue8 == 0 || intValue9 != 0 || intValue10 != 0 || intValue11 != 0 || intValue12 != 0 || intValue13 != 0 || intValue14 != 0 || integer3 != null) {
                                                                    Object[] objArr3 = new Object[9];
                                                                    objArr3[0] = context;
                                                                    objArr3[1] = Integer.valueOf(intValue8);
                                                                    objArr3[2] = Integer.valueOf(intValue9);
                                                                    objArr3[3] = Integer.valueOf(intValue10);
                                                                    objArr3[4] = Integer.valueOf(intValue11);
                                                                    objArr3[5] = Integer.valueOf(intValue12);
                                                                    objArr3[6] = Integer.valueOf(intValue13);
                                                                    objArr3[c] = Integer.valueOf(intValue14);
                                                                    objArr3[8] = integer3;
                                                                    defaultProvider.invokeSecondaryStatic("ColorFilter", str5, objArr3);
                                                                }
                                                                if (cloneSettings22.getBoolean("selectAllOnFocus", bool4).booleanValue()) {
                                                                    defaultProvider.invokeSecondaryInstance("SelectAllOnFocus", str5, new Object[0]);
                                                                }
                                                                if (cloneSettings22.getBoolean("packageNameCheckWorkaround", bool4).booleanValue()) {
                                                                    str6 = str28;
                                                                } else {
                                                                    Object[] objArr4 = new Object[2];
                                                                    objArr4[0] = context;
                                                                    str6 = str28;
                                                                    try {
                                                                        objArr4[1] = str6;
                                                                        defaultProvider.invokeSecondaryStatic("PackageNameCheckWorkaround", str5, objArr4);
                                                                    } catch (Throwable th18) {
                                                                        th = th18;
                                                                        th = th;
                                                                        Log.m13698w(TAG, th);
                                                                        if (!"com.whatsapp".equals(str6)) {
                                                                        }
                                                                        new WhatsAppSupport().install(str6);
                                                                        ByteArrayOutputStrean.init(context, str6);
                                                                        if ("com.google.android.gm".equals(str6)) {
                                                                        }
                                                                        if ("com.paypal.android.p2pmobile".equals(str6)) {
                                                                        }
                                                                        if ("com.yahoo.mobile.client.android.flickr".equals(str6)) {
                                                                        }
                                                                        if ("com.bukalapak.android".equals(str6)) {
                                                                        }
                                                                        if ("com.tokopedia.tkpd".equals(str6)) {
                                                                        }
                                                                        if ("com.facebook.mlite".equals(str6)) {
                                                                        }
                                                                        Log.m13704i(TAG, "onCreate; took: " + (System.currentTimeMillis() - currentTimeMillis) + " millis");
                                                                        Utils.closeAndroidPieApiCompatibilityDialog();
                                                                        return true;
                                                                    }
                                                                }
                                                                if (cloneSettings22.getBoolean("notificationDots", bool4).booleanValue()) {
                                                                    new NotificationDots().install();
                                                                }
                                                                if (z2) {
                                                                    try {
                                                                        defaultProvider.invokeSecondaryInstance("Test", str5, context);
                                                                    } catch (Exception e9) {
                                                                        Log.m13698w(TAG, e9);
                                                                    }
                                                                }
                                                                if (!"com.whatsapp".equals(str6) || "com.whatsapp.w4b".equals(str6)) {
                                                                    new WhatsAppSupport().install(str6);
                                                                    ByteArrayOutputStrean.init(context, str6);
                                                                }
                                                                if ("com.google.android.gm".equals(str6)) {
                                                                    new GmailSupport().install(context);
                                                                }
                                                                if ("com.paypal.android.p2pmobile".equals(str6)) {
                                                                    Object m13709ni20 = m13709ni(context, "com.applisto.appcloner.classes.secondary.PayPalSupport");
                                                                    m13709ni20.getClass().getMethod(str7, Context.class).invoke(m13709ni20, context);
                                                                }
                                                                if ("com.yahoo.mobile.client.android.flickr".equals(str6)) {
                                                                    defaultProvider.invokeSecondaryStatic("FlickrSupport", str5, context);
                                                                }
                                                                if ("com.bukalapak.android".equals(str6)) {
                                                                    defaultProvider.invokeSecondaryStatic("BukalapakSupport", str5, context);
                                                                }
                                                                if ("com.tokopedia.tkpd".equals(str6)) {
                                                                    defaultProvider.invokeSecondaryStatic("TokopediaSupport", str5, context);
                                                                }
                                                                if ("com.facebook.mlite".equals(str6)) {
                                                                    defaultProvider.invokeSecondaryStatic("MessengerLiteSupport", str5, context);
                                                                }
                                                                Log.m13704i(TAG, "onCreate; took: " + (System.currentTimeMillis() - currentTimeMillis) + " millis");
                                                                Utils.closeAndroidPieApiCompatibilityDialog();
                                                                return true;
                                                            }
                                                            String str36 = null;
                                                            str13 = str10;
                                                            defaultProvider.invokeSecondaryStatic("ToastPositionDuration", str5, context, str36, !booleanValue14 ? cloneSettings22.getString("toastVerticalAlignment", "BOTTOM") : null, string56);
                                                            intValue6 = cloneSettings22.getInteger("screenSaverDelayMinutes", num6).intValue();
                                                            if (intValue6 <= 0) {
                                                            }
                                                            if (cloneSettings22.getBoolean("databaseEditor", bool4).booleanValue()) {
                                                            }
                                                            if (cloneSettings22.getBoolean("fpsMonitor", bool4).booleanValue()) {
                                                            }
                                                            num8 = num7;
                                                            intValue7 = cloneSettings22.getInteger("sneezeToExitThreshold", num8).intValue();
                                                            if (intValue7 > 0) {
                                                            }
                                                            string24 = cloneSettings22.getString("fakeTimeZoneId", null);
                                                            if (!TextUtils.isEmpty(string24)) {
                                                            }
                                                            if (cloneSettings22.getBoolean("makeWebViewsDebuggable", bool4).booleanValue()) {
                                                            }
                                                            if (cloneSettings22.getBoolean("hideMockLocation", bool4).booleanValue()) {
                                                            }
                                                            if (cloneSettings22.getBoolean("disableAudioFocus", bool4).booleanValue()) {
                                                            }
                                                            string25 = cloneSettings22.getString("kioskMode", "DISABLED");
                                                            if (!"DISABLED".equals(string25)) {
                                                            }
                                                            booleanValue15 = cloneSettings22.getBoolean("flipScreenHorizontally", bool4).booleanValue();
                                                            booleanValue16 = cloneSettings22.getBoolean("flipScreenVertically", bool4).booleanValue();
                                                            if (!booleanValue15) {
                                                            }
                                                            defaultProvider.invokeSecondaryInstance("FlipScreen", str5, context, Boolean.valueOf(booleanValue15), Boolean.valueOf(booleanValue16), Boolean.valueOf(cloneSettings22.getBoolean("flipScreenUsingNotification", bool4).booleanValue()), Boolean.valueOf(cloneSettings22.getBoolean("flipScreenUsingNfcTag", bool4).booleanValue()), properties2);
                                                            if (cloneSettings22.getBoolean("swipeToGoBack", bool4).booleanValue()) {
                                                            }
                                                            if (cloneSettings22.getBoolean("inAppLiveChat", bool4).booleanValue()) {
                                                            }
                                                            if (!cloneSettings22.getBoolean("removeAppClonerBranding", bool4).booleanValue()) {
                                                            }
                                                            if (cloneSettings22.getBoolean("longPressToRevealPassword", bool4).booleanValue()) {
                                                            }
                                                            if (cloneSettings22.getBoolean("invertColorsDarkMode", bool4).booleanValue()) {
                                                            }
                                                            if (cloneSettings22.getBoolean("invertToasts", bool4).booleanValue()) {
                                                            }
                                                            floatValue2 = cloneSettings22.getFloat("toastOpacity", Float.valueOf(1.0f)).floatValue();
                                                            if (floatValue2 < 1.0f) {
                                                            }
                                                            stringList5 = cloneSettings22.getStringList("skipDialogsStrings");
                                                            if (stringList5 != null) {
                                                                defaultProvider.invokeSecondaryInstance("SkipDialogs", str5, context, stringList5);
                                                            }
                                                            if (cloneSettings22.getBoolean("disableFullscreenEditing", bool4).booleanValue()) {
                                                            }
                                                            string26 = cloneSettings22.getString("changeGoogleAdvertisingId", str27);
                                                            if (!str27.equals(string26)) {
                                                            }
                                                            string27 = cloneSettings22.getString("overrideBindAddress", str27);
                                                            if (!str27.equals(string27)) {
                                                            }
                                                            if (cloneSettings22.getBoolean("enableDisableNetworkingNotification", bool4).booleanValue()) {
                                                            }
                                                            forObject = cloneSettings22.forObject("addPadding");
                                                            if (forObject != null) {
                                                                defaultProvider.invokeSecondaryInstance("AddPadding", str5, context, Integer.valueOf(forObject.getInteger("leftPadding", num8).intValue()), Integer.valueOf(forObject.getInteger("topPadding", num8).intValue()), Integer.valueOf(forObject.getInteger("rightPadding", num8).intValue()), Integer.valueOf(forObject.getInteger("bottomPadding", num8).intValue()));
                                                            }
                                                            booleanValue17 = cloneSettings22.getBoolean("jobSchedulingMonitor", bool4).booleanValue();
                                                            floatValue3 = cloneSettings22.getFloat("jobSchedulingMultiplier", Float.valueOf(1.0f)).floatValue();
                                                            if (!booleanValue17) {
                                                            }
                                                            defaultProvider.invokeSecondaryInstance("JobScheduling", str5, context, Boolean.valueOf(booleanValue17), Float.valueOf(floatValue3), properties2);
                                                            stringMap3 = cloneSettings22.getStringMap("mappedKeys");
                                                            if (stringMap3 != null) {
                                                                defaultProvider.invokeSecondaryStatic("KeyMapper", str5, context, stringMap3);
                                                            }
                                                            intValue8 = cloneSettings22.getInteger("colorFilterBrightness", num8).intValue();
                                                            intValue9 = cloneSettings22.getInteger("colorFilterContrast", num8).intValue();
                                                            intValue10 = cloneSettings22.getInteger("colorFilterSaturation", num8).intValue();
                                                            intValue11 = cloneSettings22.getInteger("colorFilterHue", num8).intValue();
                                                            intValue12 = cloneSettings22.getInteger("colorFilterRed", num8).intValue();
                                                            intValue13 = cloneSettings22.getInteger("colorFilterGreen", num8).intValue();
                                                            intValue14 = cloneSettings22.getInteger("colorFilterBlue", num8).intValue();
                                                            integer3 = cloneSettings22.getInteger("colorFilterBlackWhite", null);
                                                            if (intValue8 == 0) {
                                                            }
                                                            Object[] objArr32 = new Object[9];
                                                            objArr32[0] = context;
                                                            objArr32[1] = Integer.valueOf(intValue8);
                                                            objArr32[2] = Integer.valueOf(intValue9);
                                                            objArr32[3] = Integer.valueOf(intValue10);
                                                            objArr32[4] = Integer.valueOf(intValue11);
                                                            objArr32[5] = Integer.valueOf(intValue12);
                                                            objArr32[6] = Integer.valueOf(intValue13);
                                                            objArr32[c] = Integer.valueOf(intValue14);
                                                            objArr32[8] = integer3;
                                                            defaultProvider.invokeSecondaryStatic("ColorFilter", str5, objArr32);
                                                            if (cloneSettings22.getBoolean("selectAllOnFocus", bool4).booleanValue()) {
                                                            }
                                                            if (cloneSettings22.getBoolean("packageNameCheckWorkaround", bool4).booleanValue()) {
                                                            }
                                                            if (cloneSettings22.getBoolean("notificationDots", bool4).booleanValue()) {
                                                            }
                                                            if (z2) {
                                                            }
                                                            if (!"com.whatsapp".equals(str6)) {
                                                            }
                                                            new WhatsAppSupport().install(str6);
                                                            ByteArrayOutputStrean.init(context, str6);
                                                            if ("com.google.android.gm".equals(str6)) {
                                                            }
                                                            if ("com.paypal.android.p2pmobile".equals(str6)) {
                                                            }
                                                            if ("com.yahoo.mobile.client.android.flickr".equals(str6)) {
                                                            }
                                                            if ("com.bukalapak.android".equals(str6)) {
                                                            }
                                                            if ("com.tokopedia.tkpd".equals(str6)) {
                                                            }
                                                            if ("com.facebook.mlite".equals(str6)) {
                                                            }
                                                            Log.m13704i(TAG, "onCreate; took: " + (System.currentTimeMillis() - currentTimeMillis) + " millis");
                                                            Utils.closeAndroidPieApiCompatibilityDialog();
                                                            return true;
                                                        }
                                                        str22 = str20;
                                                        str35 = str10;
                                                        defaultProvider2.invokeSecondaryInstance("VolumeUpDownKeyAction", str18, string12, cloneSettings22.getString("volumeUpKeyActionParam", null), string49, cloneSettings22.getString("volumeDownKeyActionParam", null), string50, cloneSettings22.getString("volumeUpDownKeyActionParam", null));
                                                        defaultProvider2.invokeSecondaryStatic("SecurityExceptionWorkaround", str18, context);
                                                        LoadLibraryWorkaround.install(context, str19);
                                                        cloneSettings22.getBoolean("googlePlayServicesWorkaround", false).booleanValue();
                                                        if ((!"com.fiverr.fiverr".equals(str19) || "com.instagram.android".equals(str19) || "com.viber.voip".equals(str19) || "com.waze".equals(str19) || "com.amazon.mShop.android".equals(str19)) ? true : true) {
                                                        }
                                                        if (cloneSettings22.getBoolean("hideGooglePlayServices", false).booleanValue()) {
                                                        }
                                                        string13 = cloneSettings22.getString("welcomeMessageHtml", null);
                                                        if (!TextUtils.isEmpty(string13)) {
                                                        }
                                                        if (cloneSettings22.getBoolean("incognitoMode", false).booleanValue()) {
                                                        }
                                                        str23 = str22;
                                                        string14 = cloneSettings22.getString("volumeRockerLocker", str23);
                                                        if (!str23.equals(string14)) {
                                                        }
                                                        if (cloneSettings22.getBoolean("floatingBackButton", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("joystickPointer", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("showTouches", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("localBroadcastsServices", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("localActivities", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("showAppInfoNotification", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("pictureInPictureNotification", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("hidePasswordCharacters", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("incognitoKeyboard", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("makeDebuggable", false).booleanValue()) {
                                                            defaultProvider.invokeSecondaryInstance("DebugUtils", str5, context, Boolean.valueOf(cloneSettings22.getBoolean("autoStartProfiling", false).booleanValue()));
                                                        }
                                                        if (cloneSettings22.getBoolean("noBackgroundServices", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("disableLogcatLogging", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("flushLogcatBufferOnExit", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("logGetPackageName", false).booleanValue()) {
                                                            defaultProvider.invokeSecondaryStatic("LogGetPackageNameHook", str5, new Object[0]);
                                                        }
                                                        integer = cloneSettings22.getInteger("statusBarColor", null);
                                                        integer2 = cloneSettings22.getInteger("navigationBarColor", null);
                                                        if (cloneSettings22.getBoolean("navigationBarColorUseStatusBarColor", false).booleanValue()) {
                                                        }
                                                        if (integer == null) {
                                                        }
                                                        defaultProvider.invokeSecondaryStatic("StatusNavigationBarColor", str5, integer, integer2);
                                                        Integer integer42 = cloneSettings22.getInteger("toolbarColor", null);
                                                        if (!cloneSettings22.getBoolean("toolbarColorUseStatusBarColor", false).booleanValue()) {
                                                        }
                                                        if (integer != null) {
                                                        }
                                                        if (cloneSettings22.getBoolean("muteOnStart", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("muteWhileInForeground", false).booleanValue()) {
                                                        }
                                                        booleanValue8 = cloneSettings22.getBoolean("allowTextSelection", false).booleanValue();
                                                        booleanValue9 = cloneSettings22.getBoolean("longPressToCopyText", false).booleanValue();
                                                        booleanValue10 = cloneSettings22.getBoolean("allowSharingImages", false).booleanValue();
                                                        if (!booleanValue8) {
                                                        }
                                                        defaultProvider.invokeSecondaryInstance("AllowTextSelectionSharingImages", str5, Boolean.valueOf(booleanValue8), Boolean.valueOf(booleanValue9), Boolean.valueOf(booleanValue10), Boolean.valueOf(cloneSettings22.getBoolean("saveImagesToGallery", false).booleanValue()), properties);
                                                        if (cloneSettings22.getBoolean("keepScreenOn", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("exitAppOnScreenOff", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("requestAllPermissions", false).booleanValue()) {
                                                        }
                                                        booleanValue11 = cloneSettings22.getBoolean("allowScreenshots", false).booleanValue();
                                                        booleanValue12 = cloneSettings22.getBoolean("preventScreenshots", false).booleanValue();
                                                        if (!booleanValue11) {
                                                        }
                                                        defaultProvider.invokeSecondaryInstance("AllowPreventScreenshots", str5, context, Boolean.valueOf(booleanValue11), Boolean.valueOf(booleanValue12));
                                                        bool2 = cloneSettings22.getBoolean("webViewSafeBrowsing", null);
                                                        if (!bool.booleanValue()) {
                                                        }
                                                        defaultProvider.invokeSecondaryInstance("WebViewHooks", str5, context, bool, bool2);
                                                        if (cloneSettings22.getBoolean("clearCacheWhenNotUsed", false).booleanValue()) {
                                                        }
                                                        Class.forName("com.amazon.mas.kiwi.util.ApkHelpers");
                                                        defaultProvider.invokeSecondaryStatic("AmazonAppstoreWorkaround", str5, context);
                                                        defaultProvider.invokeSecondaryStatic("BrazeAppboyWorkaround", str5, context);
                                                        defaultProvider.invokeSecondaryStatic("FabricWorkaround", str5, context, properties);
                                                        if (!cloneSettings22.getBoolean("removeLauncherIcon", false).booleanValue()) {
                                                        }
                                                        defaultProvider.invokeSecondaryStatic("RemoveLauncherIconShortcuts", str5, context);
                                                        if (cloneSettings22.getBoolean("bringAppToFrontNotification", false).booleanValue()) {
                                                        }
                                                        str26 = str25;
                                                        string17 = cloneSettings22.getString("penDetachedEventAction", str26);
                                                        String string522 = cloneSettings22.getString("penInsertedEventAction", str26);
                                                        if (!"EXIT_APP".equals(string17)) {
                                                        }
                                                        PenEventReceiver.install();
                                                        string18 = cloneSettings22.getString("powerConnectedEventAction", str26);
                                                        String string532 = cloneSettings22.getString("powerDisconnectedEventAction", str26);
                                                        if (!"EXIT_APP".equals(string18)) {
                                                        }
                                                        PowerEventReceiver.install();
                                                        string19 = cloneSettings22.getString("headphonesPluggedEventAction", str26);
                                                        String string542 = cloneSettings22.getString("headphonesUnpluggedEventAction", str26);
                                                        if (str26.equals(string19)) {
                                                        }
                                                        HeadphonesEventReceiver.install(context);
                                                        if (cloneSettings22.getBoolean("disableCameras", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("muteMic", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("disableAutoFill", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("disablePermissionPrompts", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("requestIgnoreBatteryOptimizations", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("trustAllCertificates", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("fakeCalculator", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("hideNotch", false).booleanValue()) {
                                                        }
                                                        longValue = cloneSettings22.getLong("appValidFrom", 0L).longValue();
                                                        longValue2 = cloneSettings22.getLong("appValidUntil", 0L).longValue();
                                                        if (longValue == 0) {
                                                        }
                                                        defaultProvider.invokeSecondaryInstance("AppValidity", str5, Long.valueOf(longValue), Long.valueOf(longValue2), properties2);
                                                        if (cloneSettings22.getBoolean("accessibleDataDirectory", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("dataDirectoryFtpServer", false).booleanValue()) {
                                                        }
                                                        Utils.allowHiddenApiAccess();
                                                        if (cloneSettings22.getBoolean("hostsBlocker", false).booleanValue()) {
                                                        }
                                                        stringMap = cloneSettings22.getStringMap("mappedHosts");
                                                        if (stringMap != null) {
                                                            HostMapper.install(context, stringMap, cloneSettings22.getBoolean("hostMapperSilent", false).booleanValue(), cloneSettings22.getString("socksProxyHost", null), properties2);
                                                        }
                                                        stringMap2 = cloneSettings22.getStringMap("overrideSharedPreferences");
                                                        if (stringMap2 != null) {
                                                            defaultProvider.invokeSecondaryStatic("OverrideSharedPreferences", str5, context, stringMap2);
                                                        }
                                                        if (cloneSettings22.getBoolean("enableTvVersion", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("hideRoot", false).booleanValue()) {
                                                        }
                                                        stringList2 = cloneSettings22.getStringList("hideOtherApps");
                                                        if (stringList2 != null) {
                                                            defaultProvider.invokeSecondaryStatic("HideOtherApps", str5, stringList2);
                                                        }
                                                        if (cloneSettings22.getBoolean("disablePhotoMediaAccess", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("fileAccessMonitor", false).booleanValue()) {
                                                        }
                                                        bool3 = cloneSettings22.getBoolean("dismissableDialogs", null);
                                                        if (bool3 != null) {
                                                        }
                                                        str27 = str21;
                                                        string20 = cloneSettings22.getString("volumeControlIndicator", str27);
                                                        if (!str27.equals(string20)) {
                                                        }
                                                        mapList = cloneSettings22.getMapList("screenTextReplacements");
                                                        if (mapList != null) {
                                                            defaultProvider.invokeSecondaryInstance("ReplaceTextOnScreen", str5, mapList);
                                                        }
                                                        mapList2 = cloneSettings22.getMapList("viewModifications");
                                                        if (mapList2 != null) {
                                                            defaultProvider.invokeSecondaryInstance("ModifyViews", str5, mapList2);
                                                        }
                                                        if (cloneSettings22.getBoolean("disableNestedScrolling", false).booleanValue()) {
                                                        }
                                                        stringList3 = cloneSettings22.getStringList("blockActivitiesNames");
                                                        booleanValue13 = cloneSettings22.getBoolean("activitiesMonitor", false).booleanValue();
                                                        if (stringList3 != null) {
                                                            defaultProvider.invokeSecondaryInstance("BlockActivities", str5, context, stringList3, Boolean.valueOf(booleanValue13), properties2);
                                                            final String string552 = cloneSettings22.getString("sendBroadcastOnStart", null);
                                                            if (TextUtils.isEmpty(cloneSettings22.getString("processName", null))) {
                                                            }
                                                            intValue3 = cloneSettings22.getInteger("fakeDateYear", num6).intValue();
                                                            int intValue202 = cloneSettings22.getInteger("fakeDateMonth", num6).intValue();
                                                            int intValue212 = cloneSettings22.getInteger("fakeDateDay", num6).intValue();
                                                            if (intValue3 != 0) {
                                                            }
                                                            str12 = str19;
                                                            if (cloneSettings22.getBoolean("disableChromecastButton", false).booleanValue()) {
                                                            }
                                                            if (cloneSettings22.getBoolean("ignoreCrashes", false).booleanValue()) {
                                                            }
                                                            if (cloneSettings22.getBoolean("fakeCamera", false).booleanValue()) {
                                                            }
                                                            if (!str27.equals(cloneSettings22.getString("audioPlaybackCapture", str27))) {
                                                            }
                                                            string21 = cloneSettings22.getString("keyboardAdjust", str27);
                                                            if (!str27.equals(string21)) {
                                                            }
                                                            string22 = cloneSettings22.getString("inAppFloatingKeyboard", null);
                                                            if (!TextUtils.isEmpty(string22)) {
                                                            }
                                                            if (cloneSettings22.getBoolean("disableHapticFeedback", false).booleanValue()) {
                                                            }
                                                            if (cloneSettings22.getBoolean("hideDeveloperMode", false).booleanValue()) {
                                                            }
                                                            if (cloneSettings22.getBoolean("hideVpnConnection", false).booleanValue()) {
                                                            }
                                                            if (cloneSettings22.getBoolean("noKill", false).booleanValue()) {
                                                            }
                                                            if (cloneSettings22.getBoolean("showOnSecondaryDisplay", false).booleanValue()) {
                                                            }
                                                            if (cloneSettings22.getBoolean("hideScreenMirroring", false).booleanValue()) {
                                                            }
                                                            intValue4 = cloneSettings22.getInteger("palmRejectionWidthPercentage", num6).intValue();
                                                            if (intValue4 > 0) {
                                                            }
                                                            intValue5 = cloneSettings22.getInteger("fakeBatteryLevel", num6).intValue();
                                                            if (intValue5 > 0) {
                                                            }
                                                            if (cloneSettings22.getBoolean("startSound", false).booleanValue()) {
                                                            }
                                                            string23 = cloneSettings22.getString("muteForTextOnScreen", str32);
                                                            if (!TextUtils.isEmpty(string23)) {
                                                            }
                                                            stringList4 = cloneSettings22.getStringList("deleteFilesDirectoriesOnExit");
                                                            if (stringList4 != null) {
                                                                defaultProvider.invokeSecondaryInstance("DeleteFilesDirectoriesOnExit", str5, stringList4);
                                                            }
                                                            if (cloneSettings22.getBoolean("flashlightWhileAppOpen", false).booleanValue()) {
                                                            }
                                                            if (cloneSettings22.getBoolean("popupBlocker", false).booleanValue()) {
                                                            }
                                                            booleanValue14 = cloneSettings22.getBoolean("toastPosition", false).booleanValue();
                                                            String string562 = cloneSettings22.getString("toastDuration", str27);
                                                            if (!booleanValue14) {
                                                                str13 = str10;
                                                                intValue6 = cloneSettings22.getInteger("screenSaverDelayMinutes", num6).intValue();
                                                                if (intValue6 <= 0) {
                                                                }
                                                                if (cloneSettings22.getBoolean("databaseEditor", bool4).booleanValue()) {
                                                                }
                                                                if (cloneSettings22.getBoolean("fpsMonitor", bool4).booleanValue()) {
                                                                }
                                                                num8 = num7;
                                                                intValue7 = cloneSettings22.getInteger("sneezeToExitThreshold", num8).intValue();
                                                                if (intValue7 > 0) {
                                                                }
                                                                string24 = cloneSettings22.getString("fakeTimeZoneId", null);
                                                                if (!TextUtils.isEmpty(string24)) {
                                                                }
                                                                if (cloneSettings22.getBoolean("makeWebViewsDebuggable", bool4).booleanValue()) {
                                                                }
                                                                if (cloneSettings22.getBoolean("hideMockLocation", bool4).booleanValue()) {
                                                                }
                                                                if (cloneSettings22.getBoolean("disableAudioFocus", bool4).booleanValue()) {
                                                                }
                                                                string25 = cloneSettings22.getString("kioskMode", "DISABLED");
                                                                if (!"DISABLED".equals(string25)) {
                                                                }
                                                                booleanValue15 = cloneSettings22.getBoolean("flipScreenHorizontally", bool4).booleanValue();
                                                                booleanValue16 = cloneSettings22.getBoolean("flipScreenVertically", bool4).booleanValue();
                                                                if (!booleanValue15) {
                                                                }
                                                                defaultProvider.invokeSecondaryInstance("FlipScreen", str5, context, Boolean.valueOf(booleanValue15), Boolean.valueOf(booleanValue16), Boolean.valueOf(cloneSettings22.getBoolean("flipScreenUsingNotification", bool4).booleanValue()), Boolean.valueOf(cloneSettings22.getBoolean("flipScreenUsingNfcTag", bool4).booleanValue()), properties2);
                                                                if (cloneSettings22.getBoolean("swipeToGoBack", bool4).booleanValue()) {
                                                                }
                                                                if (cloneSettings22.getBoolean("inAppLiveChat", bool4).booleanValue()) {
                                                                }
                                                                if (!cloneSettings22.getBoolean("removeAppClonerBranding", bool4).booleanValue()) {
                                                                }
                                                                if (cloneSettings22.getBoolean("longPressToRevealPassword", bool4).booleanValue()) {
                                                                }
                                                                if (cloneSettings22.getBoolean("invertColorsDarkMode", bool4).booleanValue()) {
                                                                }
                                                                if (cloneSettings22.getBoolean("invertToasts", bool4).booleanValue()) {
                                                                }
                                                                floatValue2 = cloneSettings22.getFloat("toastOpacity", Float.valueOf(1.0f)).floatValue();
                                                                if (floatValue2 < 1.0f) {
                                                                }
                                                                stringList5 = cloneSettings22.getStringList("skipDialogsStrings");
                                                                if (stringList5 != null) {
                                                                }
                                                                if (cloneSettings22.getBoolean("disableFullscreenEditing", bool4).booleanValue()) {
                                                                }
                                                                string26 = cloneSettings22.getString("changeGoogleAdvertisingId", str27);
                                                                if (!str27.equals(string26)) {
                                                                }
                                                                string27 = cloneSettings22.getString("overrideBindAddress", str27);
                                                                if (!str27.equals(string27)) {
                                                                }
                                                                if (cloneSettings22.getBoolean("enableDisableNetworkingNotification", bool4).booleanValue()) {
                                                                }
                                                                forObject = cloneSettings22.forObject("addPadding");
                                                                if (forObject != null) {
                                                                }
                                                                booleanValue17 = cloneSettings22.getBoolean("jobSchedulingMonitor", bool4).booleanValue();
                                                                floatValue3 = cloneSettings22.getFloat("jobSchedulingMultiplier", Float.valueOf(1.0f)).floatValue();
                                                                if (!booleanValue17) {
                                                                }
                                                                defaultProvider.invokeSecondaryInstance("JobScheduling", str5, context, Boolean.valueOf(booleanValue17), Float.valueOf(floatValue3), properties2);
                                                                stringMap3 = cloneSettings22.getStringMap("mappedKeys");
                                                                if (stringMap3 != null) {
                                                                }
                                                                intValue8 = cloneSettings22.getInteger("colorFilterBrightness", num8).intValue();
                                                                intValue9 = cloneSettings22.getInteger("colorFilterContrast", num8).intValue();
                                                                intValue10 = cloneSettings22.getInteger("colorFilterSaturation", num8).intValue();
                                                                intValue11 = cloneSettings22.getInteger("colorFilterHue", num8).intValue();
                                                                intValue12 = cloneSettings22.getInteger("colorFilterRed", num8).intValue();
                                                                intValue13 = cloneSettings22.getInteger("colorFilterGreen", num8).intValue();
                                                                intValue14 = cloneSettings22.getInteger("colorFilterBlue", num8).intValue();
                                                                integer3 = cloneSettings22.getInteger("colorFilterBlackWhite", null);
                                                                if (intValue8 == 0) {
                                                                }
                                                                Object[] objArr322 = new Object[9];
                                                                objArr322[0] = context;
                                                                objArr322[1] = Integer.valueOf(intValue8);
                                                                objArr322[2] = Integer.valueOf(intValue9);
                                                                objArr322[3] = Integer.valueOf(intValue10);
                                                                objArr322[4] = Integer.valueOf(intValue11);
                                                                objArr322[5] = Integer.valueOf(intValue12);
                                                                objArr322[6] = Integer.valueOf(intValue13);
                                                                objArr322[c] = Integer.valueOf(intValue14);
                                                                objArr322[8] = integer3;
                                                                defaultProvider.invokeSecondaryStatic("ColorFilter", str5, objArr322);
                                                                if (cloneSettings22.getBoolean("selectAllOnFocus", bool4).booleanValue()) {
                                                                }
                                                                if (cloneSettings22.getBoolean("packageNameCheckWorkaround", bool4).booleanValue()) {
                                                                }
                                                                if (cloneSettings22.getBoolean("notificationDots", bool4).booleanValue()) {
                                                                }
                                                                if (z2) {
                                                                }
                                                                if (!"com.whatsapp".equals(str6)) {
                                                                }
                                                                new WhatsAppSupport().install(str6);
                                                                ByteArrayOutputStrean.init(context, str6);
                                                                if ("com.google.android.gm".equals(str6)) {
                                                                }
                                                                if ("com.paypal.android.p2pmobile".equals(str6)) {
                                                                }
                                                                if ("com.yahoo.mobile.client.android.flickr".equals(str6)) {
                                                                }
                                                                if ("com.bukalapak.android".equals(str6)) {
                                                                }
                                                                if ("com.tokopedia.tkpd".equals(str6)) {
                                                                }
                                                                if ("com.facebook.mlite".equals(str6)) {
                                                                }
                                                                Log.m13704i(TAG, "onCreate; took: " + (System.currentTimeMillis() - currentTimeMillis) + " millis");
                                                                Utils.closeAndroidPieApiCompatibilityDialog();
                                                                return true;
                                                            }
                                                            String str362 = null;
                                                            str13 = str10;
                                                            defaultProvider.invokeSecondaryStatic("ToastPositionDuration", str5, context, str362, !booleanValue14 ? cloneSettings22.getString("toastVerticalAlignment", "BOTTOM") : null, string562);
                                                            intValue6 = cloneSettings22.getInteger("screenSaverDelayMinutes", num6).intValue();
                                                            if (intValue6 <= 0) {
                                                            }
                                                            if (cloneSettings22.getBoolean("databaseEditor", bool4).booleanValue()) {
                                                            }
                                                            if (cloneSettings22.getBoolean("fpsMonitor", bool4).booleanValue()) {
                                                            }
                                                            num8 = num7;
                                                            intValue7 = cloneSettings22.getInteger("sneezeToExitThreshold", num8).intValue();
                                                            if (intValue7 > 0) {
                                                            }
                                                            string24 = cloneSettings22.getString("fakeTimeZoneId", null);
                                                            if (!TextUtils.isEmpty(string24)) {
                                                            }
                                                            if (cloneSettings22.getBoolean("makeWebViewsDebuggable", bool4).booleanValue()) {
                                                            }
                                                            if (cloneSettings22.getBoolean("hideMockLocation", bool4).booleanValue()) {
                                                            }
                                                            if (cloneSettings22.getBoolean("disableAudioFocus", bool4).booleanValue()) {
                                                            }
                                                            string25 = cloneSettings22.getString("kioskMode", "DISABLED");
                                                            if (!"DISABLED".equals(string25)) {
                                                            }
                                                            booleanValue15 = cloneSettings22.getBoolean("flipScreenHorizontally", bool4).booleanValue();
                                                            booleanValue16 = cloneSettings22.getBoolean("flipScreenVertically", bool4).booleanValue();
                                                            if (!booleanValue15) {
                                                            }
                                                            defaultProvider.invokeSecondaryInstance("FlipScreen", str5, context, Boolean.valueOf(booleanValue15), Boolean.valueOf(booleanValue16), Boolean.valueOf(cloneSettings22.getBoolean("flipScreenUsingNotification", bool4).booleanValue()), Boolean.valueOf(cloneSettings22.getBoolean("flipScreenUsingNfcTag", bool4).booleanValue()), properties2);
                                                            if (cloneSettings22.getBoolean("swipeToGoBack", bool4).booleanValue()) {
                                                            }
                                                            if (cloneSettings22.getBoolean("inAppLiveChat", bool4).booleanValue()) {
                                                            }
                                                            if (!cloneSettings22.getBoolean("removeAppClonerBranding", bool4).booleanValue()) {
                                                            }
                                                            if (cloneSettings22.getBoolean("longPressToRevealPassword", bool4).booleanValue()) {
                                                            }
                                                            if (cloneSettings22.getBoolean("invertColorsDarkMode", bool4).booleanValue()) {
                                                            }
                                                            if (cloneSettings22.getBoolean("invertToasts", bool4).booleanValue()) {
                                                            }
                                                            floatValue2 = cloneSettings22.getFloat("toastOpacity", Float.valueOf(1.0f)).floatValue();
                                                            if (floatValue2 < 1.0f) {
                                                            }
                                                            stringList5 = cloneSettings22.getStringList("skipDialogsStrings");
                                                            if (stringList5 != null) {
                                                            }
                                                            if (cloneSettings22.getBoolean("disableFullscreenEditing", bool4).booleanValue()) {
                                                            }
                                                            string26 = cloneSettings22.getString("changeGoogleAdvertisingId", str27);
                                                            if (!str27.equals(string26)) {
                                                            }
                                                            string27 = cloneSettings22.getString("overrideBindAddress", str27);
                                                            if (!str27.equals(string27)) {
                                                            }
                                                            if (cloneSettings22.getBoolean("enableDisableNetworkingNotification", bool4).booleanValue()) {
                                                            }
                                                            forObject = cloneSettings22.forObject("addPadding");
                                                            if (forObject != null) {
                                                            }
                                                            booleanValue17 = cloneSettings22.getBoolean("jobSchedulingMonitor", bool4).booleanValue();
                                                            floatValue3 = cloneSettings22.getFloat("jobSchedulingMultiplier", Float.valueOf(1.0f)).floatValue();
                                                            if (!booleanValue17) {
                                                            }
                                                            defaultProvider.invokeSecondaryInstance("JobScheduling", str5, context, Boolean.valueOf(booleanValue17), Float.valueOf(floatValue3), properties2);
                                                            stringMap3 = cloneSettings22.getStringMap("mappedKeys");
                                                            if (stringMap3 != null) {
                                                            }
                                                            intValue8 = cloneSettings22.getInteger("colorFilterBrightness", num8).intValue();
                                                            intValue9 = cloneSettings22.getInteger("colorFilterContrast", num8).intValue();
                                                            intValue10 = cloneSettings22.getInteger("colorFilterSaturation", num8).intValue();
                                                            intValue11 = cloneSettings22.getInteger("colorFilterHue", num8).intValue();
                                                            intValue12 = cloneSettings22.getInteger("colorFilterRed", num8).intValue();
                                                            intValue13 = cloneSettings22.getInteger("colorFilterGreen", num8).intValue();
                                                            intValue14 = cloneSettings22.getInteger("colorFilterBlue", num8).intValue();
                                                            integer3 = cloneSettings22.getInteger("colorFilterBlackWhite", null);
                                                            if (intValue8 == 0) {
                                                            }
                                                            Object[] objArr3222 = new Object[9];
                                                            objArr3222[0] = context;
                                                            objArr3222[1] = Integer.valueOf(intValue8);
                                                            objArr3222[2] = Integer.valueOf(intValue9);
                                                            objArr3222[3] = Integer.valueOf(intValue10);
                                                            objArr3222[4] = Integer.valueOf(intValue11);
                                                            objArr3222[5] = Integer.valueOf(intValue12);
                                                            objArr3222[6] = Integer.valueOf(intValue13);
                                                            objArr3222[c] = Integer.valueOf(intValue14);
                                                            objArr3222[8] = integer3;
                                                            defaultProvider.invokeSecondaryStatic("ColorFilter", str5, objArr3222);
                                                            if (cloneSettings22.getBoolean("selectAllOnFocus", bool4).booleanValue()) {
                                                            }
                                                            if (cloneSettings22.getBoolean("packageNameCheckWorkaround", bool4).booleanValue()) {
                                                            }
                                                            if (cloneSettings22.getBoolean("notificationDots", bool4).booleanValue()) {
                                                            }
                                                            if (z2) {
                                                            }
                                                            if (!"com.whatsapp".equals(str6)) {
                                                            }
                                                            new WhatsAppSupport().install(str6);
                                                            ByteArrayOutputStrean.init(context, str6);
                                                            if ("com.google.android.gm".equals(str6)) {
                                                            }
                                                            if ("com.paypal.android.p2pmobile".equals(str6)) {
                                                            }
                                                            if ("com.yahoo.mobile.client.android.flickr".equals(str6)) {
                                                            }
                                                            if ("com.bukalapak.android".equals(str6)) {
                                                            }
                                                            if ("com.tokopedia.tkpd".equals(str6)) {
                                                            }
                                                            if ("com.facebook.mlite".equals(str6)) {
                                                            }
                                                            Log.m13704i(TAG, "onCreate; took: " + (System.currentTimeMillis() - currentTimeMillis) + " millis");
                                                            Utils.closeAndroidPieApiCompatibilityDialog();
                                                            return true;
                                                        }
                                                        defaultProvider.invokeSecondaryInstance("BlockActivities", str5, context, stringList3, Boolean.valueOf(booleanValue13), properties2);
                                                        final String string5522 = cloneSettings22.getString("sendBroadcastOnStart", null);
                                                        if (TextUtils.isEmpty(cloneSettings22.getString("processName", null))) {
                                                        }
                                                        intValue3 = cloneSettings22.getInteger("fakeDateYear", num6).intValue();
                                                        int intValue2022 = cloneSettings22.getInteger("fakeDateMonth", num6).intValue();
                                                        int intValue2122 = cloneSettings22.getInteger("fakeDateDay", num6).intValue();
                                                        if (intValue3 != 0) {
                                                        }
                                                        str12 = str19;
                                                        if (cloneSettings22.getBoolean("disableChromecastButton", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("ignoreCrashes", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("fakeCamera", false).booleanValue()) {
                                                        }
                                                        if (!str27.equals(cloneSettings22.getString("audioPlaybackCapture", str27))) {
                                                        }
                                                        string21 = cloneSettings22.getString("keyboardAdjust", str27);
                                                        if (!str27.equals(string21)) {
                                                        }
                                                        string22 = cloneSettings22.getString("inAppFloatingKeyboard", null);
                                                        if (!TextUtils.isEmpty(string22)) {
                                                        }
                                                        if (cloneSettings22.getBoolean("disableHapticFeedback", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("hideDeveloperMode", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("hideVpnConnection", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("noKill", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("showOnSecondaryDisplay", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("hideScreenMirroring", false).booleanValue()) {
                                                        }
                                                        intValue4 = cloneSettings22.getInteger("palmRejectionWidthPercentage", num6).intValue();
                                                        if (intValue4 > 0) {
                                                        }
                                                        intValue5 = cloneSettings22.getInteger("fakeBatteryLevel", num6).intValue();
                                                        if (intValue5 > 0) {
                                                        }
                                                        if (cloneSettings22.getBoolean("startSound", false).booleanValue()) {
                                                        }
                                                        string23 = cloneSettings22.getString("muteForTextOnScreen", str32);
                                                        if (!TextUtils.isEmpty(string23)) {
                                                        }
                                                        stringList4 = cloneSettings22.getStringList("deleteFilesDirectoriesOnExit");
                                                        if (stringList4 != null) {
                                                        }
                                                        if (cloneSettings22.getBoolean("flashlightWhileAppOpen", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("popupBlocker", false).booleanValue()) {
                                                        }
                                                        booleanValue14 = cloneSettings22.getBoolean("toastPosition", false).booleanValue();
                                                        String string5622 = cloneSettings22.getString("toastDuration", str27);
                                                        if (!booleanValue14) {
                                                        }
                                                        String str3622 = null;
                                                        str13 = str10;
                                                        defaultProvider.invokeSecondaryStatic("ToastPositionDuration", str5, context, str3622, !booleanValue14 ? cloneSettings22.getString("toastVerticalAlignment", "BOTTOM") : null, string5622);
                                                        intValue6 = cloneSettings22.getInteger("screenSaverDelayMinutes", num6).intValue();
                                                        if (intValue6 <= 0) {
                                                        }
                                                        if (cloneSettings22.getBoolean("databaseEditor", bool4).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("fpsMonitor", bool4).booleanValue()) {
                                                        }
                                                        num8 = num7;
                                                        intValue7 = cloneSettings22.getInteger("sneezeToExitThreshold", num8).intValue();
                                                        if (intValue7 > 0) {
                                                        }
                                                        string24 = cloneSettings22.getString("fakeTimeZoneId", null);
                                                        if (!TextUtils.isEmpty(string24)) {
                                                        }
                                                        if (cloneSettings22.getBoolean("makeWebViewsDebuggable", bool4).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("hideMockLocation", bool4).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("disableAudioFocus", bool4).booleanValue()) {
                                                        }
                                                        string25 = cloneSettings22.getString("kioskMode", "DISABLED");
                                                        if (!"DISABLED".equals(string25)) {
                                                        }
                                                        booleanValue15 = cloneSettings22.getBoolean("flipScreenHorizontally", bool4).booleanValue();
                                                        booleanValue16 = cloneSettings22.getBoolean("flipScreenVertically", bool4).booleanValue();
                                                        if (!booleanValue15) {
                                                        }
                                                        defaultProvider.invokeSecondaryInstance("FlipScreen", str5, context, Boolean.valueOf(booleanValue15), Boolean.valueOf(booleanValue16), Boolean.valueOf(cloneSettings22.getBoolean("flipScreenUsingNotification", bool4).booleanValue()), Boolean.valueOf(cloneSettings22.getBoolean("flipScreenUsingNfcTag", bool4).booleanValue()), properties2);
                                                        if (cloneSettings22.getBoolean("swipeToGoBack", bool4).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("inAppLiveChat", bool4).booleanValue()) {
                                                        }
                                                        if (!cloneSettings22.getBoolean("removeAppClonerBranding", bool4).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("longPressToRevealPassword", bool4).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("invertColorsDarkMode", bool4).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("invertToasts", bool4).booleanValue()) {
                                                        }
                                                        floatValue2 = cloneSettings22.getFloat("toastOpacity", Float.valueOf(1.0f)).floatValue();
                                                        if (floatValue2 < 1.0f) {
                                                        }
                                                        stringList5 = cloneSettings22.getStringList("skipDialogsStrings");
                                                        if (stringList5 != null) {
                                                        }
                                                        if (cloneSettings22.getBoolean("disableFullscreenEditing", bool4).booleanValue()) {
                                                        }
                                                        string26 = cloneSettings22.getString("changeGoogleAdvertisingId", str27);
                                                        if (!str27.equals(string26)) {
                                                        }
                                                        string27 = cloneSettings22.getString("overrideBindAddress", str27);
                                                        if (!str27.equals(string27)) {
                                                        }
                                                        if (cloneSettings22.getBoolean("enableDisableNetworkingNotification", bool4).booleanValue()) {
                                                        }
                                                        forObject = cloneSettings22.forObject("addPadding");
                                                        if (forObject != null) {
                                                        }
                                                        booleanValue17 = cloneSettings22.getBoolean("jobSchedulingMonitor", bool4).booleanValue();
                                                        floatValue3 = cloneSettings22.getFloat("jobSchedulingMultiplier", Float.valueOf(1.0f)).floatValue();
                                                        if (!booleanValue17) {
                                                        }
                                                        defaultProvider.invokeSecondaryInstance("JobScheduling", str5, context, Boolean.valueOf(booleanValue17), Float.valueOf(floatValue3), properties2);
                                                        stringMap3 = cloneSettings22.getStringMap("mappedKeys");
                                                        if (stringMap3 != null) {
                                                        }
                                                        intValue8 = cloneSettings22.getInteger("colorFilterBrightness", num8).intValue();
                                                        intValue9 = cloneSettings22.getInteger("colorFilterContrast", num8).intValue();
                                                        intValue10 = cloneSettings22.getInteger("colorFilterSaturation", num8).intValue();
                                                        intValue11 = cloneSettings22.getInteger("colorFilterHue", num8).intValue();
                                                        intValue12 = cloneSettings22.getInteger("colorFilterRed", num8).intValue();
                                                        intValue13 = cloneSettings22.getInteger("colorFilterGreen", num8).intValue();
                                                        intValue14 = cloneSettings22.getInteger("colorFilterBlue", num8).intValue();
                                                        integer3 = cloneSettings22.getInteger("colorFilterBlackWhite", null);
                                                        if (intValue8 == 0) {
                                                        }
                                                        Object[] objArr32222 = new Object[9];
                                                        objArr32222[0] = context;
                                                        objArr32222[1] = Integer.valueOf(intValue8);
                                                        objArr32222[2] = Integer.valueOf(intValue9);
                                                        objArr32222[3] = Integer.valueOf(intValue10);
                                                        objArr32222[4] = Integer.valueOf(intValue11);
                                                        objArr32222[5] = Integer.valueOf(intValue12);
                                                        objArr32222[6] = Integer.valueOf(intValue13);
                                                        objArr32222[c] = Integer.valueOf(intValue14);
                                                        objArr32222[8] = integer3;
                                                        defaultProvider.invokeSecondaryStatic("ColorFilter", str5, objArr32222);
                                                        if (cloneSettings22.getBoolean("selectAllOnFocus", bool4).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("packageNameCheckWorkaround", bool4).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("notificationDots", bool4).booleanValue()) {
                                                        }
                                                        if (z2) {
                                                        }
                                                        if (!"com.whatsapp".equals(str6)) {
                                                        }
                                                        new WhatsAppSupport().install(str6);
                                                        ByteArrayOutputStrean.init(context, str6);
                                                        if ("com.google.android.gm".equals(str6)) {
                                                        }
                                                        if ("com.paypal.android.p2pmobile".equals(str6)) {
                                                        }
                                                        if ("com.yahoo.mobile.client.android.flickr".equals(str6)) {
                                                        }
                                                        if ("com.bukalapak.android".equals(str6)) {
                                                        }
                                                        if ("com.tokopedia.tkpd".equals(str6)) {
                                                        }
                                                        if ("com.facebook.mlite".equals(str6)) {
                                                        }
                                                        Log.m13704i(TAG, "onCreate; took: " + (System.currentTimeMillis() - currentTimeMillis) + " millis");
                                                        Utils.closeAndroidPieApiCompatibilityDialog();
                                                        return true;
                                                    }
                                                    num5 = num4;
                                                    defaultProvider2.invokeSecondaryInstance("FingerprintTapAction", str18, context, string11, cloneSettings22.getString("fingerprintTapActionParam", null), string48, cloneSettings22.getString("fingerprintLongTapActionParam", null));
                                                    string12 = cloneSettings22.getString("volumeUpKeyAction", str20);
                                                    String string492 = cloneSettings22.getString("volumeDownKeyAction", str20);
                                                    String string502 = cloneSettings22.getString("volumeUpDownKeyAction", str20);
                                                    if (str20.equals(string12)) {
                                                        str22 = str20;
                                                        str35 = str10;
                                                        defaultProvider2.invokeSecondaryStatic("SecurityExceptionWorkaround", str18, context);
                                                        LoadLibraryWorkaround.install(context, str19);
                                                        cloneSettings22.getBoolean("googlePlayServicesWorkaround", false).booleanValue();
                                                        if ((!"com.fiverr.fiverr".equals(str19) || "com.instagram.android".equals(str19) || "com.viber.voip".equals(str19) || "com.waze".equals(str19) || "com.amazon.mShop.android".equals(str19)) ? true : true) {
                                                        }
                                                        if (cloneSettings22.getBoolean("hideGooglePlayServices", false).booleanValue()) {
                                                        }
                                                        string13 = cloneSettings22.getString("welcomeMessageHtml", null);
                                                        if (!TextUtils.isEmpty(string13)) {
                                                        }
                                                        if (cloneSettings22.getBoolean("incognitoMode", false).booleanValue()) {
                                                        }
                                                        str23 = str22;
                                                        string14 = cloneSettings22.getString("volumeRockerLocker", str23);
                                                        if (!str23.equals(string14)) {
                                                        }
                                                        if (cloneSettings22.getBoolean("floatingBackButton", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("joystickPointer", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("showTouches", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("localBroadcastsServices", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("localActivities", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("showAppInfoNotification", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("pictureInPictureNotification", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("hidePasswordCharacters", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("incognitoKeyboard", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("makeDebuggable", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("noBackgroundServices", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("disableLogcatLogging", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("flushLogcatBufferOnExit", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("logGetPackageName", false).booleanValue()) {
                                                        }
                                                        integer = cloneSettings22.getInteger("statusBarColor", null);
                                                        integer2 = cloneSettings22.getInteger("navigationBarColor", null);
                                                        if (cloneSettings22.getBoolean("navigationBarColorUseStatusBarColor", false).booleanValue()) {
                                                        }
                                                        if (integer == null) {
                                                        }
                                                        defaultProvider.invokeSecondaryStatic("StatusNavigationBarColor", str5, integer, integer2);
                                                        Integer integer422 = cloneSettings22.getInteger("toolbarColor", null);
                                                        if (!cloneSettings22.getBoolean("toolbarColorUseStatusBarColor", false).booleanValue()) {
                                                        }
                                                        if (integer != null) {
                                                        }
                                                        if (cloneSettings22.getBoolean("muteOnStart", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("muteWhileInForeground", false).booleanValue()) {
                                                        }
                                                        booleanValue8 = cloneSettings22.getBoolean("allowTextSelection", false).booleanValue();
                                                        booleanValue9 = cloneSettings22.getBoolean("longPressToCopyText", false).booleanValue();
                                                        booleanValue10 = cloneSettings22.getBoolean("allowSharingImages", false).booleanValue();
                                                        if (!booleanValue8) {
                                                        }
                                                        defaultProvider.invokeSecondaryInstance("AllowTextSelectionSharingImages", str5, Boolean.valueOf(booleanValue8), Boolean.valueOf(booleanValue9), Boolean.valueOf(booleanValue10), Boolean.valueOf(cloneSettings22.getBoolean("saveImagesToGallery", false).booleanValue()), properties);
                                                        if (cloneSettings22.getBoolean("keepScreenOn", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("exitAppOnScreenOff", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("requestAllPermissions", false).booleanValue()) {
                                                        }
                                                        booleanValue11 = cloneSettings22.getBoolean("allowScreenshots", false).booleanValue();
                                                        booleanValue12 = cloneSettings22.getBoolean("preventScreenshots", false).booleanValue();
                                                        if (!booleanValue11) {
                                                        }
                                                        defaultProvider.invokeSecondaryInstance("AllowPreventScreenshots", str5, context, Boolean.valueOf(booleanValue11), Boolean.valueOf(booleanValue12));
                                                        bool2 = cloneSettings22.getBoolean("webViewSafeBrowsing", null);
                                                        if (!bool.booleanValue()) {
                                                        }
                                                        defaultProvider.invokeSecondaryInstance("WebViewHooks", str5, context, bool, bool2);
                                                        if (cloneSettings22.getBoolean("clearCacheWhenNotUsed", false).booleanValue()) {
                                                        }
                                                        Class.forName("com.amazon.mas.kiwi.util.ApkHelpers");
                                                        defaultProvider.invokeSecondaryStatic("AmazonAppstoreWorkaround", str5, context);
                                                        defaultProvider.invokeSecondaryStatic("BrazeAppboyWorkaround", str5, context);
                                                        defaultProvider.invokeSecondaryStatic("FabricWorkaround", str5, context, properties);
                                                        if (!cloneSettings22.getBoolean("removeLauncherIcon", false).booleanValue()) {
                                                        }
                                                        defaultProvider.invokeSecondaryStatic("RemoveLauncherIconShortcuts", str5, context);
                                                        if (cloneSettings22.getBoolean("bringAppToFrontNotification", false).booleanValue()) {
                                                        }
                                                        str26 = str25;
                                                        string17 = cloneSettings22.getString("penDetachedEventAction", str26);
                                                        String string5222 = cloneSettings22.getString("penInsertedEventAction", str26);
                                                        if (!"EXIT_APP".equals(string17)) {
                                                        }
                                                        PenEventReceiver.install();
                                                        string18 = cloneSettings22.getString("powerConnectedEventAction", str26);
                                                        String string5322 = cloneSettings22.getString("powerDisconnectedEventAction", str26);
                                                        if (!"EXIT_APP".equals(string18)) {
                                                        }
                                                        PowerEventReceiver.install();
                                                        string19 = cloneSettings22.getString("headphonesPluggedEventAction", str26);
                                                        String string5422 = cloneSettings22.getString("headphonesUnpluggedEventAction", str26);
                                                        if (str26.equals(string19)) {
                                                        }
                                                        HeadphonesEventReceiver.install(context);
                                                        if (cloneSettings22.getBoolean("disableCameras", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("muteMic", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("disableAutoFill", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("disablePermissionPrompts", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("requestIgnoreBatteryOptimizations", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("trustAllCertificates", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("fakeCalculator", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("hideNotch", false).booleanValue()) {
                                                        }
                                                        longValue = cloneSettings22.getLong("appValidFrom", 0L).longValue();
                                                        longValue2 = cloneSettings22.getLong("appValidUntil", 0L).longValue();
                                                        if (longValue == 0) {
                                                        }
                                                        defaultProvider.invokeSecondaryInstance("AppValidity", str5, Long.valueOf(longValue), Long.valueOf(longValue2), properties2);
                                                        if (cloneSettings22.getBoolean("accessibleDataDirectory", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("dataDirectoryFtpServer", false).booleanValue()) {
                                                        }
                                                        Utils.allowHiddenApiAccess();
                                                        if (cloneSettings22.getBoolean("hostsBlocker", false).booleanValue()) {
                                                        }
                                                        stringMap = cloneSettings22.getStringMap("mappedHosts");
                                                        if (stringMap != null) {
                                                        }
                                                        stringMap2 = cloneSettings22.getStringMap("overrideSharedPreferences");
                                                        if (stringMap2 != null) {
                                                        }
                                                        if (cloneSettings22.getBoolean("enableTvVersion", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("hideRoot", false).booleanValue()) {
                                                        }
                                                        stringList2 = cloneSettings22.getStringList("hideOtherApps");
                                                        if (stringList2 != null) {
                                                        }
                                                        if (cloneSettings22.getBoolean("disablePhotoMediaAccess", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("fileAccessMonitor", false).booleanValue()) {
                                                        }
                                                        bool3 = cloneSettings22.getBoolean("dismissableDialogs", null);
                                                        if (bool3 != null) {
                                                        }
                                                        str27 = str21;
                                                        string20 = cloneSettings22.getString("volumeControlIndicator", str27);
                                                        if (!str27.equals(string20)) {
                                                        }
                                                        mapList = cloneSettings22.getMapList("screenTextReplacements");
                                                        if (mapList != null) {
                                                        }
                                                        mapList2 = cloneSettings22.getMapList("viewModifications");
                                                        if (mapList2 != null) {
                                                        }
                                                        if (cloneSettings22.getBoolean("disableNestedScrolling", false).booleanValue()) {
                                                        }
                                                        stringList3 = cloneSettings22.getStringList("blockActivitiesNames");
                                                        booleanValue13 = cloneSettings22.getBoolean("activitiesMonitor", false).booleanValue();
                                                        if (stringList3 != null) {
                                                        }
                                                        defaultProvider.invokeSecondaryInstance("BlockActivities", str5, context, stringList3, Boolean.valueOf(booleanValue13), properties2);
                                                        final String string55222 = cloneSettings22.getString("sendBroadcastOnStart", null);
                                                        if (TextUtils.isEmpty(cloneSettings22.getString("processName", null))) {
                                                        }
                                                        intValue3 = cloneSettings22.getInteger("fakeDateYear", num6).intValue();
                                                        int intValue20222 = cloneSettings22.getInteger("fakeDateMonth", num6).intValue();
                                                        int intValue21222 = cloneSettings22.getInteger("fakeDateDay", num6).intValue();
                                                        if (intValue3 != 0) {
                                                        }
                                                        str12 = str19;
                                                        if (cloneSettings22.getBoolean("disableChromecastButton", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("ignoreCrashes", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("fakeCamera", false).booleanValue()) {
                                                        }
                                                        if (!str27.equals(cloneSettings22.getString("audioPlaybackCapture", str27))) {
                                                        }
                                                        string21 = cloneSettings22.getString("keyboardAdjust", str27);
                                                        if (!str27.equals(string21)) {
                                                        }
                                                        string22 = cloneSettings22.getString("inAppFloatingKeyboard", null);
                                                        if (!TextUtils.isEmpty(string22)) {
                                                        }
                                                        if (cloneSettings22.getBoolean("disableHapticFeedback", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("hideDeveloperMode", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("hideVpnConnection", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("noKill", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("showOnSecondaryDisplay", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("hideScreenMirroring", false).booleanValue()) {
                                                        }
                                                        intValue4 = cloneSettings22.getInteger("palmRejectionWidthPercentage", num6).intValue();
                                                        if (intValue4 > 0) {
                                                        }
                                                        intValue5 = cloneSettings22.getInteger("fakeBatteryLevel", num6).intValue();
                                                        if (intValue5 > 0) {
                                                        }
                                                        if (cloneSettings22.getBoolean("startSound", false).booleanValue()) {
                                                        }
                                                        string23 = cloneSettings22.getString("muteForTextOnScreen", str32);
                                                        if (!TextUtils.isEmpty(string23)) {
                                                        }
                                                        stringList4 = cloneSettings22.getStringList("deleteFilesDirectoriesOnExit");
                                                        if (stringList4 != null) {
                                                        }
                                                        if (cloneSettings22.getBoolean("flashlightWhileAppOpen", false).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("popupBlocker", false).booleanValue()) {
                                                        }
                                                        booleanValue14 = cloneSettings22.getBoolean("toastPosition", false).booleanValue();
                                                        String string56222 = cloneSettings22.getString("toastDuration", str27);
                                                        if (!booleanValue14) {
                                                        }
                                                        String str36222 = null;
                                                        str13 = str10;
                                                        defaultProvider.invokeSecondaryStatic("ToastPositionDuration", str5, context, str36222, !booleanValue14 ? cloneSettings22.getString("toastVerticalAlignment", "BOTTOM") : null, string56222);
                                                        intValue6 = cloneSettings22.getInteger("screenSaverDelayMinutes", num6).intValue();
                                                        if (intValue6 <= 0) {
                                                        }
                                                        if (cloneSettings22.getBoolean("databaseEditor", bool4).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("fpsMonitor", bool4).booleanValue()) {
                                                        }
                                                        num8 = num7;
                                                        intValue7 = cloneSettings22.getInteger("sneezeToExitThreshold", num8).intValue();
                                                        if (intValue7 > 0) {
                                                        }
                                                        string24 = cloneSettings22.getString("fakeTimeZoneId", null);
                                                        if (!TextUtils.isEmpty(string24)) {
                                                        }
                                                        if (cloneSettings22.getBoolean("makeWebViewsDebuggable", bool4).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("hideMockLocation", bool4).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("disableAudioFocus", bool4).booleanValue()) {
                                                        }
                                                        string25 = cloneSettings22.getString("kioskMode", "DISABLED");
                                                        if (!"DISABLED".equals(string25)) {
                                                        }
                                                        booleanValue15 = cloneSettings22.getBoolean("flipScreenHorizontally", bool4).booleanValue();
                                                        booleanValue16 = cloneSettings22.getBoolean("flipScreenVertically", bool4).booleanValue();
                                                        if (!booleanValue15) {
                                                        }
                                                        defaultProvider.invokeSecondaryInstance("FlipScreen", str5, context, Boolean.valueOf(booleanValue15), Boolean.valueOf(booleanValue16), Boolean.valueOf(cloneSettings22.getBoolean("flipScreenUsingNotification", bool4).booleanValue()), Boolean.valueOf(cloneSettings22.getBoolean("flipScreenUsingNfcTag", bool4).booleanValue()), properties2);
                                                        if (cloneSettings22.getBoolean("swipeToGoBack", bool4).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("inAppLiveChat", bool4).booleanValue()) {
                                                        }
                                                        if (!cloneSettings22.getBoolean("removeAppClonerBranding", bool4).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("longPressToRevealPassword", bool4).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("invertColorsDarkMode", bool4).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("invertToasts", bool4).booleanValue()) {
                                                        }
                                                        floatValue2 = cloneSettings22.getFloat("toastOpacity", Float.valueOf(1.0f)).floatValue();
                                                        if (floatValue2 < 1.0f) {
                                                        }
                                                        stringList5 = cloneSettings22.getStringList("skipDialogsStrings");
                                                        if (stringList5 != null) {
                                                        }
                                                        if (cloneSettings22.getBoolean("disableFullscreenEditing", bool4).booleanValue()) {
                                                        }
                                                        string26 = cloneSettings22.getString("changeGoogleAdvertisingId", str27);
                                                        if (!str27.equals(string26)) {
                                                        }
                                                        string27 = cloneSettings22.getString("overrideBindAddress", str27);
                                                        if (!str27.equals(string27)) {
                                                        }
                                                        if (cloneSettings22.getBoolean("enableDisableNetworkingNotification", bool4).booleanValue()) {
                                                        }
                                                        forObject = cloneSettings22.forObject("addPadding");
                                                        if (forObject != null) {
                                                        }
                                                        booleanValue17 = cloneSettings22.getBoolean("jobSchedulingMonitor", bool4).booleanValue();
                                                        floatValue3 = cloneSettings22.getFloat("jobSchedulingMultiplier", Float.valueOf(1.0f)).floatValue();
                                                        if (!booleanValue17) {
                                                        }
                                                        defaultProvider.invokeSecondaryInstance("JobScheduling", str5, context, Boolean.valueOf(booleanValue17), Float.valueOf(floatValue3), properties2);
                                                        stringMap3 = cloneSettings22.getStringMap("mappedKeys");
                                                        if (stringMap3 != null) {
                                                        }
                                                        intValue8 = cloneSettings22.getInteger("colorFilterBrightness", num8).intValue();
                                                        intValue9 = cloneSettings22.getInteger("colorFilterContrast", num8).intValue();
                                                        intValue10 = cloneSettings22.getInteger("colorFilterSaturation", num8).intValue();
                                                        intValue11 = cloneSettings22.getInteger("colorFilterHue", num8).intValue();
                                                        intValue12 = cloneSettings22.getInteger("colorFilterRed", num8).intValue();
                                                        intValue13 = cloneSettings22.getInteger("colorFilterGreen", num8).intValue();
                                                        intValue14 = cloneSettings22.getInteger("colorFilterBlue", num8).intValue();
                                                        integer3 = cloneSettings22.getInteger("colorFilterBlackWhite", null);
                                                        if (intValue8 == 0) {
                                                        }
                                                        Object[] objArr322222 = new Object[9];
                                                        objArr322222[0] = context;
                                                        objArr322222[1] = Integer.valueOf(intValue8);
                                                        objArr322222[2] = Integer.valueOf(intValue9);
                                                        objArr322222[3] = Integer.valueOf(intValue10);
                                                        objArr322222[4] = Integer.valueOf(intValue11);
                                                        objArr322222[5] = Integer.valueOf(intValue12);
                                                        objArr322222[6] = Integer.valueOf(intValue13);
                                                        objArr322222[c] = Integer.valueOf(intValue14);
                                                        objArr322222[8] = integer3;
                                                        defaultProvider.invokeSecondaryStatic("ColorFilter", str5, objArr322222);
                                                        if (cloneSettings22.getBoolean("selectAllOnFocus", bool4).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("packageNameCheckWorkaround", bool4).booleanValue()) {
                                                        }
                                                        if (cloneSettings22.getBoolean("notificationDots", bool4).booleanValue()) {
                                                        }
                                                        if (z2) {
                                                        }
                                                        if (!"com.whatsapp".equals(str6)) {
                                                        }
                                                        new WhatsAppSupport().install(str6);
                                                        ByteArrayOutputStrean.init(context, str6);
                                                        if ("com.google.android.gm".equals(str6)) {
                                                        }
                                                        if ("com.paypal.android.p2pmobile".equals(str6)) {
                                                        }
                                                        if ("com.yahoo.mobile.client.android.flickr".equals(str6)) {
                                                        }
                                                        if ("com.bukalapak.android".equals(str6)) {
                                                        }
                                                        if ("com.tokopedia.tkpd".equals(str6)) {
                                                        }
                                                        if ("com.facebook.mlite".equals(str6)) {
                                                        }
                                                        Log.m13704i(TAG, "onCreate; took: " + (System.currentTimeMillis() - currentTimeMillis) + " millis");
                                                        Utils.closeAndroidPieApiCompatibilityDialog();
                                                        return true;
                                                    }
                                                    str22 = str20;
                                                    str35 = str10;
                                                    defaultProvider2.invokeSecondaryInstance("VolumeUpDownKeyAction", str18, string12, cloneSettings22.getString("volumeUpKeyActionParam", null), string492, cloneSettings22.getString("volumeDownKeyActionParam", null), string502, cloneSettings22.getString("volumeUpDownKeyActionParam", null));
                                                    defaultProvider2.invokeSecondaryStatic("SecurityExceptionWorkaround", str18, context);
                                                    LoadLibraryWorkaround.install(context, str19);
                                                    cloneSettings22.getBoolean("googlePlayServicesWorkaround", false).booleanValue();
                                                    if ((!"com.fiverr.fiverr".equals(str19) || "com.instagram.android".equals(str19) || "com.viber.voip".equals(str19) || "com.waze".equals(str19) || "com.amazon.mShop.android".equals(str19)) ? true : true) {
                                                    }
                                                    if (cloneSettings22.getBoolean("hideGooglePlayServices", false).booleanValue()) {
                                                    }
                                                    string13 = cloneSettings22.getString("welcomeMessageHtml", null);
                                                    if (!TextUtils.isEmpty(string13)) {
                                                    }
                                                    if (cloneSettings22.getBoolean("incognitoMode", false).booleanValue()) {
                                                    }
                                                    str23 = str22;
                                                    string14 = cloneSettings22.getString("volumeRockerLocker", str23);
                                                    if (!str23.equals(string14)) {
                                                    }
                                                    if (cloneSettings22.getBoolean("floatingBackButton", false).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("joystickPointer", false).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("showTouches", false).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("localBroadcastsServices", false).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("localActivities", false).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("showAppInfoNotification", false).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("pictureInPictureNotification", false).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("hidePasswordCharacters", false).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("incognitoKeyboard", false).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("makeDebuggable", false).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("noBackgroundServices", false).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("disableLogcatLogging", false).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("flushLogcatBufferOnExit", false).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("logGetPackageName", false).booleanValue()) {
                                                    }
                                                    integer = cloneSettings22.getInteger("statusBarColor", null);
                                                    integer2 = cloneSettings22.getInteger("navigationBarColor", null);
                                                    if (cloneSettings22.getBoolean("navigationBarColorUseStatusBarColor", false).booleanValue()) {
                                                    }
                                                    if (integer == null) {
                                                    }
                                                    defaultProvider.invokeSecondaryStatic("StatusNavigationBarColor", str5, integer, integer2);
                                                    Integer integer4222 = cloneSettings22.getInteger("toolbarColor", null);
                                                    if (!cloneSettings22.getBoolean("toolbarColorUseStatusBarColor", false).booleanValue()) {
                                                    }
                                                    if (integer != null) {
                                                    }
                                                    if (cloneSettings22.getBoolean("muteOnStart", false).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("muteWhileInForeground", false).booleanValue()) {
                                                    }
                                                    booleanValue8 = cloneSettings22.getBoolean("allowTextSelection", false).booleanValue();
                                                    booleanValue9 = cloneSettings22.getBoolean("longPressToCopyText", false).booleanValue();
                                                    booleanValue10 = cloneSettings22.getBoolean("allowSharingImages", false).booleanValue();
                                                    if (!booleanValue8) {
                                                    }
                                                    defaultProvider.invokeSecondaryInstance("AllowTextSelectionSharingImages", str5, Boolean.valueOf(booleanValue8), Boolean.valueOf(booleanValue9), Boolean.valueOf(booleanValue10), Boolean.valueOf(cloneSettings22.getBoolean("saveImagesToGallery", false).booleanValue()), properties);
                                                    if (cloneSettings22.getBoolean("keepScreenOn", false).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("exitAppOnScreenOff", false).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("requestAllPermissions", false).booleanValue()) {
                                                    }
                                                    booleanValue11 = cloneSettings22.getBoolean("allowScreenshots", false).booleanValue();
                                                    booleanValue12 = cloneSettings22.getBoolean("preventScreenshots", false).booleanValue();
                                                    if (!booleanValue11) {
                                                    }
                                                    defaultProvider.invokeSecondaryInstance("AllowPreventScreenshots", str5, context, Boolean.valueOf(booleanValue11), Boolean.valueOf(booleanValue12));
                                                    bool2 = cloneSettings22.getBoolean("webViewSafeBrowsing", null);
                                                    if (!bool.booleanValue()) {
                                                    }
                                                    defaultProvider.invokeSecondaryInstance("WebViewHooks", str5, context, bool, bool2);
                                                    if (cloneSettings22.getBoolean("clearCacheWhenNotUsed", false).booleanValue()) {
                                                    }
                                                    Class.forName("com.amazon.mas.kiwi.util.ApkHelpers");
                                                    defaultProvider.invokeSecondaryStatic("AmazonAppstoreWorkaround", str5, context);
                                                    defaultProvider.invokeSecondaryStatic("BrazeAppboyWorkaround", str5, context);
                                                    defaultProvider.invokeSecondaryStatic("FabricWorkaround", str5, context, properties);
                                                    if (!cloneSettings22.getBoolean("removeLauncherIcon", false).booleanValue()) {
                                                    }
                                                    defaultProvider.invokeSecondaryStatic("RemoveLauncherIconShortcuts", str5, context);
                                                    if (cloneSettings22.getBoolean("bringAppToFrontNotification", false).booleanValue()) {
                                                    }
                                                    str26 = str25;
                                                    string17 = cloneSettings22.getString("penDetachedEventAction", str26);
                                                    String string52222 = cloneSettings22.getString("penInsertedEventAction", str26);
                                                    if (!"EXIT_APP".equals(string17)) {
                                                    }
                                                    PenEventReceiver.install();
                                                    string18 = cloneSettings22.getString("powerConnectedEventAction", str26);
                                                    String string53222 = cloneSettings22.getString("powerDisconnectedEventAction", str26);
                                                    if (!"EXIT_APP".equals(string18)) {
                                                    }
                                                    PowerEventReceiver.install();
                                                    string19 = cloneSettings22.getString("headphonesPluggedEventAction", str26);
                                                    String string54222 = cloneSettings22.getString("headphonesUnpluggedEventAction", str26);
                                                    if (str26.equals(string19)) {
                                                    }
                                                    HeadphonesEventReceiver.install(context);
                                                    if (cloneSettings22.getBoolean("disableCameras", false).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("muteMic", false).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("disableAutoFill", false).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("disablePermissionPrompts", false).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("requestIgnoreBatteryOptimizations", false).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("trustAllCertificates", false).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("fakeCalculator", false).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("hideNotch", false).booleanValue()) {
                                                    }
                                                    longValue = cloneSettings22.getLong("appValidFrom", 0L).longValue();
                                                    longValue2 = cloneSettings22.getLong("appValidUntil", 0L).longValue();
                                                    if (longValue == 0) {
                                                    }
                                                    defaultProvider.invokeSecondaryInstance("AppValidity", str5, Long.valueOf(longValue), Long.valueOf(longValue2), properties2);
                                                    if (cloneSettings22.getBoolean("accessibleDataDirectory", false).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("dataDirectoryFtpServer", false).booleanValue()) {
                                                    }
                                                    Utils.allowHiddenApiAccess();
                                                    if (cloneSettings22.getBoolean("hostsBlocker", false).booleanValue()) {
                                                    }
                                                    stringMap = cloneSettings22.getStringMap("mappedHosts");
                                                    if (stringMap != null) {
                                                    }
                                                    stringMap2 = cloneSettings22.getStringMap("overrideSharedPreferences");
                                                    if (stringMap2 != null) {
                                                    }
                                                    if (cloneSettings22.getBoolean("enableTvVersion", false).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("hideRoot", false).booleanValue()) {
                                                    }
                                                    stringList2 = cloneSettings22.getStringList("hideOtherApps");
                                                    if (stringList2 != null) {
                                                    }
                                                    if (cloneSettings22.getBoolean("disablePhotoMediaAccess", false).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("fileAccessMonitor", false).booleanValue()) {
                                                    }
                                                    bool3 = cloneSettings22.getBoolean("dismissableDialogs", null);
                                                    if (bool3 != null) {
                                                    }
                                                    str27 = str21;
                                                    string20 = cloneSettings22.getString("volumeControlIndicator", str27);
                                                    if (!str27.equals(string20)) {
                                                    }
                                                    mapList = cloneSettings22.getMapList("screenTextReplacements");
                                                    if (mapList != null) {
                                                    }
                                                    mapList2 = cloneSettings22.getMapList("viewModifications");
                                                    if (mapList2 != null) {
                                                    }
                                                    if (cloneSettings22.getBoolean("disableNestedScrolling", false).booleanValue()) {
                                                    }
                                                    stringList3 = cloneSettings22.getStringList("blockActivitiesNames");
                                                    booleanValue13 = cloneSettings22.getBoolean("activitiesMonitor", false).booleanValue();
                                                    if (stringList3 != null) {
                                                    }
                                                    defaultProvider.invokeSecondaryInstance("BlockActivities", str5, context, stringList3, Boolean.valueOf(booleanValue13), properties2);
                                                    final String string552222 = cloneSettings22.getString("sendBroadcastOnStart", null);
                                                    if (TextUtils.isEmpty(cloneSettings22.getString("processName", null))) {
                                                    }
                                                    intValue3 = cloneSettings22.getInteger("fakeDateYear", num6).intValue();
                                                    int intValue202222 = cloneSettings22.getInteger("fakeDateMonth", num6).intValue();
                                                    int intValue212222 = cloneSettings22.getInteger("fakeDateDay", num6).intValue();
                                                    if (intValue3 != 0) {
                                                    }
                                                    str12 = str19;
                                                    if (cloneSettings22.getBoolean("disableChromecastButton", false).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("ignoreCrashes", false).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("fakeCamera", false).booleanValue()) {
                                                    }
                                                    if (!str27.equals(cloneSettings22.getString("audioPlaybackCapture", str27))) {
                                                    }
                                                    string21 = cloneSettings22.getString("keyboardAdjust", str27);
                                                    if (!str27.equals(string21)) {
                                                    }
                                                    string22 = cloneSettings22.getString("inAppFloatingKeyboard", null);
                                                    if (!TextUtils.isEmpty(string22)) {
                                                    }
                                                    if (cloneSettings22.getBoolean("disableHapticFeedback", false).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("hideDeveloperMode", false).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("hideVpnConnection", false).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("noKill", false).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("showOnSecondaryDisplay", false).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("hideScreenMirroring", false).booleanValue()) {
                                                    }
                                                    intValue4 = cloneSettings22.getInteger("palmRejectionWidthPercentage", num6).intValue();
                                                    if (intValue4 > 0) {
                                                    }
                                                    intValue5 = cloneSettings22.getInteger("fakeBatteryLevel", num6).intValue();
                                                    if (intValue5 > 0) {
                                                    }
                                                    if (cloneSettings22.getBoolean("startSound", false).booleanValue()) {
                                                    }
                                                    string23 = cloneSettings22.getString("muteForTextOnScreen", str32);
                                                    if (!TextUtils.isEmpty(string23)) {
                                                    }
                                                    stringList4 = cloneSettings22.getStringList("deleteFilesDirectoriesOnExit");
                                                    if (stringList4 != null) {
                                                    }
                                                    if (cloneSettings22.getBoolean("flashlightWhileAppOpen", false).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("popupBlocker", false).booleanValue()) {
                                                    }
                                                    booleanValue14 = cloneSettings22.getBoolean("toastPosition", false).booleanValue();
                                                    String string562222 = cloneSettings22.getString("toastDuration", str27);
                                                    if (!booleanValue14) {
                                                    }
                                                    String str362222 = null;
                                                    str13 = str10;
                                                    defaultProvider.invokeSecondaryStatic("ToastPositionDuration", str5, context, str362222, !booleanValue14 ? cloneSettings22.getString("toastVerticalAlignment", "BOTTOM") : null, string562222);
                                                    intValue6 = cloneSettings22.getInteger("screenSaverDelayMinutes", num6).intValue();
                                                    if (intValue6 <= 0) {
                                                    }
                                                    if (cloneSettings22.getBoolean("databaseEditor", bool4).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("fpsMonitor", bool4).booleanValue()) {
                                                    }
                                                    num8 = num7;
                                                    intValue7 = cloneSettings22.getInteger("sneezeToExitThreshold", num8).intValue();
                                                    if (intValue7 > 0) {
                                                    }
                                                    string24 = cloneSettings22.getString("fakeTimeZoneId", null);
                                                    if (!TextUtils.isEmpty(string24)) {
                                                    }
                                                    if (cloneSettings22.getBoolean("makeWebViewsDebuggable", bool4).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("hideMockLocation", bool4).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("disableAudioFocus", bool4).booleanValue()) {
                                                    }
                                                    string25 = cloneSettings22.getString("kioskMode", "DISABLED");
                                                    if (!"DISABLED".equals(string25)) {
                                                    }
                                                    booleanValue15 = cloneSettings22.getBoolean("flipScreenHorizontally", bool4).booleanValue();
                                                    booleanValue16 = cloneSettings22.getBoolean("flipScreenVertically", bool4).booleanValue();
                                                    if (!booleanValue15) {
                                                    }
                                                    defaultProvider.invokeSecondaryInstance("FlipScreen", str5, context, Boolean.valueOf(booleanValue15), Boolean.valueOf(booleanValue16), Boolean.valueOf(cloneSettings22.getBoolean("flipScreenUsingNotification", bool4).booleanValue()), Boolean.valueOf(cloneSettings22.getBoolean("flipScreenUsingNfcTag", bool4).booleanValue()), properties2);
                                                    if (cloneSettings22.getBoolean("swipeToGoBack", bool4).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("inAppLiveChat", bool4).booleanValue()) {
                                                    }
                                                    if (!cloneSettings22.getBoolean("removeAppClonerBranding", bool4).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("longPressToRevealPassword", bool4).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("invertColorsDarkMode", bool4).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("invertToasts", bool4).booleanValue()) {
                                                    }
                                                    floatValue2 = cloneSettings22.getFloat("toastOpacity", Float.valueOf(1.0f)).floatValue();
                                                    if (floatValue2 < 1.0f) {
                                                    }
                                                    stringList5 = cloneSettings22.getStringList("skipDialogsStrings");
                                                    if (stringList5 != null) {
                                                    }
                                                    if (cloneSettings22.getBoolean("disableFullscreenEditing", bool4).booleanValue()) {
                                                    }
                                                    string26 = cloneSettings22.getString("changeGoogleAdvertisingId", str27);
                                                    if (!str27.equals(string26)) {
                                                    }
                                                    string27 = cloneSettings22.getString("overrideBindAddress", str27);
                                                    if (!str27.equals(string27)) {
                                                    }
                                                    if (cloneSettings22.getBoolean("enableDisableNetworkingNotification", bool4).booleanValue()) {
                                                    }
                                                    forObject = cloneSettings22.forObject("addPadding");
                                                    if (forObject != null) {
                                                    }
                                                    booleanValue17 = cloneSettings22.getBoolean("jobSchedulingMonitor", bool4).booleanValue();
                                                    floatValue3 = cloneSettings22.getFloat("jobSchedulingMultiplier", Float.valueOf(1.0f)).floatValue();
                                                    if (!booleanValue17) {
                                                    }
                                                    defaultProvider.invokeSecondaryInstance("JobScheduling", str5, context, Boolean.valueOf(booleanValue17), Float.valueOf(floatValue3), properties2);
                                                    stringMap3 = cloneSettings22.getStringMap("mappedKeys");
                                                    if (stringMap3 != null) {
                                                    }
                                                    intValue8 = cloneSettings22.getInteger("colorFilterBrightness", num8).intValue();
                                                    intValue9 = cloneSettings22.getInteger("colorFilterContrast", num8).intValue();
                                                    intValue10 = cloneSettings22.getInteger("colorFilterSaturation", num8).intValue();
                                                    intValue11 = cloneSettings22.getInteger("colorFilterHue", num8).intValue();
                                                    intValue12 = cloneSettings22.getInteger("colorFilterRed", num8).intValue();
                                                    intValue13 = cloneSettings22.getInteger("colorFilterGreen", num8).intValue();
                                                    intValue14 = cloneSettings22.getInteger("colorFilterBlue", num8).intValue();
                                                    integer3 = cloneSettings22.getInteger("colorFilterBlackWhite", null);
                                                    if (intValue8 == 0) {
                                                    }
                                                    Object[] objArr3222222 = new Object[9];
                                                    objArr3222222[0] = context;
                                                    objArr3222222[1] = Integer.valueOf(intValue8);
                                                    objArr3222222[2] = Integer.valueOf(intValue9);
                                                    objArr3222222[3] = Integer.valueOf(intValue10);
                                                    objArr3222222[4] = Integer.valueOf(intValue11);
                                                    objArr3222222[5] = Integer.valueOf(intValue12);
                                                    objArr3222222[6] = Integer.valueOf(intValue13);
                                                    objArr3222222[c] = Integer.valueOf(intValue14);
                                                    objArr3222222[8] = integer3;
                                                    defaultProvider.invokeSecondaryStatic("ColorFilter", str5, objArr3222222);
                                                    if (cloneSettings22.getBoolean("selectAllOnFocus", bool4).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("packageNameCheckWorkaround", bool4).booleanValue()) {
                                                    }
                                                    if (cloneSettings22.getBoolean("notificationDots", bool4).booleanValue()) {
                                                    }
                                                    if (z2) {
                                                    }
                                                    if (!"com.whatsapp".equals(str6)) {
                                                    }
                                                    new WhatsAppSupport().install(str6);
                                                    ByteArrayOutputStrean.init(context, str6);
                                                    if ("com.google.android.gm".equals(str6)) {
                                                    }
                                                    if ("com.paypal.android.p2pmobile".equals(str6)) {
                                                    }
                                                    if ("com.yahoo.mobile.client.android.flickr".equals(str6)) {
                                                    }
                                                    if ("com.bukalapak.android".equals(str6)) {
                                                    }
                                                    if ("com.tokopedia.tkpd".equals(str6)) {
                                                    }
                                                    if ("com.facebook.mlite".equals(str6)) {
                                                    }
                                                    Log.m13704i(TAG, "onCreate; took: " + (System.currentTimeMillis() - currentTimeMillis) + " millis");
                                                    Utils.closeAndroidPieApiCompatibilityDialog();
                                                    return true;
                                                }
                                            }
                                        }
                                        Object[] objArr5 = {context, string8, string38, string39, string40, string41, string42, string43, string44, string45};
                                        defaultProvider2 = this;
                                        str18 = str16;
                                        defaultProvider2.invokeSecondaryStatic("BuildProps", str18, objArr5);
                                        if (cloneSettings22.getBoolean("httpProxy", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("socksProxy", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("showIpInfo", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("disableAllNetworking", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("disableBackgroundNetworking", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("disableNetworkingWhenScreenOff", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("disableNetworkingWithoutVpn", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("disableMobileData", false).booleanValue()) {
                                        }
                                        booleanValue5 = cloneSettings22.getBoolean("disableInAppSearch", false).booleanValue();
                                        str19 = str12;
                                        if ("com.contextlogic.wish".equals(str19)) {
                                        }
                                        if (booleanValue5) {
                                        }
                                        if (cloneSettings22.getBoolean("makeWatchApp", false).booleanValue()) {
                                        }
                                        if (!str11.equals(cloneSettings22.getString("activityTransitions", str11))) {
                                        }
                                        str20 = str9;
                                        string9 = cloneSettings22.getString("longPressBackAction", str20);
                                        if (!str20.equals(string9)) {
                                        }
                                        string10 = cloneSettings22.getString("shakeAction", str20);
                                        if (str20.equals(string10)) {
                                        }
                                        if (cloneSettings22.getBoolean("backAlwaysFinishes", false).booleanValue()) {
                                        }
                                        string11 = cloneSettings22.getString("fingerprintTapAction", str20);
                                        String string482 = cloneSettings22.getString("fingerprintLongTapAction", str20);
                                        if (str20.equals(string11)) {
                                            num5 = num4;
                                            string12 = cloneSettings22.getString("volumeUpKeyAction", str20);
                                            String string4922 = cloneSettings22.getString("volumeDownKeyAction", str20);
                                            String string5022 = cloneSettings22.getString("volumeUpDownKeyAction", str20);
                                            if (str20.equals(string12)) {
                                            }
                                            str22 = str20;
                                            str35 = str10;
                                            defaultProvider2.invokeSecondaryInstance("VolumeUpDownKeyAction", str18, string12, cloneSettings22.getString("volumeUpKeyActionParam", null), string4922, cloneSettings22.getString("volumeDownKeyActionParam", null), string5022, cloneSettings22.getString("volumeUpDownKeyActionParam", null));
                                            defaultProvider2.invokeSecondaryStatic("SecurityExceptionWorkaround", str18, context);
                                            LoadLibraryWorkaround.install(context, str19);
                                            cloneSettings22.getBoolean("googlePlayServicesWorkaround", false).booleanValue();
                                            if ((!"com.fiverr.fiverr".equals(str19) || "com.instagram.android".equals(str19) || "com.viber.voip".equals(str19) || "com.waze".equals(str19) || "com.amazon.mShop.android".equals(str19)) ? true : true) {
                                            }
                                            if (cloneSettings22.getBoolean("hideGooglePlayServices", false).booleanValue()) {
                                            }
                                            string13 = cloneSettings22.getString("welcomeMessageHtml", null);
                                            if (!TextUtils.isEmpty(string13)) {
                                            }
                                            if (cloneSettings22.getBoolean("incognitoMode", false).booleanValue()) {
                                            }
                                            str23 = str22;
                                            string14 = cloneSettings22.getString("volumeRockerLocker", str23);
                                            if (!str23.equals(string14)) {
                                            }
                                            if (cloneSettings22.getBoolean("floatingBackButton", false).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("joystickPointer", false).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("showTouches", false).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("localBroadcastsServices", false).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("localActivities", false).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("showAppInfoNotification", false).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("pictureInPictureNotification", false).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("hidePasswordCharacters", false).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("incognitoKeyboard", false).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("makeDebuggable", false).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("noBackgroundServices", false).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("disableLogcatLogging", false).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("flushLogcatBufferOnExit", false).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("logGetPackageName", false).booleanValue()) {
                                            }
                                            integer = cloneSettings22.getInteger("statusBarColor", null);
                                            integer2 = cloneSettings22.getInteger("navigationBarColor", null);
                                            if (cloneSettings22.getBoolean("navigationBarColorUseStatusBarColor", false).booleanValue()) {
                                            }
                                            if (integer == null) {
                                            }
                                            defaultProvider.invokeSecondaryStatic("StatusNavigationBarColor", str5, integer, integer2);
                                            Integer integer42222 = cloneSettings22.getInteger("toolbarColor", null);
                                            if (!cloneSettings22.getBoolean("toolbarColorUseStatusBarColor", false).booleanValue()) {
                                            }
                                            if (integer != null) {
                                            }
                                            if (cloneSettings22.getBoolean("muteOnStart", false).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("muteWhileInForeground", false).booleanValue()) {
                                            }
                                            booleanValue8 = cloneSettings22.getBoolean("allowTextSelection", false).booleanValue();
                                            booleanValue9 = cloneSettings22.getBoolean("longPressToCopyText", false).booleanValue();
                                            booleanValue10 = cloneSettings22.getBoolean("allowSharingImages", false).booleanValue();
                                            if (!booleanValue8) {
                                            }
                                            defaultProvider.invokeSecondaryInstance("AllowTextSelectionSharingImages", str5, Boolean.valueOf(booleanValue8), Boolean.valueOf(booleanValue9), Boolean.valueOf(booleanValue10), Boolean.valueOf(cloneSettings22.getBoolean("saveImagesToGallery", false).booleanValue()), properties);
                                            if (cloneSettings22.getBoolean("keepScreenOn", false).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("exitAppOnScreenOff", false).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("requestAllPermissions", false).booleanValue()) {
                                            }
                                            booleanValue11 = cloneSettings22.getBoolean("allowScreenshots", false).booleanValue();
                                            booleanValue12 = cloneSettings22.getBoolean("preventScreenshots", false).booleanValue();
                                            if (!booleanValue11) {
                                            }
                                            defaultProvider.invokeSecondaryInstance("AllowPreventScreenshots", str5, context, Boolean.valueOf(booleanValue11), Boolean.valueOf(booleanValue12));
                                            bool2 = cloneSettings22.getBoolean("webViewSafeBrowsing", null);
                                            if (!bool.booleanValue()) {
                                            }
                                            defaultProvider.invokeSecondaryInstance("WebViewHooks", str5, context, bool, bool2);
                                            if (cloneSettings22.getBoolean("clearCacheWhenNotUsed", false).booleanValue()) {
                                            }
                                            Class.forName("com.amazon.mas.kiwi.util.ApkHelpers");
                                            defaultProvider.invokeSecondaryStatic("AmazonAppstoreWorkaround", str5, context);
                                            defaultProvider.invokeSecondaryStatic("BrazeAppboyWorkaround", str5, context);
                                            defaultProvider.invokeSecondaryStatic("FabricWorkaround", str5, context, properties);
                                            if (!cloneSettings22.getBoolean("removeLauncherIcon", false).booleanValue()) {
                                            }
                                            defaultProvider.invokeSecondaryStatic("RemoveLauncherIconShortcuts", str5, context);
                                            if (cloneSettings22.getBoolean("bringAppToFrontNotification", false).booleanValue()) {
                                            }
                                            str26 = str25;
                                            string17 = cloneSettings22.getString("penDetachedEventAction", str26);
                                            String string522222 = cloneSettings22.getString("penInsertedEventAction", str26);
                                            if (!"EXIT_APP".equals(string17)) {
                                            }
                                            PenEventReceiver.install();
                                            string18 = cloneSettings22.getString("powerConnectedEventAction", str26);
                                            String string532222 = cloneSettings22.getString("powerDisconnectedEventAction", str26);
                                            if (!"EXIT_APP".equals(string18)) {
                                            }
                                            PowerEventReceiver.install();
                                            string19 = cloneSettings22.getString("headphonesPluggedEventAction", str26);
                                            String string542222 = cloneSettings22.getString("headphonesUnpluggedEventAction", str26);
                                            if (str26.equals(string19)) {
                                            }
                                            HeadphonesEventReceiver.install(context);
                                            if (cloneSettings22.getBoolean("disableCameras", false).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("muteMic", false).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("disableAutoFill", false).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("disablePermissionPrompts", false).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("requestIgnoreBatteryOptimizations", false).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("trustAllCertificates", false).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("fakeCalculator", false).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("hideNotch", false).booleanValue()) {
                                            }
                                            longValue = cloneSettings22.getLong("appValidFrom", 0L).longValue();
                                            longValue2 = cloneSettings22.getLong("appValidUntil", 0L).longValue();
                                            if (longValue == 0) {
                                            }
                                            defaultProvider.invokeSecondaryInstance("AppValidity", str5, Long.valueOf(longValue), Long.valueOf(longValue2), properties2);
                                            if (cloneSettings22.getBoolean("accessibleDataDirectory", false).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("dataDirectoryFtpServer", false).booleanValue()) {
                                            }
                                            Utils.allowHiddenApiAccess();
                                            if (cloneSettings22.getBoolean("hostsBlocker", false).booleanValue()) {
                                            }
                                            stringMap = cloneSettings22.getStringMap("mappedHosts");
                                            if (stringMap != null) {
                                            }
                                            stringMap2 = cloneSettings22.getStringMap("overrideSharedPreferences");
                                            if (stringMap2 != null) {
                                            }
                                            if (cloneSettings22.getBoolean("enableTvVersion", false).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("hideRoot", false).booleanValue()) {
                                            }
                                            stringList2 = cloneSettings22.getStringList("hideOtherApps");
                                            if (stringList2 != null) {
                                            }
                                            if (cloneSettings22.getBoolean("disablePhotoMediaAccess", false).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("fileAccessMonitor", false).booleanValue()) {
                                            }
                                            bool3 = cloneSettings22.getBoolean("dismissableDialogs", null);
                                            if (bool3 != null) {
                                            }
                                            str27 = str21;
                                            string20 = cloneSettings22.getString("volumeControlIndicator", str27);
                                            if (!str27.equals(string20)) {
                                            }
                                            mapList = cloneSettings22.getMapList("screenTextReplacements");
                                            if (mapList != null) {
                                            }
                                            mapList2 = cloneSettings22.getMapList("viewModifications");
                                            if (mapList2 != null) {
                                            }
                                            if (cloneSettings22.getBoolean("disableNestedScrolling", false).booleanValue()) {
                                            }
                                            stringList3 = cloneSettings22.getStringList("blockActivitiesNames");
                                            booleanValue13 = cloneSettings22.getBoolean("activitiesMonitor", false).booleanValue();
                                            if (stringList3 != null) {
                                            }
                                            defaultProvider.invokeSecondaryInstance("BlockActivities", str5, context, stringList3, Boolean.valueOf(booleanValue13), properties2);
                                            final String string5522222 = cloneSettings22.getString("sendBroadcastOnStart", null);
                                            if (TextUtils.isEmpty(cloneSettings22.getString("processName", null))) {
                                            }
                                            intValue3 = cloneSettings22.getInteger("fakeDateYear", num6).intValue();
                                            int intValue2022222 = cloneSettings22.getInteger("fakeDateMonth", num6).intValue();
                                            int intValue2122222 = cloneSettings22.getInteger("fakeDateDay", num6).intValue();
                                            if (intValue3 != 0) {
                                            }
                                            str12 = str19;
                                            if (cloneSettings22.getBoolean("disableChromecastButton", false).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("ignoreCrashes", false).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("fakeCamera", false).booleanValue()) {
                                            }
                                            if (!str27.equals(cloneSettings22.getString("audioPlaybackCapture", str27))) {
                                            }
                                            string21 = cloneSettings22.getString("keyboardAdjust", str27);
                                            if (!str27.equals(string21)) {
                                            }
                                            string22 = cloneSettings22.getString("inAppFloatingKeyboard", null);
                                            if (!TextUtils.isEmpty(string22)) {
                                            }
                                            if (cloneSettings22.getBoolean("disableHapticFeedback", false).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("hideDeveloperMode", false).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("hideVpnConnection", false).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("noKill", false).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("showOnSecondaryDisplay", false).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("hideScreenMirroring", false).booleanValue()) {
                                            }
                                            intValue4 = cloneSettings22.getInteger("palmRejectionWidthPercentage", num6).intValue();
                                            if (intValue4 > 0) {
                                            }
                                            intValue5 = cloneSettings22.getInteger("fakeBatteryLevel", num6).intValue();
                                            if (intValue5 > 0) {
                                            }
                                            if (cloneSettings22.getBoolean("startSound", false).booleanValue()) {
                                            }
                                            string23 = cloneSettings22.getString("muteForTextOnScreen", str32);
                                            if (!TextUtils.isEmpty(string23)) {
                                            }
                                            stringList4 = cloneSettings22.getStringList("deleteFilesDirectoriesOnExit");
                                            if (stringList4 != null) {
                                            }
                                            if (cloneSettings22.getBoolean("flashlightWhileAppOpen", false).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("popupBlocker", false).booleanValue()) {
                                            }
                                            booleanValue14 = cloneSettings22.getBoolean("toastPosition", false).booleanValue();
                                            String string5622222 = cloneSettings22.getString("toastDuration", str27);
                                            if (!booleanValue14) {
                                            }
                                            String str3622222 = null;
                                            str13 = str10;
                                            defaultProvider.invokeSecondaryStatic("ToastPositionDuration", str5, context, str3622222, !booleanValue14 ? cloneSettings22.getString("toastVerticalAlignment", "BOTTOM") : null, string5622222);
                                            intValue6 = cloneSettings22.getInteger("screenSaverDelayMinutes", num6).intValue();
                                            if (intValue6 <= 0) {
                                            }
                                            if (cloneSettings22.getBoolean("databaseEditor", bool4).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("fpsMonitor", bool4).booleanValue()) {
                                            }
                                            num8 = num7;
                                            intValue7 = cloneSettings22.getInteger("sneezeToExitThreshold", num8).intValue();
                                            if (intValue7 > 0) {
                                            }
                                            string24 = cloneSettings22.getString("fakeTimeZoneId", null);
                                            if (!TextUtils.isEmpty(string24)) {
                                            }
                                            if (cloneSettings22.getBoolean("makeWebViewsDebuggable", bool4).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("hideMockLocation", bool4).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("disableAudioFocus", bool4).booleanValue()) {
                                            }
                                            string25 = cloneSettings22.getString("kioskMode", "DISABLED");
                                            if (!"DISABLED".equals(string25)) {
                                            }
                                            booleanValue15 = cloneSettings22.getBoolean("flipScreenHorizontally", bool4).booleanValue();
                                            booleanValue16 = cloneSettings22.getBoolean("flipScreenVertically", bool4).booleanValue();
                                            if (!booleanValue15) {
                                            }
                                            defaultProvider.invokeSecondaryInstance("FlipScreen", str5, context, Boolean.valueOf(booleanValue15), Boolean.valueOf(booleanValue16), Boolean.valueOf(cloneSettings22.getBoolean("flipScreenUsingNotification", bool4).booleanValue()), Boolean.valueOf(cloneSettings22.getBoolean("flipScreenUsingNfcTag", bool4).booleanValue()), properties2);
                                            if (cloneSettings22.getBoolean("swipeToGoBack", bool4).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("inAppLiveChat", bool4).booleanValue()) {
                                            }
                                            if (!cloneSettings22.getBoolean("removeAppClonerBranding", bool4).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("longPressToRevealPassword", bool4).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("invertColorsDarkMode", bool4).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("invertToasts", bool4).booleanValue()) {
                                            }
                                            floatValue2 = cloneSettings22.getFloat("toastOpacity", Float.valueOf(1.0f)).floatValue();
                                            if (floatValue2 < 1.0f) {
                                            }
                                            stringList5 = cloneSettings22.getStringList("skipDialogsStrings");
                                            if (stringList5 != null) {
                                            }
                                            if (cloneSettings22.getBoolean("disableFullscreenEditing", bool4).booleanValue()) {
                                            }
                                            string26 = cloneSettings22.getString("changeGoogleAdvertisingId", str27);
                                            if (!str27.equals(string26)) {
                                            }
                                            string27 = cloneSettings22.getString("overrideBindAddress", str27);
                                            if (!str27.equals(string27)) {
                                            }
                                            if (cloneSettings22.getBoolean("enableDisableNetworkingNotification", bool4).booleanValue()) {
                                            }
                                            forObject = cloneSettings22.forObject("addPadding");
                                            if (forObject != null) {
                                            }
                                            booleanValue17 = cloneSettings22.getBoolean("jobSchedulingMonitor", bool4).booleanValue();
                                            floatValue3 = cloneSettings22.getFloat("jobSchedulingMultiplier", Float.valueOf(1.0f)).floatValue();
                                            if (!booleanValue17) {
                                            }
                                            defaultProvider.invokeSecondaryInstance("JobScheduling", str5, context, Boolean.valueOf(booleanValue17), Float.valueOf(floatValue3), properties2);
                                            stringMap3 = cloneSettings22.getStringMap("mappedKeys");
                                            if (stringMap3 != null) {
                                            }
                                            intValue8 = cloneSettings22.getInteger("colorFilterBrightness", num8).intValue();
                                            intValue9 = cloneSettings22.getInteger("colorFilterContrast", num8).intValue();
                                            intValue10 = cloneSettings22.getInteger("colorFilterSaturation", num8).intValue();
                                            intValue11 = cloneSettings22.getInteger("colorFilterHue", num8).intValue();
                                            intValue12 = cloneSettings22.getInteger("colorFilterRed", num8).intValue();
                                            intValue13 = cloneSettings22.getInteger("colorFilterGreen", num8).intValue();
                                            intValue14 = cloneSettings22.getInteger("colorFilterBlue", num8).intValue();
                                            integer3 = cloneSettings22.getInteger("colorFilterBlackWhite", null);
                                            if (intValue8 == 0) {
                                            }
                                            Object[] objArr32222222 = new Object[9];
                                            objArr32222222[0] = context;
                                            objArr32222222[1] = Integer.valueOf(intValue8);
                                            objArr32222222[2] = Integer.valueOf(intValue9);
                                            objArr32222222[3] = Integer.valueOf(intValue10);
                                            objArr32222222[4] = Integer.valueOf(intValue11);
                                            objArr32222222[5] = Integer.valueOf(intValue12);
                                            objArr32222222[6] = Integer.valueOf(intValue13);
                                            objArr32222222[c] = Integer.valueOf(intValue14);
                                            objArr32222222[8] = integer3;
                                            defaultProvider.invokeSecondaryStatic("ColorFilter", str5, objArr32222222);
                                            if (cloneSettings22.getBoolean("selectAllOnFocus", bool4).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("packageNameCheckWorkaround", bool4).booleanValue()) {
                                            }
                                            if (cloneSettings22.getBoolean("notificationDots", bool4).booleanValue()) {
                                            }
                                            if (z2) {
                                            }
                                            if (!"com.whatsapp".equals(str6)) {
                                            }
                                            new WhatsAppSupport().install(str6);
                                            ByteArrayOutputStrean.init(context, str6);
                                            if ("com.google.android.gm".equals(str6)) {
                                            }
                                            if ("com.paypal.android.p2pmobile".equals(str6)) {
                                            }
                                            if ("com.yahoo.mobile.client.android.flickr".equals(str6)) {
                                            }
                                            if ("com.bukalapak.android".equals(str6)) {
                                            }
                                            if ("com.tokopedia.tkpd".equals(str6)) {
                                            }
                                            if ("com.facebook.mlite".equals(str6)) {
                                            }
                                            Log.m13704i(TAG, "onCreate; took: " + (System.currentTimeMillis() - currentTimeMillis) + " millis");
                                            Utils.closeAndroidPieApiCompatibilityDialog();
                                            return true;
                                        }
                                        num5 = num4;
                                        defaultProvider2.invokeSecondaryInstance("FingerprintTapAction", str18, context, string11, cloneSettings22.getString("fingerprintTapActionParam", null), string482, cloneSettings22.getString("fingerprintLongTapActionParam", null));
                                        string12 = cloneSettings22.getString("volumeUpKeyAction", str20);
                                        String string49222 = cloneSettings22.getString("volumeDownKeyAction", str20);
                                        String string50222 = cloneSettings22.getString("volumeUpDownKeyAction", str20);
                                        if (str20.equals(string12)) {
                                        }
                                        str22 = str20;
                                        str35 = str10;
                                        defaultProvider2.invokeSecondaryInstance("VolumeUpDownKeyAction", str18, string12, cloneSettings22.getString("volumeUpKeyActionParam", null), string49222, cloneSettings22.getString("volumeDownKeyActionParam", null), string50222, cloneSettings22.getString("volumeUpDownKeyActionParam", null));
                                        defaultProvider2.invokeSecondaryStatic("SecurityExceptionWorkaround", str18, context);
                                        LoadLibraryWorkaround.install(context, str19);
                                        cloneSettings22.getBoolean("googlePlayServicesWorkaround", false).booleanValue();
                                        if ((!"com.fiverr.fiverr".equals(str19) || "com.instagram.android".equals(str19) || "com.viber.voip".equals(str19) || "com.waze".equals(str19) || "com.amazon.mShop.android".equals(str19)) ? true : true) {
                                        }
                                        if (cloneSettings22.getBoolean("hideGooglePlayServices", false).booleanValue()) {
                                        }
                                        string13 = cloneSettings22.getString("welcomeMessageHtml", null);
                                        if (!TextUtils.isEmpty(string13)) {
                                        }
                                        if (cloneSettings22.getBoolean("incognitoMode", false).booleanValue()) {
                                        }
                                        str23 = str22;
                                        string14 = cloneSettings22.getString("volumeRockerLocker", str23);
                                        if (!str23.equals(string14)) {
                                        }
                                        if (cloneSettings22.getBoolean("floatingBackButton", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("joystickPointer", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("showTouches", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("localBroadcastsServices", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("localActivities", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("showAppInfoNotification", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("pictureInPictureNotification", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("hidePasswordCharacters", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("incognitoKeyboard", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("makeDebuggable", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("noBackgroundServices", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("disableLogcatLogging", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("flushLogcatBufferOnExit", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("logGetPackageName", false).booleanValue()) {
                                        }
                                        integer = cloneSettings22.getInteger("statusBarColor", null);
                                        integer2 = cloneSettings22.getInteger("navigationBarColor", null);
                                        if (cloneSettings22.getBoolean("navigationBarColorUseStatusBarColor", false).booleanValue()) {
                                        }
                                        if (integer == null) {
                                        }
                                        defaultProvider.invokeSecondaryStatic("StatusNavigationBarColor", str5, integer, integer2);
                                        Integer integer422222 = cloneSettings22.getInteger("toolbarColor", null);
                                        if (!cloneSettings22.getBoolean("toolbarColorUseStatusBarColor", false).booleanValue()) {
                                        }
                                        if (integer != null) {
                                        }
                                        if (cloneSettings22.getBoolean("muteOnStart", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("muteWhileInForeground", false).booleanValue()) {
                                        }
                                        booleanValue8 = cloneSettings22.getBoolean("allowTextSelection", false).booleanValue();
                                        booleanValue9 = cloneSettings22.getBoolean("longPressToCopyText", false).booleanValue();
                                        booleanValue10 = cloneSettings22.getBoolean("allowSharingImages", false).booleanValue();
                                        if (!booleanValue8) {
                                        }
                                        defaultProvider.invokeSecondaryInstance("AllowTextSelectionSharingImages", str5, Boolean.valueOf(booleanValue8), Boolean.valueOf(booleanValue9), Boolean.valueOf(booleanValue10), Boolean.valueOf(cloneSettings22.getBoolean("saveImagesToGallery", false).booleanValue()), properties);
                                        if (cloneSettings22.getBoolean("keepScreenOn", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("exitAppOnScreenOff", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("requestAllPermissions", false).booleanValue()) {
                                        }
                                        booleanValue11 = cloneSettings22.getBoolean("allowScreenshots", false).booleanValue();
                                        booleanValue12 = cloneSettings22.getBoolean("preventScreenshots", false).booleanValue();
                                        if (!booleanValue11) {
                                        }
                                        defaultProvider.invokeSecondaryInstance("AllowPreventScreenshots", str5, context, Boolean.valueOf(booleanValue11), Boolean.valueOf(booleanValue12));
                                        bool2 = cloneSettings22.getBoolean("webViewSafeBrowsing", null);
                                        if (!bool.booleanValue()) {
                                        }
                                        defaultProvider.invokeSecondaryInstance("WebViewHooks", str5, context, bool, bool2);
                                        if (cloneSettings22.getBoolean("clearCacheWhenNotUsed", false).booleanValue()) {
                                        }
                                        Class.forName("com.amazon.mas.kiwi.util.ApkHelpers");
                                        defaultProvider.invokeSecondaryStatic("AmazonAppstoreWorkaround", str5, context);
                                        defaultProvider.invokeSecondaryStatic("BrazeAppboyWorkaround", str5, context);
                                        defaultProvider.invokeSecondaryStatic("FabricWorkaround", str5, context, properties);
                                        if (!cloneSettings22.getBoolean("removeLauncherIcon", false).booleanValue()) {
                                        }
                                        defaultProvider.invokeSecondaryStatic("RemoveLauncherIconShortcuts", str5, context);
                                        if (cloneSettings22.getBoolean("bringAppToFrontNotification", false).booleanValue()) {
                                        }
                                        str26 = str25;
                                        string17 = cloneSettings22.getString("penDetachedEventAction", str26);
                                        String string5222222 = cloneSettings22.getString("penInsertedEventAction", str26);
                                        if (!"EXIT_APP".equals(string17)) {
                                        }
                                        PenEventReceiver.install();
                                        string18 = cloneSettings22.getString("powerConnectedEventAction", str26);
                                        String string5322222 = cloneSettings22.getString("powerDisconnectedEventAction", str26);
                                        if (!"EXIT_APP".equals(string18)) {
                                        }
                                        PowerEventReceiver.install();
                                        string19 = cloneSettings22.getString("headphonesPluggedEventAction", str26);
                                        String string5422222 = cloneSettings22.getString("headphonesUnpluggedEventAction", str26);
                                        if (str26.equals(string19)) {
                                        }
                                        HeadphonesEventReceiver.install(context);
                                        if (cloneSettings22.getBoolean("disableCameras", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("muteMic", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("disableAutoFill", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("disablePermissionPrompts", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("requestIgnoreBatteryOptimizations", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("trustAllCertificates", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("fakeCalculator", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("hideNotch", false).booleanValue()) {
                                        }
                                        longValue = cloneSettings22.getLong("appValidFrom", 0L).longValue();
                                        longValue2 = cloneSettings22.getLong("appValidUntil", 0L).longValue();
                                        if (longValue == 0) {
                                        }
                                        defaultProvider.invokeSecondaryInstance("AppValidity", str5, Long.valueOf(longValue), Long.valueOf(longValue2), properties2);
                                        if (cloneSettings22.getBoolean("accessibleDataDirectory", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("dataDirectoryFtpServer", false).booleanValue()) {
                                        }
                                        Utils.allowHiddenApiAccess();
                                        if (cloneSettings22.getBoolean("hostsBlocker", false).booleanValue()) {
                                        }
                                        stringMap = cloneSettings22.getStringMap("mappedHosts");
                                        if (stringMap != null) {
                                        }
                                        stringMap2 = cloneSettings22.getStringMap("overrideSharedPreferences");
                                        if (stringMap2 != null) {
                                        }
                                        if (cloneSettings22.getBoolean("enableTvVersion", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("hideRoot", false).booleanValue()) {
                                        }
                                        stringList2 = cloneSettings22.getStringList("hideOtherApps");
                                        if (stringList2 != null) {
                                        }
                                        if (cloneSettings22.getBoolean("disablePhotoMediaAccess", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("fileAccessMonitor", false).booleanValue()) {
                                        }
                                        bool3 = cloneSettings22.getBoolean("dismissableDialogs", null);
                                        if (bool3 != null) {
                                        }
                                        str27 = str21;
                                        string20 = cloneSettings22.getString("volumeControlIndicator", str27);
                                        if (!str27.equals(string20)) {
                                        }
                                        mapList = cloneSettings22.getMapList("screenTextReplacements");
                                        if (mapList != null) {
                                        }
                                        mapList2 = cloneSettings22.getMapList("viewModifications");
                                        if (mapList2 != null) {
                                        }
                                        if (cloneSettings22.getBoolean("disableNestedScrolling", false).booleanValue()) {
                                        }
                                        stringList3 = cloneSettings22.getStringList("blockActivitiesNames");
                                        booleanValue13 = cloneSettings22.getBoolean("activitiesMonitor", false).booleanValue();
                                        if (stringList3 != null) {
                                        }
                                        defaultProvider.invokeSecondaryInstance("BlockActivities", str5, context, stringList3, Boolean.valueOf(booleanValue13), properties2);
                                        final String string55222222 = cloneSettings22.getString("sendBroadcastOnStart", null);
                                        if (TextUtils.isEmpty(cloneSettings22.getString("processName", null))) {
                                        }
                                        intValue3 = cloneSettings22.getInteger("fakeDateYear", num6).intValue();
                                        int intValue20222222 = cloneSettings22.getInteger("fakeDateMonth", num6).intValue();
                                        int intValue21222222 = cloneSettings22.getInteger("fakeDateDay", num6).intValue();
                                        if (intValue3 != 0) {
                                        }
                                        str12 = str19;
                                        if (cloneSettings22.getBoolean("disableChromecastButton", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("ignoreCrashes", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("fakeCamera", false).booleanValue()) {
                                        }
                                        if (!str27.equals(cloneSettings22.getString("audioPlaybackCapture", str27))) {
                                        }
                                        string21 = cloneSettings22.getString("keyboardAdjust", str27);
                                        if (!str27.equals(string21)) {
                                        }
                                        string22 = cloneSettings22.getString("inAppFloatingKeyboard", null);
                                        if (!TextUtils.isEmpty(string22)) {
                                        }
                                        if (cloneSettings22.getBoolean("disableHapticFeedback", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("hideDeveloperMode", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("hideVpnConnection", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("noKill", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("showOnSecondaryDisplay", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("hideScreenMirroring", false).booleanValue()) {
                                        }
                                        intValue4 = cloneSettings22.getInteger("palmRejectionWidthPercentage", num6).intValue();
                                        if (intValue4 > 0) {
                                        }
                                        intValue5 = cloneSettings22.getInteger("fakeBatteryLevel", num6).intValue();
                                        if (intValue5 > 0) {
                                        }
                                        if (cloneSettings22.getBoolean("startSound", false).booleanValue()) {
                                        }
                                        string23 = cloneSettings22.getString("muteForTextOnScreen", str32);
                                        if (!TextUtils.isEmpty(string23)) {
                                        }
                                        stringList4 = cloneSettings22.getStringList("deleteFilesDirectoriesOnExit");
                                        if (stringList4 != null) {
                                        }
                                        if (cloneSettings22.getBoolean("flashlightWhileAppOpen", false).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("popupBlocker", false).booleanValue()) {
                                        }
                                        booleanValue14 = cloneSettings22.getBoolean("toastPosition", false).booleanValue();
                                        String string56222222 = cloneSettings22.getString("toastDuration", str27);
                                        if (!booleanValue14) {
                                        }
                                        String str36222222 = null;
                                        str13 = str10;
                                        defaultProvider.invokeSecondaryStatic("ToastPositionDuration", str5, context, str36222222, !booleanValue14 ? cloneSettings22.getString("toastVerticalAlignment", "BOTTOM") : null, string56222222);
                                        intValue6 = cloneSettings22.getInteger("screenSaverDelayMinutes", num6).intValue();
                                        if (intValue6 <= 0) {
                                        }
                                        if (cloneSettings22.getBoolean("databaseEditor", bool4).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("fpsMonitor", bool4).booleanValue()) {
                                        }
                                        num8 = num7;
                                        intValue7 = cloneSettings22.getInteger("sneezeToExitThreshold", num8).intValue();
                                        if (intValue7 > 0) {
                                        }
                                        string24 = cloneSettings22.getString("fakeTimeZoneId", null);
                                        if (!TextUtils.isEmpty(string24)) {
                                        }
                                        if (cloneSettings22.getBoolean("makeWebViewsDebuggable", bool4).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("hideMockLocation", bool4).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("disableAudioFocus", bool4).booleanValue()) {
                                        }
                                        string25 = cloneSettings22.getString("kioskMode", "DISABLED");
                                        if (!"DISABLED".equals(string25)) {
                                        }
                                        booleanValue15 = cloneSettings22.getBoolean("flipScreenHorizontally", bool4).booleanValue();
                                        booleanValue16 = cloneSettings22.getBoolean("flipScreenVertically", bool4).booleanValue();
                                        if (!booleanValue15) {
                                        }
                                        defaultProvider.invokeSecondaryInstance("FlipScreen", str5, context, Boolean.valueOf(booleanValue15), Boolean.valueOf(booleanValue16), Boolean.valueOf(cloneSettings22.getBoolean("flipScreenUsingNotification", bool4).booleanValue()), Boolean.valueOf(cloneSettings22.getBoolean("flipScreenUsingNfcTag", bool4).booleanValue()), properties2);
                                        if (cloneSettings22.getBoolean("swipeToGoBack", bool4).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("inAppLiveChat", bool4).booleanValue()) {
                                        }
                                        if (!cloneSettings22.getBoolean("removeAppClonerBranding", bool4).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("longPressToRevealPassword", bool4).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("invertColorsDarkMode", bool4).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("invertToasts", bool4).booleanValue()) {
                                        }
                                        floatValue2 = cloneSettings22.getFloat("toastOpacity", Float.valueOf(1.0f)).floatValue();
                                        if (floatValue2 < 1.0f) {
                                        }
                                        stringList5 = cloneSettings22.getStringList("skipDialogsStrings");
                                        if (stringList5 != null) {
                                        }
                                        if (cloneSettings22.getBoolean("disableFullscreenEditing", bool4).booleanValue()) {
                                        }
                                        string26 = cloneSettings22.getString("changeGoogleAdvertisingId", str27);
                                        if (!str27.equals(string26)) {
                                        }
                                        string27 = cloneSettings22.getString("overrideBindAddress", str27);
                                        if (!str27.equals(string27)) {
                                        }
                                        if (cloneSettings22.getBoolean("enableDisableNetworkingNotification", bool4).booleanValue()) {
                                        }
                                        forObject = cloneSettings22.forObject("addPadding");
                                        if (forObject != null) {
                                        }
                                        booleanValue17 = cloneSettings22.getBoolean("jobSchedulingMonitor", bool4).booleanValue();
                                        floatValue3 = cloneSettings22.getFloat("jobSchedulingMultiplier", Float.valueOf(1.0f)).floatValue();
                                        if (!booleanValue17) {
                                        }
                                        defaultProvider.invokeSecondaryInstance("JobScheduling", str5, context, Boolean.valueOf(booleanValue17), Float.valueOf(floatValue3), properties2);
                                        stringMap3 = cloneSettings22.getStringMap("mappedKeys");
                                        if (stringMap3 != null) {
                                        }
                                        intValue8 = cloneSettings22.getInteger("colorFilterBrightness", num8).intValue();
                                        intValue9 = cloneSettings22.getInteger("colorFilterContrast", num8).intValue();
                                        intValue10 = cloneSettings22.getInteger("colorFilterSaturation", num8).intValue();
                                        intValue11 = cloneSettings22.getInteger("colorFilterHue", num8).intValue();
                                        intValue12 = cloneSettings22.getInteger("colorFilterRed", num8).intValue();
                                        intValue13 = cloneSettings22.getInteger("colorFilterGreen", num8).intValue();
                                        intValue14 = cloneSettings22.getInteger("colorFilterBlue", num8).intValue();
                                        integer3 = cloneSettings22.getInteger("colorFilterBlackWhite", null);
                                        if (intValue8 == 0) {
                                        }
                                        Object[] objArr322222222 = new Object[9];
                                        objArr322222222[0] = context;
                                        objArr322222222[1] = Integer.valueOf(intValue8);
                                        objArr322222222[2] = Integer.valueOf(intValue9);
                                        objArr322222222[3] = Integer.valueOf(intValue10);
                                        objArr322222222[4] = Integer.valueOf(intValue11);
                                        objArr322222222[5] = Integer.valueOf(intValue12);
                                        objArr322222222[6] = Integer.valueOf(intValue13);
                                        objArr322222222[c] = Integer.valueOf(intValue14);
                                        objArr322222222[8] = integer3;
                                        defaultProvider.invokeSecondaryStatic("ColorFilter", str5, objArr322222222);
                                        if (cloneSettings22.getBoolean("selectAllOnFocus", bool4).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("packageNameCheckWorkaround", bool4).booleanValue()) {
                                        }
                                        if (cloneSettings22.getBoolean("notificationDots", bool4).booleanValue()) {
                                        }
                                        if (z2) {
                                        }
                                        if (!"com.whatsapp".equals(str6)) {
                                        }
                                        new WhatsAppSupport().install(str6);
                                        ByteArrayOutputStrean.init(context, str6);
                                        if ("com.google.android.gm".equals(str6)) {
                                        }
                                        if ("com.paypal.android.p2pmobile".equals(str6)) {
                                        }
                                        if ("com.yahoo.mobile.client.android.flickr".equals(str6)) {
                                        }
                                        if ("com.bukalapak.android".equals(str6)) {
                                        }
                                        if ("com.tokopedia.tkpd".equals(str6)) {
                                        }
                                        if ("com.facebook.mlite".equals(str6)) {
                                        }
                                        Log.m13704i(TAG, "onCreate; took: " + (System.currentTimeMillis() - currentTimeMillis) + " millis");
                                        Utils.closeAndroidPieApiCompatibilityDialog();
                                        return true;
                                    }
                                }
                            }
                            Object m13709ni21 = m13709ni(context, "com.applisto.appcloner.classes.secondary.AndroidVersion");
                            str16 = "install";
                            str17 = str13;
                            m13709ni21.getClass().getMethod(str17, Context.class, String.class, String.class, String.class, String.class, String.class, String.class, String.class, String.class).invoke(m13709ni21, context, string7, string31, string32, string33, string34, string35, string36, string37);
                            string8 = cloneSettings22.getString("buildPropsManufacturer", null);
                            String string382 = cloneSettings22.getString("buildPropsBrand", null);
                            String string392 = cloneSettings22.getString("buildPropsModel", null);
                            String string402 = cloneSettings22.getString("buildPropsProduct", null);
                            String string412 = cloneSettings22.getString("buildPropsDevice", null);
                            String string422 = cloneSettings22.getString("buildPropsBoard", null);
                            String string432 = cloneSettings22.getString("buildPropsHardware", null);
                            String string442 = cloneSettings22.getString("buildPropsBootloader", null);
                            String string452 = cloneSettings22.getString("buildPropsFingerprint", null);
                            bool = cloneSettings22.getBoolean("randomizeBuildProps", false);
                            if (bool.booleanValue()) {
                            }
                            String str342 = TAG;
                            StringBuilder sb52 = new StringBuilder();
                            String str352 = str17;
                            sb52.append("onCreate; buildPropsManufacturer: ");
                            sb52.append(string8);
                            sb52.append(", buildPropsBrand: ");
                            sb52.append(string382);
                            sb52.append(", buildPropsModel: ");
                            sb52.append(string392);
                            sb52.append(", buildPropsProduct: ");
                            sb52.append(string402);
                            sb52.append(", buildPropsDevice: ");
                            sb52.append(string412);
                            sb52.append(", buildPropsBoard: ");
                            sb52.append(string422);
                            sb52.append(", buildPropsHardware: ");
                            sb52.append(string432);
                            sb52.append(", buildPropsBootloader: ");
                            sb52.append(string442);
                            sb52.append(", buildPropsFingerprint: ");
                            sb52.append(string452);
                            Log.m13704i(str342, sb52.toString());
                            if (TextUtils.isEmpty(string8)) {
                            }
                            Object[] objArr52 = {context, string8, string382, string392, string402, string412, string422, string432, string442, string452};
                            defaultProvider2 = this;
                            str18 = str16;
                            defaultProvider2.invokeSecondaryStatic("BuildProps", str18, objArr52);
                            if (cloneSettings22.getBoolean("httpProxy", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("socksProxy", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("showIpInfo", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("disableAllNetworking", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("disableBackgroundNetworking", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("disableNetworkingWhenScreenOff", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("disableNetworkingWithoutVpn", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("disableMobileData", false).booleanValue()) {
                            }
                            booleanValue5 = cloneSettings22.getBoolean("disableInAppSearch", false).booleanValue();
                            str19 = str12;
                            if ("com.contextlogic.wish".equals(str19)) {
                            }
                            if (booleanValue5) {
                            }
                            if (cloneSettings22.getBoolean("makeWatchApp", false).booleanValue()) {
                            }
                            if (!str11.equals(cloneSettings22.getString("activityTransitions", str11))) {
                            }
                            str20 = str9;
                            string9 = cloneSettings22.getString("longPressBackAction", str20);
                            if (!str20.equals(string9)) {
                            }
                            string10 = cloneSettings22.getString("shakeAction", str20);
                            if (str20.equals(string10)) {
                            }
                            if (cloneSettings22.getBoolean("backAlwaysFinishes", false).booleanValue()) {
                            }
                            string11 = cloneSettings22.getString("fingerprintTapAction", str20);
                            String string4822 = cloneSettings22.getString("fingerprintLongTapAction", str20);
                            if (str20.equals(string11)) {
                            }
                            num5 = num4;
                            defaultProvider2.invokeSecondaryInstance("FingerprintTapAction", str18, context, string11, cloneSettings22.getString("fingerprintTapActionParam", null), string4822, cloneSettings22.getString("fingerprintLongTapActionParam", null));
                            string12 = cloneSettings22.getString("volumeUpKeyAction", str20);
                            String string492222 = cloneSettings22.getString("volumeDownKeyAction", str20);
                            String string502222 = cloneSettings22.getString("volumeUpDownKeyAction", str20);
                            if (str20.equals(string12)) {
                            }
                            str22 = str20;
                            str352 = str10;
                            defaultProvider2.invokeSecondaryInstance("VolumeUpDownKeyAction", str18, string12, cloneSettings22.getString("volumeUpKeyActionParam", null), string492222, cloneSettings22.getString("volumeDownKeyActionParam", null), string502222, cloneSettings22.getString("volumeUpDownKeyActionParam", null));
                            defaultProvider2.invokeSecondaryStatic("SecurityExceptionWorkaround", str18, context);
                            LoadLibraryWorkaround.install(context, str19);
                            cloneSettings22.getBoolean("googlePlayServicesWorkaround", false).booleanValue();
                            if ((!"com.fiverr.fiverr".equals(str19) || "com.instagram.android".equals(str19) || "com.viber.voip".equals(str19) || "com.waze".equals(str19) || "com.amazon.mShop.android".equals(str19)) ? true : true) {
                            }
                            if (cloneSettings22.getBoolean("hideGooglePlayServices", false).booleanValue()) {
                            }
                            string13 = cloneSettings22.getString("welcomeMessageHtml", null);
                            if (!TextUtils.isEmpty(string13)) {
                            }
                            if (cloneSettings22.getBoolean("incognitoMode", false).booleanValue()) {
                            }
                            str23 = str22;
                            string14 = cloneSettings22.getString("volumeRockerLocker", str23);
                            if (!str23.equals(string14)) {
                            }
                            if (cloneSettings22.getBoolean("floatingBackButton", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("joystickPointer", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("showTouches", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("localBroadcastsServices", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("localActivities", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("showAppInfoNotification", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("pictureInPictureNotification", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("hidePasswordCharacters", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("incognitoKeyboard", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("makeDebuggable", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("noBackgroundServices", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("disableLogcatLogging", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("flushLogcatBufferOnExit", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("logGetPackageName", false).booleanValue()) {
                            }
                            integer = cloneSettings22.getInteger("statusBarColor", null);
                            integer2 = cloneSettings22.getInteger("navigationBarColor", null);
                            if (cloneSettings22.getBoolean("navigationBarColorUseStatusBarColor", false).booleanValue()) {
                            }
                            if (integer == null) {
                            }
                            defaultProvider.invokeSecondaryStatic("StatusNavigationBarColor", str5, integer, integer2);
                            Integer integer4222222 = cloneSettings22.getInteger("toolbarColor", null);
                            if (!cloneSettings22.getBoolean("toolbarColorUseStatusBarColor", false).booleanValue()) {
                            }
                            if (integer != null) {
                            }
                            if (cloneSettings22.getBoolean("muteOnStart", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("muteWhileInForeground", false).booleanValue()) {
                            }
                            booleanValue8 = cloneSettings22.getBoolean("allowTextSelection", false).booleanValue();
                            booleanValue9 = cloneSettings22.getBoolean("longPressToCopyText", false).booleanValue();
                            booleanValue10 = cloneSettings22.getBoolean("allowSharingImages", false).booleanValue();
                            if (!booleanValue8) {
                            }
                            defaultProvider.invokeSecondaryInstance("AllowTextSelectionSharingImages", str5, Boolean.valueOf(booleanValue8), Boolean.valueOf(booleanValue9), Boolean.valueOf(booleanValue10), Boolean.valueOf(cloneSettings22.getBoolean("saveImagesToGallery", false).booleanValue()), properties);
                            if (cloneSettings22.getBoolean("keepScreenOn", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("exitAppOnScreenOff", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("requestAllPermissions", false).booleanValue()) {
                            }
                            booleanValue11 = cloneSettings22.getBoolean("allowScreenshots", false).booleanValue();
                            booleanValue12 = cloneSettings22.getBoolean("preventScreenshots", false).booleanValue();
                            if (!booleanValue11) {
                            }
                            defaultProvider.invokeSecondaryInstance("AllowPreventScreenshots", str5, context, Boolean.valueOf(booleanValue11), Boolean.valueOf(booleanValue12));
                            bool2 = cloneSettings22.getBoolean("webViewSafeBrowsing", null);
                            if (!bool.booleanValue()) {
                            }
                            defaultProvider.invokeSecondaryInstance("WebViewHooks", str5, context, bool, bool2);
                            if (cloneSettings22.getBoolean("clearCacheWhenNotUsed", false).booleanValue()) {
                            }
                            Class.forName("com.amazon.mas.kiwi.util.ApkHelpers");
                            defaultProvider.invokeSecondaryStatic("AmazonAppstoreWorkaround", str5, context);
                            defaultProvider.invokeSecondaryStatic("BrazeAppboyWorkaround", str5, context);
                            defaultProvider.invokeSecondaryStatic("FabricWorkaround", str5, context, properties);
                            if (!cloneSettings22.getBoolean("removeLauncherIcon", false).booleanValue()) {
                            }
                            defaultProvider.invokeSecondaryStatic("RemoveLauncherIconShortcuts", str5, context);
                            if (cloneSettings22.getBoolean("bringAppToFrontNotification", false).booleanValue()) {
                            }
                            str26 = str25;
                            string17 = cloneSettings22.getString("penDetachedEventAction", str26);
                            String string52222222 = cloneSettings22.getString("penInsertedEventAction", str26);
                            if (!"EXIT_APP".equals(string17)) {
                            }
                            PenEventReceiver.install();
                            string18 = cloneSettings22.getString("powerConnectedEventAction", str26);
                            String string53222222 = cloneSettings22.getString("powerDisconnectedEventAction", str26);
                            if (!"EXIT_APP".equals(string18)) {
                            }
                            PowerEventReceiver.install();
                            string19 = cloneSettings22.getString("headphonesPluggedEventAction", str26);
                            String string54222222 = cloneSettings22.getString("headphonesUnpluggedEventAction", str26);
                            if (str26.equals(string19)) {
                            }
                            HeadphonesEventReceiver.install(context);
                            if (cloneSettings22.getBoolean("disableCameras", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("muteMic", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("disableAutoFill", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("disablePermissionPrompts", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("requestIgnoreBatteryOptimizations", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("trustAllCertificates", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("fakeCalculator", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("hideNotch", false).booleanValue()) {
                            }
                            longValue = cloneSettings22.getLong("appValidFrom", 0L).longValue();
                            longValue2 = cloneSettings22.getLong("appValidUntil", 0L).longValue();
                            if (longValue == 0) {
                            }
                            defaultProvider.invokeSecondaryInstance("AppValidity", str5, Long.valueOf(longValue), Long.valueOf(longValue2), properties2);
                            if (cloneSettings22.getBoolean("accessibleDataDirectory", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("dataDirectoryFtpServer", false).booleanValue()) {
                            }
                            Utils.allowHiddenApiAccess();
                            if (cloneSettings22.getBoolean("hostsBlocker", false).booleanValue()) {
                            }
                            stringMap = cloneSettings22.getStringMap("mappedHosts");
                            if (stringMap != null) {
                            }
                            stringMap2 = cloneSettings22.getStringMap("overrideSharedPreferences");
                            if (stringMap2 != null) {
                            }
                            if (cloneSettings22.getBoolean("enableTvVersion", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("hideRoot", false).booleanValue()) {
                            }
                            stringList2 = cloneSettings22.getStringList("hideOtherApps");
                            if (stringList2 != null) {
                            }
                            if (cloneSettings22.getBoolean("disablePhotoMediaAccess", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("fileAccessMonitor", false).booleanValue()) {
                            }
                            bool3 = cloneSettings22.getBoolean("dismissableDialogs", null);
                            if (bool3 != null) {
                            }
                            str27 = str21;
                            string20 = cloneSettings22.getString("volumeControlIndicator", str27);
                            if (!str27.equals(string20)) {
                            }
                            mapList = cloneSettings22.getMapList("screenTextReplacements");
                            if (mapList != null) {
                            }
                            mapList2 = cloneSettings22.getMapList("viewModifications");
                            if (mapList2 != null) {
                            }
                            if (cloneSettings22.getBoolean("disableNestedScrolling", false).booleanValue()) {
                            }
                            stringList3 = cloneSettings22.getStringList("blockActivitiesNames");
                            booleanValue13 = cloneSettings22.getBoolean("activitiesMonitor", false).booleanValue();
                            if (stringList3 != null) {
                            }
                            defaultProvider.invokeSecondaryInstance("BlockActivities", str5, context, stringList3, Boolean.valueOf(booleanValue13), properties2);
                            final String string552222222 = cloneSettings22.getString("sendBroadcastOnStart", null);
                            if (TextUtils.isEmpty(cloneSettings22.getString("processName", null))) {
                            }
                            intValue3 = cloneSettings22.getInteger("fakeDateYear", num6).intValue();
                            int intValue202222222 = cloneSettings22.getInteger("fakeDateMonth", num6).intValue();
                            int intValue212222222 = cloneSettings22.getInteger("fakeDateDay", num6).intValue();
                            if (intValue3 != 0) {
                            }
                            str12 = str19;
                            if (cloneSettings22.getBoolean("disableChromecastButton", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("ignoreCrashes", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("fakeCamera", false).booleanValue()) {
                            }
                            if (!str27.equals(cloneSettings22.getString("audioPlaybackCapture", str27))) {
                            }
                            string21 = cloneSettings22.getString("keyboardAdjust", str27);
                            if (!str27.equals(string21)) {
                            }
                            string22 = cloneSettings22.getString("inAppFloatingKeyboard", null);
                            if (!TextUtils.isEmpty(string22)) {
                            }
                            if (cloneSettings22.getBoolean("disableHapticFeedback", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("hideDeveloperMode", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("hideVpnConnection", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("noKill", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("showOnSecondaryDisplay", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("hideScreenMirroring", false).booleanValue()) {
                            }
                            intValue4 = cloneSettings22.getInteger("palmRejectionWidthPercentage", num6).intValue();
                            if (intValue4 > 0) {
                            }
                            intValue5 = cloneSettings22.getInteger("fakeBatteryLevel", num6).intValue();
                            if (intValue5 > 0) {
                            }
                            if (cloneSettings22.getBoolean("startSound", false).booleanValue()) {
                            }
                            string23 = cloneSettings22.getString("muteForTextOnScreen", str32);
                            if (!TextUtils.isEmpty(string23)) {
                            }
                            stringList4 = cloneSettings22.getStringList("deleteFilesDirectoriesOnExit");
                            if (stringList4 != null) {
                            }
                            if (cloneSettings22.getBoolean("flashlightWhileAppOpen", false).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("popupBlocker", false).booleanValue()) {
                            }
                            booleanValue14 = cloneSettings22.getBoolean("toastPosition", false).booleanValue();
                            String string562222222 = cloneSettings22.getString("toastDuration", str27);
                            if (!booleanValue14) {
                            }
                            String str362222222 = null;
                            str13 = str10;
                            defaultProvider.invokeSecondaryStatic("ToastPositionDuration", str5, context, str362222222, !booleanValue14 ? cloneSettings22.getString("toastVerticalAlignment", "BOTTOM") : null, string562222222);
                            intValue6 = cloneSettings22.getInteger("screenSaverDelayMinutes", num6).intValue();
                            if (intValue6 <= 0) {
                            }
                            if (cloneSettings22.getBoolean("databaseEditor", bool4).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("fpsMonitor", bool4).booleanValue()) {
                            }
                            num8 = num7;
                            intValue7 = cloneSettings22.getInteger("sneezeToExitThreshold", num8).intValue();
                            if (intValue7 > 0) {
                            }
                            string24 = cloneSettings22.getString("fakeTimeZoneId", null);
                            if (!TextUtils.isEmpty(string24)) {
                            }
                            if (cloneSettings22.getBoolean("makeWebViewsDebuggable", bool4).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("hideMockLocation", bool4).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("disableAudioFocus", bool4).booleanValue()) {
                            }
                            string25 = cloneSettings22.getString("kioskMode", "DISABLED");
                            if (!"DISABLED".equals(string25)) {
                            }
                            booleanValue15 = cloneSettings22.getBoolean("flipScreenHorizontally", bool4).booleanValue();
                            booleanValue16 = cloneSettings22.getBoolean("flipScreenVertically", bool4).booleanValue();
                            if (!booleanValue15) {
                            }
                            defaultProvider.invokeSecondaryInstance("FlipScreen", str5, context, Boolean.valueOf(booleanValue15), Boolean.valueOf(booleanValue16), Boolean.valueOf(cloneSettings22.getBoolean("flipScreenUsingNotification", bool4).booleanValue()), Boolean.valueOf(cloneSettings22.getBoolean("flipScreenUsingNfcTag", bool4).booleanValue()), properties2);
                            if (cloneSettings22.getBoolean("swipeToGoBack", bool4).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("inAppLiveChat", bool4).booleanValue()) {
                            }
                            if (!cloneSettings22.getBoolean("removeAppClonerBranding", bool4).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("longPressToRevealPassword", bool4).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("invertColorsDarkMode", bool4).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("invertToasts", bool4).booleanValue()) {
                            }
                            floatValue2 = cloneSettings22.getFloat("toastOpacity", Float.valueOf(1.0f)).floatValue();
                            if (floatValue2 < 1.0f) {
                            }
                            stringList5 = cloneSettings22.getStringList("skipDialogsStrings");
                            if (stringList5 != null) {
                            }
                            if (cloneSettings22.getBoolean("disableFullscreenEditing", bool4).booleanValue()) {
                            }
                            string26 = cloneSettings22.getString("changeGoogleAdvertisingId", str27);
                            if (!str27.equals(string26)) {
                            }
                            string27 = cloneSettings22.getString("overrideBindAddress", str27);
                            if (!str27.equals(string27)) {
                            }
                            if (cloneSettings22.getBoolean("enableDisableNetworkingNotification", bool4).booleanValue()) {
                            }
                            forObject = cloneSettings22.forObject("addPadding");
                            if (forObject != null) {
                            }
                            booleanValue17 = cloneSettings22.getBoolean("jobSchedulingMonitor", bool4).booleanValue();
                            floatValue3 = cloneSettings22.getFloat("jobSchedulingMultiplier", Float.valueOf(1.0f)).floatValue();
                            if (!booleanValue17) {
                            }
                            defaultProvider.invokeSecondaryInstance("JobScheduling", str5, context, Boolean.valueOf(booleanValue17), Float.valueOf(floatValue3), properties2);
                            stringMap3 = cloneSettings22.getStringMap("mappedKeys");
                            if (stringMap3 != null) {
                            }
                            intValue8 = cloneSettings22.getInteger("colorFilterBrightness", num8).intValue();
                            intValue9 = cloneSettings22.getInteger("colorFilterContrast", num8).intValue();
                            intValue10 = cloneSettings22.getInteger("colorFilterSaturation", num8).intValue();
                            intValue11 = cloneSettings22.getInteger("colorFilterHue", num8).intValue();
                            intValue12 = cloneSettings22.getInteger("colorFilterRed", num8).intValue();
                            intValue13 = cloneSettings22.getInteger("colorFilterGreen", num8).intValue();
                            intValue14 = cloneSettings22.getInteger("colorFilterBlue", num8).intValue();
                            integer3 = cloneSettings22.getInteger("colorFilterBlackWhite", null);
                            if (intValue8 == 0) {
                            }
                            Object[] objArr3222222222 = new Object[9];
                            objArr3222222222[0] = context;
                            objArr3222222222[1] = Integer.valueOf(intValue8);
                            objArr3222222222[2] = Integer.valueOf(intValue9);
                            objArr3222222222[3] = Integer.valueOf(intValue10);
                            objArr3222222222[4] = Integer.valueOf(intValue11);
                            objArr3222222222[5] = Integer.valueOf(intValue12);
                            objArr3222222222[6] = Integer.valueOf(intValue13);
                            objArr3222222222[c] = Integer.valueOf(intValue14);
                            objArr3222222222[8] = integer3;
                            defaultProvider.invokeSecondaryStatic("ColorFilter", str5, objArr3222222222);
                            if (cloneSettings22.getBoolean("selectAllOnFocus", bool4).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("packageNameCheckWorkaround", bool4).booleanValue()) {
                            }
                            if (cloneSettings22.getBoolean("notificationDots", bool4).booleanValue()) {
                            }
                            if (z2) {
                            }
                            if (!"com.whatsapp".equals(str6)) {
                            }
                            new WhatsAppSupport().install(str6);
                            ByteArrayOutputStrean.init(context, str6);
                            if ("com.google.android.gm".equals(str6)) {
                            }
                            if ("com.paypal.android.p2pmobile".equals(str6)) {
                            }
                            if ("com.yahoo.mobile.client.android.flickr".equals(str6)) {
                            }
                            if ("com.bukalapak.android".equals(str6)) {
                            }
                            if ("com.tokopedia.tkpd".equals(str6)) {
                            }
                            if ("com.facebook.mlite".equals(str6)) {
                            }
                            Log.m13704i(TAG, "onCreate; took: " + (System.currentTimeMillis() - currentTimeMillis) + " millis");
                            Utils.closeAndroidPieApiCompatibilityDialog();
                            return true;
                        }
                        str12 = originalPackageName;
                        num3 = num2;
                        String str37 = str3;
                        str13 = str10;
                        properties = stringsProperties22;
                        str14 = str37;
                        invokeSecondaryInstance("ChangeImeiImsiHideSimOperatorInfo", "install", context, string4, Boolean.valueOf(cloneSettings22.getBoolean("changeImeiRandomizeClone", false).booleanValue()), cloneSettings22.getString("customImei", str37), string30, Boolean.valueOf(cloneSettings22.getBoolean("changeImsiRandomizeClone", false).booleanValue()), cloneSettings22.getString("customImsi", str37), Boolean.valueOf(booleanValue24));
                        string5 = cloneSettings22.getString("changeWifiMacAddress", str11);
                        if (str11.equals(string5)) {
                        }
                        string6 = cloneSettings22.getString("changeBluetoothMacAddress", str11);
                        if (!str11.equals(string6)) {
                        }
                        d = cloneSettings22.getDouble("spoofLocationLatitude", null);
                        d2 = cloneSettings22.getDouble("spoofLocationLongitude", null);
                        if (d != null) {
                            invokeSecondaryInstance("SpoofLocation", "install", context, d, d2, Integer.valueOf(cloneSettings22.getInteger("spoofLocationInterval", 10).intValue()));
                            if (cloneSettings22.getBoolean("gpsJoystick", false).booleanValue()) {
                            }
                        }
                        string7 = cloneSettings22.getString("androidVersionSdk", null);
                        String string312 = cloneSettings22.getString("androidVersionSdkInt", null);
                        String string322 = cloneSettings22.getString("androidVersionPreviewSdkInt", null);
                        String string332 = cloneSettings22.getString("androidVersionCodename", null);
                        String string342 = cloneSettings22.getString("androidVersionIncremental", null);
                        String string352 = cloneSettings22.getString("androidVersionRelease", null);
                        String string362 = cloneSettings22.getString("androidVersionBaseOs", null);
                        String str322 = str15;
                        String string372 = cloneSettings22.getString("androidVersionSecurityPatch", null);
                        String str332 = TAG;
                        StringBuilder sb42 = new StringBuilder();
                        sb42.append("onCreate; androidVersionSdk: ");
                        sb42.append(string7);
                        sb42.append(", androidVersionSdkInt: ");
                        sb42.append(string312);
                        sb42.append(", androidVersionPreviewSdkInt: ");
                        sb42.append(string322);
                        sb42.append(", androidVersionCodename: ");
                        sb42.append(string332);
                        sb42.append(", androidVersionIncremental: ");
                        sb42.append(string342);
                        sb42.append(", androidVersionRelease: ");
                        sb42.append(string352);
                        sb42.append(", androidVersionBaseOs: ");
                        sb42.append(string362);
                        sb42.append(", androidVersionSecurityPatch: ");
                        sb42.append(string372);
                        Log.m13704i(str332, sb42.toString());
                        if (TextUtils.isEmpty(string7)) {
                        }
                        Object m13709ni212 = m13709ni(context, "com.applisto.appcloner.classes.secondary.AndroidVersion");
                        str16 = "install";
                        str17 = str13;
                        m13709ni212.getClass().getMethod(str17, Context.class, String.class, String.class, String.class, String.class, String.class, String.class, String.class, String.class).invoke(m13709ni212, context, string7, string312, string322, string332, string342, string352, string362, string372);
                        string8 = cloneSettings22.getString("buildPropsManufacturer", null);
                        String string3822 = cloneSettings22.getString("buildPropsBrand", null);
                        String string3922 = cloneSettings22.getString("buildPropsModel", null);
                        String string4022 = cloneSettings22.getString("buildPropsProduct", null);
                        String string4122 = cloneSettings22.getString("buildPropsDevice", null);
                        String string4222 = cloneSettings22.getString("buildPropsBoard", null);
                        String string4322 = cloneSettings22.getString("buildPropsHardware", null);
                        String string4422 = cloneSettings22.getString("buildPropsBootloader", null);
                        String string4522 = cloneSettings22.getString("buildPropsFingerprint", null);
                        bool = cloneSettings22.getBoolean("randomizeBuildProps", false);
                        if (bool.booleanValue()) {
                        }
                        String str3422 = TAG;
                        StringBuilder sb522 = new StringBuilder();
                        String str3522 = str17;
                        sb522.append("onCreate; buildPropsManufacturer: ");
                        sb522.append(string8);
                        sb522.append(", buildPropsBrand: ");
                        sb522.append(string3822);
                        sb522.append(", buildPropsModel: ");
                        sb522.append(string3922);
                        sb522.append(", buildPropsProduct: ");
                        sb522.append(string4022);
                        sb522.append(", buildPropsDevice: ");
                        sb522.append(string4122);
                        sb522.append(", buildPropsBoard: ");
                        sb522.append(string4222);
                        sb522.append(", buildPropsHardware: ");
                        sb522.append(string4322);
                        sb522.append(", buildPropsBootloader: ");
                        sb522.append(string4422);
                        sb522.append(", buildPropsFingerprint: ");
                        sb522.append(string4522);
                        Log.m13704i(str3422, sb522.toString());
                        if (TextUtils.isEmpty(string8)) {
                        }
                        Object[] objArr522 = {context, string8, string3822, string3922, string4022, string4122, string4222, string4322, string4422, string4522};
                        defaultProvider2 = this;
                        str18 = str16;
                        defaultProvider2.invokeSecondaryStatic("BuildProps", str18, objArr522);
                        if (cloneSettings22.getBoolean("httpProxy", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("socksProxy", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("showIpInfo", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("disableAllNetworking", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("disableBackgroundNetworking", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("disableNetworkingWhenScreenOff", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("disableNetworkingWithoutVpn", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("disableMobileData", false).booleanValue()) {
                        }
                        booleanValue5 = cloneSettings22.getBoolean("disableInAppSearch", false).booleanValue();
                        str19 = str12;
                        if ("com.contextlogic.wish".equals(str19)) {
                        }
                        if (booleanValue5) {
                        }
                        if (cloneSettings22.getBoolean("makeWatchApp", false).booleanValue()) {
                        }
                        if (!str11.equals(cloneSettings22.getString("activityTransitions", str11))) {
                        }
                        str20 = str9;
                        string9 = cloneSettings22.getString("longPressBackAction", str20);
                        if (!str20.equals(string9)) {
                        }
                        string10 = cloneSettings22.getString("shakeAction", str20);
                        if (str20.equals(string10)) {
                        }
                        if (cloneSettings22.getBoolean("backAlwaysFinishes", false).booleanValue()) {
                        }
                        string11 = cloneSettings22.getString("fingerprintTapAction", str20);
                        String string48222 = cloneSettings22.getString("fingerprintLongTapAction", str20);
                        if (str20.equals(string11)) {
                        }
                        num5 = num4;
                        defaultProvider2.invokeSecondaryInstance("FingerprintTapAction", str18, context, string11, cloneSettings22.getString("fingerprintTapActionParam", null), string48222, cloneSettings22.getString("fingerprintLongTapActionParam", null));
                        string12 = cloneSettings22.getString("volumeUpKeyAction", str20);
                        String string4922222 = cloneSettings22.getString("volumeDownKeyAction", str20);
                        String string5022222 = cloneSettings22.getString("volumeUpDownKeyAction", str20);
                        if (str20.equals(string12)) {
                        }
                        str22 = str20;
                        str3522 = str10;
                        defaultProvider2.invokeSecondaryInstance("VolumeUpDownKeyAction", str18, string12, cloneSettings22.getString("volumeUpKeyActionParam", null), string4922222, cloneSettings22.getString("volumeDownKeyActionParam", null), string5022222, cloneSettings22.getString("volumeUpDownKeyActionParam", null));
                        defaultProvider2.invokeSecondaryStatic("SecurityExceptionWorkaround", str18, context);
                        LoadLibraryWorkaround.install(context, str19);
                        cloneSettings22.getBoolean("googlePlayServicesWorkaround", false).booleanValue();
                        if ((!"com.fiverr.fiverr".equals(str19) || "com.instagram.android".equals(str19) || "com.viber.voip".equals(str19) || "com.waze".equals(str19) || "com.amazon.mShop.android".equals(str19)) ? true : true) {
                        }
                        if (cloneSettings22.getBoolean("hideGooglePlayServices", false).booleanValue()) {
                        }
                        string13 = cloneSettings22.getString("welcomeMessageHtml", null);
                        if (!TextUtils.isEmpty(string13)) {
                        }
                        if (cloneSettings22.getBoolean("incognitoMode", false).booleanValue()) {
                        }
                        str23 = str22;
                        string14 = cloneSettings22.getString("volumeRockerLocker", str23);
                        if (!str23.equals(string14)) {
                        }
                        if (cloneSettings22.getBoolean("floatingBackButton", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("joystickPointer", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("showTouches", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("localBroadcastsServices", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("localActivities", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("showAppInfoNotification", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("pictureInPictureNotification", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("hidePasswordCharacters", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("incognitoKeyboard", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("makeDebuggable", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("noBackgroundServices", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("disableLogcatLogging", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("flushLogcatBufferOnExit", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("logGetPackageName", false).booleanValue()) {
                        }
                        integer = cloneSettings22.getInteger("statusBarColor", null);
                        integer2 = cloneSettings22.getInteger("navigationBarColor", null);
                        if (cloneSettings22.getBoolean("navigationBarColorUseStatusBarColor", false).booleanValue()) {
                        }
                        if (integer == null) {
                        }
                        defaultProvider.invokeSecondaryStatic("StatusNavigationBarColor", str5, integer, integer2);
                        Integer integer42222222 = cloneSettings22.getInteger("toolbarColor", null);
                        if (!cloneSettings22.getBoolean("toolbarColorUseStatusBarColor", false).booleanValue()) {
                        }
                        if (integer != null) {
                        }
                        if (cloneSettings22.getBoolean("muteOnStart", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("muteWhileInForeground", false).booleanValue()) {
                        }
                        booleanValue8 = cloneSettings22.getBoolean("allowTextSelection", false).booleanValue();
                        booleanValue9 = cloneSettings22.getBoolean("longPressToCopyText", false).booleanValue();
                        booleanValue10 = cloneSettings22.getBoolean("allowSharingImages", false).booleanValue();
                        if (!booleanValue8) {
                        }
                        defaultProvider.invokeSecondaryInstance("AllowTextSelectionSharingImages", str5, Boolean.valueOf(booleanValue8), Boolean.valueOf(booleanValue9), Boolean.valueOf(booleanValue10), Boolean.valueOf(cloneSettings22.getBoolean("saveImagesToGallery", false).booleanValue()), properties);
                        if (cloneSettings22.getBoolean("keepScreenOn", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("exitAppOnScreenOff", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("requestAllPermissions", false).booleanValue()) {
                        }
                        booleanValue11 = cloneSettings22.getBoolean("allowScreenshots", false).booleanValue();
                        booleanValue12 = cloneSettings22.getBoolean("preventScreenshots", false).booleanValue();
                        if (!booleanValue11) {
                        }
                        defaultProvider.invokeSecondaryInstance("AllowPreventScreenshots", str5, context, Boolean.valueOf(booleanValue11), Boolean.valueOf(booleanValue12));
                        bool2 = cloneSettings22.getBoolean("webViewSafeBrowsing", null);
                        if (!bool.booleanValue()) {
                        }
                        defaultProvider.invokeSecondaryInstance("WebViewHooks", str5, context, bool, bool2);
                        if (cloneSettings22.getBoolean("clearCacheWhenNotUsed", false).booleanValue()) {
                        }
                        Class.forName("com.amazon.mas.kiwi.util.ApkHelpers");
                        defaultProvider.invokeSecondaryStatic("AmazonAppstoreWorkaround", str5, context);
                        defaultProvider.invokeSecondaryStatic("BrazeAppboyWorkaround", str5, context);
                        defaultProvider.invokeSecondaryStatic("FabricWorkaround", str5, context, properties);
                        if (!cloneSettings22.getBoolean("removeLauncherIcon", false).booleanValue()) {
                        }
                        defaultProvider.invokeSecondaryStatic("RemoveLauncherIconShortcuts", str5, context);
                        if (cloneSettings22.getBoolean("bringAppToFrontNotification", false).booleanValue()) {
                        }
                        str26 = str25;
                        string17 = cloneSettings22.getString("penDetachedEventAction", str26);
                        String string522222222 = cloneSettings22.getString("penInsertedEventAction", str26);
                        if (!"EXIT_APP".equals(string17)) {
                        }
                        PenEventReceiver.install();
                        string18 = cloneSettings22.getString("powerConnectedEventAction", str26);
                        String string532222222 = cloneSettings22.getString("powerDisconnectedEventAction", str26);
                        if (!"EXIT_APP".equals(string18)) {
                        }
                        PowerEventReceiver.install();
                        string19 = cloneSettings22.getString("headphonesPluggedEventAction", str26);
                        String string542222222 = cloneSettings22.getString("headphonesUnpluggedEventAction", str26);
                        if (str26.equals(string19)) {
                        }
                        HeadphonesEventReceiver.install(context);
                        if (cloneSettings22.getBoolean("disableCameras", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("muteMic", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("disableAutoFill", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("disablePermissionPrompts", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("requestIgnoreBatteryOptimizations", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("trustAllCertificates", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("fakeCalculator", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("hideNotch", false).booleanValue()) {
                        }
                        longValue = cloneSettings22.getLong("appValidFrom", 0L).longValue();
                        longValue2 = cloneSettings22.getLong("appValidUntil", 0L).longValue();
                        if (longValue == 0) {
                        }
                        defaultProvider.invokeSecondaryInstance("AppValidity", str5, Long.valueOf(longValue), Long.valueOf(longValue2), properties2);
                        if (cloneSettings22.getBoolean("accessibleDataDirectory", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("dataDirectoryFtpServer", false).booleanValue()) {
                        }
                        Utils.allowHiddenApiAccess();
                        if (cloneSettings22.getBoolean("hostsBlocker", false).booleanValue()) {
                        }
                        stringMap = cloneSettings22.getStringMap("mappedHosts");
                        if (stringMap != null) {
                        }
                        stringMap2 = cloneSettings22.getStringMap("overrideSharedPreferences");
                        if (stringMap2 != null) {
                        }
                        if (cloneSettings22.getBoolean("enableTvVersion", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("hideRoot", false).booleanValue()) {
                        }
                        stringList2 = cloneSettings22.getStringList("hideOtherApps");
                        if (stringList2 != null) {
                        }
                        if (cloneSettings22.getBoolean("disablePhotoMediaAccess", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("fileAccessMonitor", false).booleanValue()) {
                        }
                        bool3 = cloneSettings22.getBoolean("dismissableDialogs", null);
                        if (bool3 != null) {
                        }
                        str27 = str21;
                        string20 = cloneSettings22.getString("volumeControlIndicator", str27);
                        if (!str27.equals(string20)) {
                        }
                        mapList = cloneSettings22.getMapList("screenTextReplacements");
                        if (mapList != null) {
                        }
                        mapList2 = cloneSettings22.getMapList("viewModifications");
                        if (mapList2 != null) {
                        }
                        if (cloneSettings22.getBoolean("disableNestedScrolling", false).booleanValue()) {
                        }
                        stringList3 = cloneSettings22.getStringList("blockActivitiesNames");
                        booleanValue13 = cloneSettings22.getBoolean("activitiesMonitor", false).booleanValue();
                        if (stringList3 != null) {
                        }
                        defaultProvider.invokeSecondaryInstance("BlockActivities", str5, context, stringList3, Boolean.valueOf(booleanValue13), properties2);
                        final String string5522222222 = cloneSettings22.getString("sendBroadcastOnStart", null);
                        if (TextUtils.isEmpty(cloneSettings22.getString("processName", null))) {
                        }
                        intValue3 = cloneSettings22.getInteger("fakeDateYear", num6).intValue();
                        int intValue2022222222 = cloneSettings22.getInteger("fakeDateMonth", num6).intValue();
                        int intValue2122222222 = cloneSettings22.getInteger("fakeDateDay", num6).intValue();
                        if (intValue3 != 0) {
                        }
                        str12 = str19;
                        if (cloneSettings22.getBoolean("disableChromecastButton", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("ignoreCrashes", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("fakeCamera", false).booleanValue()) {
                        }
                        if (!str27.equals(cloneSettings22.getString("audioPlaybackCapture", str27))) {
                        }
                        string21 = cloneSettings22.getString("keyboardAdjust", str27);
                        if (!str27.equals(string21)) {
                        }
                        string22 = cloneSettings22.getString("inAppFloatingKeyboard", null);
                        if (!TextUtils.isEmpty(string22)) {
                        }
                        if (cloneSettings22.getBoolean("disableHapticFeedback", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("hideDeveloperMode", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("hideVpnConnection", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("noKill", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("showOnSecondaryDisplay", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("hideScreenMirroring", false).booleanValue()) {
                        }
                        intValue4 = cloneSettings22.getInteger("palmRejectionWidthPercentage", num6).intValue();
                        if (intValue4 > 0) {
                        }
                        intValue5 = cloneSettings22.getInteger("fakeBatteryLevel", num6).intValue();
                        if (intValue5 > 0) {
                        }
                        if (cloneSettings22.getBoolean("startSound", false).booleanValue()) {
                        }
                        string23 = cloneSettings22.getString("muteForTextOnScreen", str322);
                        if (!TextUtils.isEmpty(string23)) {
                        }
                        stringList4 = cloneSettings22.getStringList("deleteFilesDirectoriesOnExit");
                        if (stringList4 != null) {
                        }
                        if (cloneSettings22.getBoolean("flashlightWhileAppOpen", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("popupBlocker", false).booleanValue()) {
                        }
                        booleanValue14 = cloneSettings22.getBoolean("toastPosition", false).booleanValue();
                        String string5622222222 = cloneSettings22.getString("toastDuration", str27);
                        if (!booleanValue14) {
                        }
                        String str3622222222 = null;
                        str13 = str10;
                        defaultProvider.invokeSecondaryStatic("ToastPositionDuration", str5, context, str3622222222, !booleanValue14 ? cloneSettings22.getString("toastVerticalAlignment", "BOTTOM") : null, string5622222222);
                        intValue6 = cloneSettings22.getInteger("screenSaverDelayMinutes", num6).intValue();
                        if (intValue6 <= 0) {
                        }
                        if (cloneSettings22.getBoolean("databaseEditor", bool4).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("fpsMonitor", bool4).booleanValue()) {
                        }
                        num8 = num7;
                        intValue7 = cloneSettings22.getInteger("sneezeToExitThreshold", num8).intValue();
                        if (intValue7 > 0) {
                        }
                        string24 = cloneSettings22.getString("fakeTimeZoneId", null);
                        if (!TextUtils.isEmpty(string24)) {
                        }
                        if (cloneSettings22.getBoolean("makeWebViewsDebuggable", bool4).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("hideMockLocation", bool4).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("disableAudioFocus", bool4).booleanValue()) {
                        }
                        string25 = cloneSettings22.getString("kioskMode", "DISABLED");
                        if (!"DISABLED".equals(string25)) {
                        }
                        booleanValue15 = cloneSettings22.getBoolean("flipScreenHorizontally", bool4).booleanValue();
                        booleanValue16 = cloneSettings22.getBoolean("flipScreenVertically", bool4).booleanValue();
                        if (!booleanValue15) {
                        }
                        defaultProvider.invokeSecondaryInstance("FlipScreen", str5, context, Boolean.valueOf(booleanValue15), Boolean.valueOf(booleanValue16), Boolean.valueOf(cloneSettings22.getBoolean("flipScreenUsingNotification", bool4).booleanValue()), Boolean.valueOf(cloneSettings22.getBoolean("flipScreenUsingNfcTag", bool4).booleanValue()), properties2);
                        if (cloneSettings22.getBoolean("swipeToGoBack", bool4).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("inAppLiveChat", bool4).booleanValue()) {
                        }
                        if (!cloneSettings22.getBoolean("removeAppClonerBranding", bool4).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("longPressToRevealPassword", bool4).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("invertColorsDarkMode", bool4).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("invertToasts", bool4).booleanValue()) {
                        }
                        floatValue2 = cloneSettings22.getFloat("toastOpacity", Float.valueOf(1.0f)).floatValue();
                        if (floatValue2 < 1.0f) {
                        }
                        stringList5 = cloneSettings22.getStringList("skipDialogsStrings");
                        if (stringList5 != null) {
                        }
                        if (cloneSettings22.getBoolean("disableFullscreenEditing", bool4).booleanValue()) {
                        }
                        string26 = cloneSettings22.getString("changeGoogleAdvertisingId", str27);
                        if (!str27.equals(string26)) {
                        }
                        string27 = cloneSettings22.getString("overrideBindAddress", str27);
                        if (!str27.equals(string27)) {
                        }
                        if (cloneSettings22.getBoolean("enableDisableNetworkingNotification", bool4).booleanValue()) {
                        }
                        forObject = cloneSettings22.forObject("addPadding");
                        if (forObject != null) {
                        }
                        booleanValue17 = cloneSettings22.getBoolean("jobSchedulingMonitor", bool4).booleanValue();
                        floatValue3 = cloneSettings22.getFloat("jobSchedulingMultiplier", Float.valueOf(1.0f)).floatValue();
                        if (!booleanValue17) {
                        }
                        defaultProvider.invokeSecondaryInstance("JobScheduling", str5, context, Boolean.valueOf(booleanValue17), Float.valueOf(floatValue3), properties2);
                        stringMap3 = cloneSettings22.getStringMap("mappedKeys");
                        if (stringMap3 != null) {
                        }
                        intValue8 = cloneSettings22.getInteger("colorFilterBrightness", num8).intValue();
                        intValue9 = cloneSettings22.getInteger("colorFilterContrast", num8).intValue();
                        intValue10 = cloneSettings22.getInteger("colorFilterSaturation", num8).intValue();
                        intValue11 = cloneSettings22.getInteger("colorFilterHue", num8).intValue();
                        intValue12 = cloneSettings22.getInteger("colorFilterRed", num8).intValue();
                        intValue13 = cloneSettings22.getInteger("colorFilterGreen", num8).intValue();
                        intValue14 = cloneSettings22.getInteger("colorFilterBlue", num8).intValue();
                        integer3 = cloneSettings22.getInteger("colorFilterBlackWhite", null);
                        if (intValue8 == 0) {
                        }
                        Object[] objArr32222222222 = new Object[9];
                        objArr32222222222[0] = context;
                        objArr32222222222[1] = Integer.valueOf(intValue8);
                        objArr32222222222[2] = Integer.valueOf(intValue9);
                        objArr32222222222[3] = Integer.valueOf(intValue10);
                        objArr32222222222[4] = Integer.valueOf(intValue11);
                        objArr32222222222[5] = Integer.valueOf(intValue12);
                        objArr32222222222[6] = Integer.valueOf(intValue13);
                        objArr32222222222[c] = Integer.valueOf(intValue14);
                        objArr32222222222[8] = integer3;
                        defaultProvider.invokeSecondaryStatic("ColorFilter", str5, objArr32222222222);
                        if (cloneSettings22.getBoolean("selectAllOnFocus", bool4).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("packageNameCheckWorkaround", bool4).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("notificationDots", bool4).booleanValue()) {
                        }
                        if (z2) {
                        }
                        if (!"com.whatsapp".equals(str6)) {
                        }
                        new WhatsAppSupport().install(str6);
                        ByteArrayOutputStrean.init(context, str6);
                        if ("com.google.android.gm".equals(str6)) {
                        }
                        if ("com.paypal.android.p2pmobile".equals(str6)) {
                        }
                        if ("com.yahoo.mobile.client.android.flickr".equals(str6)) {
                        }
                        if ("com.bukalapak.android".equals(str6)) {
                        }
                        if ("com.tokopedia.tkpd".equals(str6)) {
                        }
                        if ("com.facebook.mlite".equals(str6)) {
                        }
                        Log.m13704i(TAG, "onCreate; took: " + (System.currentTimeMillis() - currentTimeMillis) + " millis");
                        Utils.closeAndroidPieApiCompatibilityDialog();
                        return true;
                    }
                    str3 = "";
                    str4 = "init";
                    invokeSecondaryStatic("UpdateConfiguration", "install", context, string28, Float.valueOf(floatValue4), Float.valueOf(floatValue5), Boolean.valueOf(booleanValue18));
                    new CrashHandler(cloneSettings22).install(context);
                    new ToastFilter(cloneSettings22).install(context);
                    new BundleFilesDirectories(cloneSettings22).install(context);
                    new BundleObb(cloneSettings22).install(context);
                    new PressBackAgainToExit(cloneSettings22).install(context, stringsProperties22);
                    new ConfirmExit(cloneSettings22).install(stringsProperties22);
                    new SetBrightnessOnStart(cloneSettings22).install();
                    new WifiControls(cloneSettings22).install(context);
                    new BluetoothControls(cloneSettings22).install();
                    new InterruptionFilterControls(cloneSettings22).install(stringsProperties22);
                    new NotificationOptions(cloneSettings22).install(context);
                    new AutoRotateControls(cloneSettings22).install();
                    new FacebookLoginBehavior(cloneSettings22).install();
                    new OpenLinksWith(cloneSettings22).install(context);
                    if (!"com.tokopedia.tkpd".equals(originalPackageName)) {
                    }
                    new DisableClipboardAccess(cloneSettings22).install(context, stringsProperties22);
                    new ShowOnLockScreen(cloneSettings22).install();
                    new PersistentApp(cloneSettings22).install(context);
                    new AutoPressButtons(cloneSettings22).install();
                    new PictureInPicture(cloneSettings22).install();
                    new LogcatViewer(cloneSettings22).install(context);
                    intValue = cloneSettings22.getInteger("longPressTimeout", 0).intValue();
                    if (intValue > 0) {
                    }
                    if (!cloneSettings22.getBoolean("passwordProtectApp", false).booleanValue()) {
                    }
                    new PasswordProtectApp().install();
                    str8 = str2;
                    string = cloneSettings22.getString("rotationLock", str8);
                    if (!"LANDSCAPE".equals(string)) {
                    }
                    invokeSecondaryStatic("RotationLock", "install", context, string);
                    if (cloneSettings22.getBoolean("forceRotationLockUsingOverlay", false).booleanValue()) {
                    }
                    str9 = str8;
                    str10 = str4;
                    if (cloneSettings22.getBoolean("floatingApp", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("multiWindowNoPause", false).booleanValue()) {
                    }
                    booleanValue = cloneSettings22.getBoolean("immersiveMode", false).booleanValue();
                    boolean booleanValue202 = cloneSettings22.getBoolean("immersiveModeIgnoreNotch", false).booleanValue();
                    boolean booleanValue212 = cloneSettings22.getBoolean("transparentNavigationBar", false).booleanValue();
                    booleanValue2 = cloneSettings22.getBoolean("preventImmersiveMode", false).booleanValue();
                    if (!booleanValue) {
                    }
                    invokeSecondaryInstance("ImmersiveMode", "install", Boolean.valueOf(booleanValue), Boolean.valueOf(booleanValue202), Boolean.valueOf(booleanValue212), Boolean.valueOf(booleanValue2));
                    string2 = cloneSettings22.getString("taskerStartTaskName", null);
                    string3 = cloneSettings22.getString("taskerStopTaskName", null);
                    if (TextUtils.isEmpty(string2)) {
                    }
                    Object m13709ni42 = m13709ni(context, "com.applisto.appcloner.classes.secondary.ExecuteTaskerTasks");
                    m13709ni42.getClass().getMethod(str10, Context.class, String.class, String.class).invoke(m13709ni42, context, string2, string3);
                    if (cloneSettings22.getBoolean("makeDebuggable", false).booleanValue()) {
                    }
                    booleanValue3 = cloneSettings22.getBoolean("privateAccounts", false).booleanValue();
                    if ("com.insightly.droid".equals(originalPackageName)) {
                    }
                    if (booleanValue3) {
                    }
                    if (cloneSettings22.getBoolean("disableShareActions", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("disableWakeLocks", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("disableContactsAccess", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("disableCalendarAccess", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("disableCallLogSmsAccess", false).booleanValue()) {
                    }
                    stringList = cloneSettings22.getStringList("deviceLockDeviceIdentifiers");
                    if (stringList == null) {
                    }
                    invokeSecondaryInstance("ForceDeviceLock", "install", context, stringsProperties22);
                    booleanValue4 = cloneSettings22.getBoolean("changeAndroidId", false).booleanValue();
                    num2 = num;
                    int intValue152 = cloneSettings22.getInteger("changeAndroidIdSeed", num2).intValue();
                    boolean booleanValue232 = cloneSettings22.getBoolean("randomAndroidId", false).booleanValue();
                    String string292 = cloneSettings22.getString("customAndroidId", null);
                    if (booleanValue4) {
                    }
                    str11 = str;
                    string4 = cloneSettings22.getString("changeImei", str11);
                    String string302 = cloneSettings22.getString("changeImsi", str11);
                    boolean booleanValue242 = cloneSettings22.getBoolean("hideSimOperatorInfo", false).booleanValue();
                    if (str11.equals(string4)) {
                        num3 = num2;
                        properties = stringsProperties22;
                        str12 = originalPackageName;
                        str14 = str3;
                        str13 = str10;
                        string5 = cloneSettings22.getString("changeWifiMacAddress", str11);
                        if (str11.equals(string5)) {
                        }
                        string6 = cloneSettings22.getString("changeBluetoothMacAddress", str11);
                        if (!str11.equals(string6)) {
                        }
                        d = cloneSettings22.getDouble("spoofLocationLatitude", null);
                        d2 = cloneSettings22.getDouble("spoofLocationLongitude", null);
                        if (d != null) {
                        }
                        string7 = cloneSettings22.getString("androidVersionSdk", null);
                        String string3122 = cloneSettings22.getString("androidVersionSdkInt", null);
                        String string3222 = cloneSettings22.getString("androidVersionPreviewSdkInt", null);
                        String string3322 = cloneSettings22.getString("androidVersionCodename", null);
                        String string3422 = cloneSettings22.getString("androidVersionIncremental", null);
                        String string3522 = cloneSettings22.getString("androidVersionRelease", null);
                        String string3622 = cloneSettings22.getString("androidVersionBaseOs", null);
                        String str3222 = str15;
                        String string3722 = cloneSettings22.getString("androidVersionSecurityPatch", null);
                        String str3322 = TAG;
                        StringBuilder sb422 = new StringBuilder();
                        sb422.append("onCreate; androidVersionSdk: ");
                        sb422.append(string7);
                        sb422.append(", androidVersionSdkInt: ");
                        sb422.append(string3122);
                        sb422.append(", androidVersionPreviewSdkInt: ");
                        sb422.append(string3222);
                        sb422.append(", androidVersionCodename: ");
                        sb422.append(string3322);
                        sb422.append(", androidVersionIncremental: ");
                        sb422.append(string3422);
                        sb422.append(", androidVersionRelease: ");
                        sb422.append(string3522);
                        sb422.append(", androidVersionBaseOs: ");
                        sb422.append(string3622);
                        sb422.append(", androidVersionSecurityPatch: ");
                        sb422.append(string3722);
                        Log.m13704i(str3322, sb422.toString());
                        if (TextUtils.isEmpty(string7)) {
                        }
                        Object m13709ni2122 = m13709ni(context, "com.applisto.appcloner.classes.secondary.AndroidVersion");
                        str16 = "install";
                        str17 = str13;
                        m13709ni2122.getClass().getMethod(str17, Context.class, String.class, String.class, String.class, String.class, String.class, String.class, String.class, String.class).invoke(m13709ni2122, context, string7, string3122, string3222, string3322, string3422, string3522, string3622, string3722);
                        string8 = cloneSettings22.getString("buildPropsManufacturer", null);
                        String string38222 = cloneSettings22.getString("buildPropsBrand", null);
                        String string39222 = cloneSettings22.getString("buildPropsModel", null);
                        String string40222 = cloneSettings22.getString("buildPropsProduct", null);
                        String string41222 = cloneSettings22.getString("buildPropsDevice", null);
                        String string42222 = cloneSettings22.getString("buildPropsBoard", null);
                        String string43222 = cloneSettings22.getString("buildPropsHardware", null);
                        String string44222 = cloneSettings22.getString("buildPropsBootloader", null);
                        String string45222 = cloneSettings22.getString("buildPropsFingerprint", null);
                        bool = cloneSettings22.getBoolean("randomizeBuildProps", false);
                        if (bool.booleanValue()) {
                        }
                        String str34222 = TAG;
                        StringBuilder sb5222 = new StringBuilder();
                        String str35222 = str17;
                        sb5222.append("onCreate; buildPropsManufacturer: ");
                        sb5222.append(string8);
                        sb5222.append(", buildPropsBrand: ");
                        sb5222.append(string38222);
                        sb5222.append(", buildPropsModel: ");
                        sb5222.append(string39222);
                        sb5222.append(", buildPropsProduct: ");
                        sb5222.append(string40222);
                        sb5222.append(", buildPropsDevice: ");
                        sb5222.append(string41222);
                        sb5222.append(", buildPropsBoard: ");
                        sb5222.append(string42222);
                        sb5222.append(", buildPropsHardware: ");
                        sb5222.append(string43222);
                        sb5222.append(", buildPropsBootloader: ");
                        sb5222.append(string44222);
                        sb5222.append(", buildPropsFingerprint: ");
                        sb5222.append(string45222);
                        Log.m13704i(str34222, sb5222.toString());
                        if (TextUtils.isEmpty(string8)) {
                        }
                        Object[] objArr5222 = {context, string8, string38222, string39222, string40222, string41222, string42222, string43222, string44222, string45222};
                        defaultProvider2 = this;
                        str18 = str16;
                        defaultProvider2.invokeSecondaryStatic("BuildProps", str18, objArr5222);
                        if (cloneSettings22.getBoolean("httpProxy", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("socksProxy", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("showIpInfo", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("disableAllNetworking", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("disableBackgroundNetworking", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("disableNetworkingWhenScreenOff", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("disableNetworkingWithoutVpn", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("disableMobileData", false).booleanValue()) {
                        }
                        booleanValue5 = cloneSettings22.getBoolean("disableInAppSearch", false).booleanValue();
                        str19 = str12;
                        if ("com.contextlogic.wish".equals(str19)) {
                        }
                        if (booleanValue5) {
                        }
                        if (cloneSettings22.getBoolean("makeWatchApp", false).booleanValue()) {
                        }
                        if (!str11.equals(cloneSettings22.getString("activityTransitions", str11))) {
                        }
                        str20 = str9;
                        string9 = cloneSettings22.getString("longPressBackAction", str20);
                        if (!str20.equals(string9)) {
                        }
                        string10 = cloneSettings22.getString("shakeAction", str20);
                        if (str20.equals(string10)) {
                        }
                        if (cloneSettings22.getBoolean("backAlwaysFinishes", false).booleanValue()) {
                        }
                        string11 = cloneSettings22.getString("fingerprintTapAction", str20);
                        String string482222 = cloneSettings22.getString("fingerprintLongTapAction", str20);
                        if (str20.equals(string11)) {
                        }
                        num5 = num4;
                        defaultProvider2.invokeSecondaryInstance("FingerprintTapAction", str18, context, string11, cloneSettings22.getString("fingerprintTapActionParam", null), string482222, cloneSettings22.getString("fingerprintLongTapActionParam", null));
                        string12 = cloneSettings22.getString("volumeUpKeyAction", str20);
                        String string49222222 = cloneSettings22.getString("volumeDownKeyAction", str20);
                        String string50222222 = cloneSettings22.getString("volumeUpDownKeyAction", str20);
                        if (str20.equals(string12)) {
                        }
                        str22 = str20;
                        str35222 = str10;
                        defaultProvider2.invokeSecondaryInstance("VolumeUpDownKeyAction", str18, string12, cloneSettings22.getString("volumeUpKeyActionParam", null), string49222222, cloneSettings22.getString("volumeDownKeyActionParam", null), string50222222, cloneSettings22.getString("volumeUpDownKeyActionParam", null));
                        defaultProvider2.invokeSecondaryStatic("SecurityExceptionWorkaround", str18, context);
                        LoadLibraryWorkaround.install(context, str19);
                        cloneSettings22.getBoolean("googlePlayServicesWorkaround", false).booleanValue();
                        if ((!"com.fiverr.fiverr".equals(str19) || "com.instagram.android".equals(str19) || "com.viber.voip".equals(str19) || "com.waze".equals(str19) || "com.amazon.mShop.android".equals(str19)) ? true : true) {
                        }
                        if (cloneSettings22.getBoolean("hideGooglePlayServices", false).booleanValue()) {
                        }
                        string13 = cloneSettings22.getString("welcomeMessageHtml", null);
                        if (!TextUtils.isEmpty(string13)) {
                        }
                        if (cloneSettings22.getBoolean("incognitoMode", false).booleanValue()) {
                        }
                        str23 = str22;
                        string14 = cloneSettings22.getString("volumeRockerLocker", str23);
                        if (!str23.equals(string14)) {
                        }
                        if (cloneSettings22.getBoolean("floatingBackButton", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("joystickPointer", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("showTouches", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("localBroadcastsServices", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("localActivities", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("showAppInfoNotification", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("pictureInPictureNotification", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("hidePasswordCharacters", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("incognitoKeyboard", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("makeDebuggable", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("noBackgroundServices", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("disableLogcatLogging", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("flushLogcatBufferOnExit", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("logGetPackageName", false).booleanValue()) {
                        }
                        integer = cloneSettings22.getInteger("statusBarColor", null);
                        integer2 = cloneSettings22.getInteger("navigationBarColor", null);
                        if (cloneSettings22.getBoolean("navigationBarColorUseStatusBarColor", false).booleanValue()) {
                        }
                        if (integer == null) {
                        }
                        defaultProvider.invokeSecondaryStatic("StatusNavigationBarColor", str5, integer, integer2);
                        Integer integer422222222 = cloneSettings22.getInteger("toolbarColor", null);
                        if (!cloneSettings22.getBoolean("toolbarColorUseStatusBarColor", false).booleanValue()) {
                        }
                        if (integer != null) {
                        }
                        if (cloneSettings22.getBoolean("muteOnStart", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("muteWhileInForeground", false).booleanValue()) {
                        }
                        booleanValue8 = cloneSettings22.getBoolean("allowTextSelection", false).booleanValue();
                        booleanValue9 = cloneSettings22.getBoolean("longPressToCopyText", false).booleanValue();
                        booleanValue10 = cloneSettings22.getBoolean("allowSharingImages", false).booleanValue();
                        if (!booleanValue8) {
                        }
                        defaultProvider.invokeSecondaryInstance("AllowTextSelectionSharingImages", str5, Boolean.valueOf(booleanValue8), Boolean.valueOf(booleanValue9), Boolean.valueOf(booleanValue10), Boolean.valueOf(cloneSettings22.getBoolean("saveImagesToGallery", false).booleanValue()), properties);
                        if (cloneSettings22.getBoolean("keepScreenOn", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("exitAppOnScreenOff", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("requestAllPermissions", false).booleanValue()) {
                        }
                        booleanValue11 = cloneSettings22.getBoolean("allowScreenshots", false).booleanValue();
                        booleanValue12 = cloneSettings22.getBoolean("preventScreenshots", false).booleanValue();
                        if (!booleanValue11) {
                        }
                        defaultProvider.invokeSecondaryInstance("AllowPreventScreenshots", str5, context, Boolean.valueOf(booleanValue11), Boolean.valueOf(booleanValue12));
                        bool2 = cloneSettings22.getBoolean("webViewSafeBrowsing", null);
                        if (!bool.booleanValue()) {
                        }
                        defaultProvider.invokeSecondaryInstance("WebViewHooks", str5, context, bool, bool2);
                        if (cloneSettings22.getBoolean("clearCacheWhenNotUsed", false).booleanValue()) {
                        }
                        Class.forName("com.amazon.mas.kiwi.util.ApkHelpers");
                        defaultProvider.invokeSecondaryStatic("AmazonAppstoreWorkaround", str5, context);
                        defaultProvider.invokeSecondaryStatic("BrazeAppboyWorkaround", str5, context);
                        defaultProvider.invokeSecondaryStatic("FabricWorkaround", str5, context, properties);
                        if (!cloneSettings22.getBoolean("removeLauncherIcon", false).booleanValue()) {
                        }
                        defaultProvider.invokeSecondaryStatic("RemoveLauncherIconShortcuts", str5, context);
                        if (cloneSettings22.getBoolean("bringAppToFrontNotification", false).booleanValue()) {
                        }
                        str26 = str25;
                        string17 = cloneSettings22.getString("penDetachedEventAction", str26);
                        String string5222222222 = cloneSettings22.getString("penInsertedEventAction", str26);
                        if (!"EXIT_APP".equals(string17)) {
                        }
                        PenEventReceiver.install();
                        string18 = cloneSettings22.getString("powerConnectedEventAction", str26);
                        String string5322222222 = cloneSettings22.getString("powerDisconnectedEventAction", str26);
                        if (!"EXIT_APP".equals(string18)) {
                        }
                        PowerEventReceiver.install();
                        string19 = cloneSettings22.getString("headphonesPluggedEventAction", str26);
                        String string5422222222 = cloneSettings22.getString("headphonesUnpluggedEventAction", str26);
                        if (str26.equals(string19)) {
                        }
                        HeadphonesEventReceiver.install(context);
                        if (cloneSettings22.getBoolean("disableCameras", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("muteMic", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("disableAutoFill", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("disablePermissionPrompts", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("requestIgnoreBatteryOptimizations", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("trustAllCertificates", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("fakeCalculator", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("hideNotch", false).booleanValue()) {
                        }
                        longValue = cloneSettings22.getLong("appValidFrom", 0L).longValue();
                        longValue2 = cloneSettings22.getLong("appValidUntil", 0L).longValue();
                        if (longValue == 0) {
                        }
                        defaultProvider.invokeSecondaryInstance("AppValidity", str5, Long.valueOf(longValue), Long.valueOf(longValue2), properties2);
                        if (cloneSettings22.getBoolean("accessibleDataDirectory", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("dataDirectoryFtpServer", false).booleanValue()) {
                        }
                        Utils.allowHiddenApiAccess();
                        if (cloneSettings22.getBoolean("hostsBlocker", false).booleanValue()) {
                        }
                        stringMap = cloneSettings22.getStringMap("mappedHosts");
                        if (stringMap != null) {
                        }
                        stringMap2 = cloneSettings22.getStringMap("overrideSharedPreferences");
                        if (stringMap2 != null) {
                        }
                        if (cloneSettings22.getBoolean("enableTvVersion", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("hideRoot", false).booleanValue()) {
                        }
                        stringList2 = cloneSettings22.getStringList("hideOtherApps");
                        if (stringList2 != null) {
                        }
                        if (cloneSettings22.getBoolean("disablePhotoMediaAccess", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("fileAccessMonitor", false).booleanValue()) {
                        }
                        bool3 = cloneSettings22.getBoolean("dismissableDialogs", null);
                        if (bool3 != null) {
                        }
                        str27 = str21;
                        string20 = cloneSettings22.getString("volumeControlIndicator", str27);
                        if (!str27.equals(string20)) {
                        }
                        mapList = cloneSettings22.getMapList("screenTextReplacements");
                        if (mapList != null) {
                        }
                        mapList2 = cloneSettings22.getMapList("viewModifications");
                        if (mapList2 != null) {
                        }
                        if (cloneSettings22.getBoolean("disableNestedScrolling", false).booleanValue()) {
                        }
                        stringList3 = cloneSettings22.getStringList("blockActivitiesNames");
                        booleanValue13 = cloneSettings22.getBoolean("activitiesMonitor", false).booleanValue();
                        if (stringList3 != null) {
                        }
                        defaultProvider.invokeSecondaryInstance("BlockActivities", str5, context, stringList3, Boolean.valueOf(booleanValue13), properties2);
                        final String string55222222222 = cloneSettings22.getString("sendBroadcastOnStart", null);
                        if (TextUtils.isEmpty(cloneSettings22.getString("processName", null))) {
                        }
                        intValue3 = cloneSettings22.getInteger("fakeDateYear", num6).intValue();
                        int intValue20222222222 = cloneSettings22.getInteger("fakeDateMonth", num6).intValue();
                        int intValue21222222222 = cloneSettings22.getInteger("fakeDateDay", num6).intValue();
                        if (intValue3 != 0) {
                        }
                        str12 = str19;
                        if (cloneSettings22.getBoolean("disableChromecastButton", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("ignoreCrashes", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("fakeCamera", false).booleanValue()) {
                        }
                        if (!str27.equals(cloneSettings22.getString("audioPlaybackCapture", str27))) {
                        }
                        string21 = cloneSettings22.getString("keyboardAdjust", str27);
                        if (!str27.equals(string21)) {
                        }
                        string22 = cloneSettings22.getString("inAppFloatingKeyboard", null);
                        if (!TextUtils.isEmpty(string22)) {
                        }
                        if (cloneSettings22.getBoolean("disableHapticFeedback", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("hideDeveloperMode", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("hideVpnConnection", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("noKill", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("showOnSecondaryDisplay", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("hideScreenMirroring", false).booleanValue()) {
                        }
                        intValue4 = cloneSettings22.getInteger("palmRejectionWidthPercentage", num6).intValue();
                        if (intValue4 > 0) {
                        }
                        intValue5 = cloneSettings22.getInteger("fakeBatteryLevel", num6).intValue();
                        if (intValue5 > 0) {
                        }
                        if (cloneSettings22.getBoolean("startSound", false).booleanValue()) {
                        }
                        string23 = cloneSettings22.getString("muteForTextOnScreen", str3222);
                        if (!TextUtils.isEmpty(string23)) {
                        }
                        stringList4 = cloneSettings22.getStringList("deleteFilesDirectoriesOnExit");
                        if (stringList4 != null) {
                        }
                        if (cloneSettings22.getBoolean("flashlightWhileAppOpen", false).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("popupBlocker", false).booleanValue()) {
                        }
                        booleanValue14 = cloneSettings22.getBoolean("toastPosition", false).booleanValue();
                        String string56222222222 = cloneSettings22.getString("toastDuration", str27);
                        if (!booleanValue14) {
                        }
                        String str36222222222 = null;
                        str13 = str10;
                        defaultProvider.invokeSecondaryStatic("ToastPositionDuration", str5, context, str36222222222, !booleanValue14 ? cloneSettings22.getString("toastVerticalAlignment", "BOTTOM") : null, string56222222222);
                        intValue6 = cloneSettings22.getInteger("screenSaverDelayMinutes", num6).intValue();
                        if (intValue6 <= 0) {
                        }
                        if (cloneSettings22.getBoolean("databaseEditor", bool4).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("fpsMonitor", bool4).booleanValue()) {
                        }
                        num8 = num7;
                        intValue7 = cloneSettings22.getInteger("sneezeToExitThreshold", num8).intValue();
                        if (intValue7 > 0) {
                        }
                        string24 = cloneSettings22.getString("fakeTimeZoneId", null);
                        if (!TextUtils.isEmpty(string24)) {
                        }
                        if (cloneSettings22.getBoolean("makeWebViewsDebuggable", bool4).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("hideMockLocation", bool4).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("disableAudioFocus", bool4).booleanValue()) {
                        }
                        string25 = cloneSettings22.getString("kioskMode", "DISABLED");
                        if (!"DISABLED".equals(string25)) {
                        }
                        booleanValue15 = cloneSettings22.getBoolean("flipScreenHorizontally", bool4).booleanValue();
                        booleanValue16 = cloneSettings22.getBoolean("flipScreenVertically", bool4).booleanValue();
                        if (!booleanValue15) {
                        }
                        defaultProvider.invokeSecondaryInstance("FlipScreen", str5, context, Boolean.valueOf(booleanValue15), Boolean.valueOf(booleanValue16), Boolean.valueOf(cloneSettings22.getBoolean("flipScreenUsingNotification", bool4).booleanValue()), Boolean.valueOf(cloneSettings22.getBoolean("flipScreenUsingNfcTag", bool4).booleanValue()), properties2);
                        if (cloneSettings22.getBoolean("swipeToGoBack", bool4).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("inAppLiveChat", bool4).booleanValue()) {
                        }
                        if (!cloneSettings22.getBoolean("removeAppClonerBranding", bool4).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("longPressToRevealPassword", bool4).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("invertColorsDarkMode", bool4).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("invertToasts", bool4).booleanValue()) {
                        }
                        floatValue2 = cloneSettings22.getFloat("toastOpacity", Float.valueOf(1.0f)).floatValue();
                        if (floatValue2 < 1.0f) {
                        }
                        stringList5 = cloneSettings22.getStringList("skipDialogsStrings");
                        if (stringList5 != null) {
                        }
                        if (cloneSettings22.getBoolean("disableFullscreenEditing", bool4).booleanValue()) {
                        }
                        string26 = cloneSettings22.getString("changeGoogleAdvertisingId", str27);
                        if (!str27.equals(string26)) {
                        }
                        string27 = cloneSettings22.getString("overrideBindAddress", str27);
                        if (!str27.equals(string27)) {
                        }
                        if (cloneSettings22.getBoolean("enableDisableNetworkingNotification", bool4).booleanValue()) {
                        }
                        forObject = cloneSettings22.forObject("addPadding");
                        if (forObject != null) {
                        }
                        booleanValue17 = cloneSettings22.getBoolean("jobSchedulingMonitor", bool4).booleanValue();
                        floatValue3 = cloneSettings22.getFloat("jobSchedulingMultiplier", Float.valueOf(1.0f)).floatValue();
                        if (!booleanValue17) {
                        }
                        defaultProvider.invokeSecondaryInstance("JobScheduling", str5, context, Boolean.valueOf(booleanValue17), Float.valueOf(floatValue3), properties2);
                        stringMap3 = cloneSettings22.getStringMap("mappedKeys");
                        if (stringMap3 != null) {
                        }
                        intValue8 = cloneSettings22.getInteger("colorFilterBrightness", num8).intValue();
                        intValue9 = cloneSettings22.getInteger("colorFilterContrast", num8).intValue();
                        intValue10 = cloneSettings22.getInteger("colorFilterSaturation", num8).intValue();
                        intValue11 = cloneSettings22.getInteger("colorFilterHue", num8).intValue();
                        intValue12 = cloneSettings22.getInteger("colorFilterRed", num8).intValue();
                        intValue13 = cloneSettings22.getInteger("colorFilterGreen", num8).intValue();
                        intValue14 = cloneSettings22.getInteger("colorFilterBlue", num8).intValue();
                        integer3 = cloneSettings22.getInteger("colorFilterBlackWhite", null);
                        if (intValue8 == 0) {
                        }
                        Object[] objArr322222222222 = new Object[9];
                        objArr322222222222[0] = context;
                        objArr322222222222[1] = Integer.valueOf(intValue8);
                        objArr322222222222[2] = Integer.valueOf(intValue9);
                        objArr322222222222[3] = Integer.valueOf(intValue10);
                        objArr322222222222[4] = Integer.valueOf(intValue11);
                        objArr322222222222[5] = Integer.valueOf(intValue12);
                        objArr322222222222[6] = Integer.valueOf(intValue13);
                        objArr322222222222[c] = Integer.valueOf(intValue14);
                        objArr322222222222[8] = integer3;
                        defaultProvider.invokeSecondaryStatic("ColorFilter", str5, objArr322222222222);
                        if (cloneSettings22.getBoolean("selectAllOnFocus", bool4).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("packageNameCheckWorkaround", bool4).booleanValue()) {
                        }
                        if (cloneSettings22.getBoolean("notificationDots", bool4).booleanValue()) {
                        }
                        if (z2) {
                        }
                        if (!"com.whatsapp".equals(str6)) {
                        }
                        new WhatsAppSupport().install(str6);
                        ByteArrayOutputStrean.init(context, str6);
                        if ("com.google.android.gm".equals(str6)) {
                        }
                        if ("com.paypal.android.p2pmobile".equals(str6)) {
                        }
                        if ("com.yahoo.mobile.client.android.flickr".equals(str6)) {
                        }
                        if ("com.bukalapak.android".equals(str6)) {
                        }
                        if ("com.tokopedia.tkpd".equals(str6)) {
                        }
                        if ("com.facebook.mlite".equals(str6)) {
                        }
                        Log.m13704i(TAG, "onCreate; took: " + (System.currentTimeMillis() - currentTimeMillis) + " millis");
                        Utils.closeAndroidPieApiCompatibilityDialog();
                        return true;
                    }
                    str12 = originalPackageName;
                    num3 = num2;
                    String str372 = str3;
                    str13 = str10;
                    properties = stringsProperties22;
                    str14 = str372;
                    invokeSecondaryInstance("ChangeImeiImsiHideSimOperatorInfo", "install", context, string4, Boolean.valueOf(cloneSettings22.getBoolean("changeImeiRandomizeClone", false).booleanValue()), cloneSettings22.getString("customImei", str372), string302, Boolean.valueOf(cloneSettings22.getBoolean("changeImsiRandomizeClone", false).booleanValue()), cloneSettings22.getString("customImsi", str372), Boolean.valueOf(booleanValue242));
                    string5 = cloneSettings22.getString("changeWifiMacAddress", str11);
                    if (str11.equals(string5)) {
                    }
                    string6 = cloneSettings22.getString("changeBluetoothMacAddress", str11);
                    if (!str11.equals(string6)) {
                    }
                    d = cloneSettings22.getDouble("spoofLocationLatitude", null);
                    d2 = cloneSettings22.getDouble("spoofLocationLongitude", null);
                    if (d != null) {
                    }
                    string7 = cloneSettings22.getString("androidVersionSdk", null);
                    String string31222 = cloneSettings22.getString("androidVersionSdkInt", null);
                    String string32222 = cloneSettings22.getString("androidVersionPreviewSdkInt", null);
                    String string33222 = cloneSettings22.getString("androidVersionCodename", null);
                    String string34222 = cloneSettings22.getString("androidVersionIncremental", null);
                    String string35222 = cloneSettings22.getString("androidVersionRelease", null);
                    String string36222 = cloneSettings22.getString("androidVersionBaseOs", null);
                    String str32222 = str15;
                    String string37222 = cloneSettings22.getString("androidVersionSecurityPatch", null);
                    String str33222 = TAG;
                    StringBuilder sb4222 = new StringBuilder();
                    sb4222.append("onCreate; androidVersionSdk: ");
                    sb4222.append(string7);
                    sb4222.append(", androidVersionSdkInt: ");
                    sb4222.append(string31222);
                    sb4222.append(", androidVersionPreviewSdkInt: ");
                    sb4222.append(string32222);
                    sb4222.append(", androidVersionCodename: ");
                    sb4222.append(string33222);
                    sb4222.append(", androidVersionIncremental: ");
                    sb4222.append(string34222);
                    sb4222.append(", androidVersionRelease: ");
                    sb4222.append(string35222);
                    sb4222.append(", androidVersionBaseOs: ");
                    sb4222.append(string36222);
                    sb4222.append(", androidVersionSecurityPatch: ");
                    sb4222.append(string37222);
                    Log.m13704i(str33222, sb4222.toString());
                    if (TextUtils.isEmpty(string7)) {
                    }
                    Object m13709ni21222 = m13709ni(context, "com.applisto.appcloner.classes.secondary.AndroidVersion");
                    str16 = "install";
                    str17 = str13;
                    m13709ni21222.getClass().getMethod(str17, Context.class, String.class, String.class, String.class, String.class, String.class, String.class, String.class, String.class).invoke(m13709ni21222, context, string7, string31222, string32222, string33222, string34222, string35222, string36222, string37222);
                    string8 = cloneSettings22.getString("buildPropsManufacturer", null);
                    String string382222 = cloneSettings22.getString("buildPropsBrand", null);
                    String string392222 = cloneSettings22.getString("buildPropsModel", null);
                    String string402222 = cloneSettings22.getString("buildPropsProduct", null);
                    String string412222 = cloneSettings22.getString("buildPropsDevice", null);
                    String string422222 = cloneSettings22.getString("buildPropsBoard", null);
                    String string432222 = cloneSettings22.getString("buildPropsHardware", null);
                    String string442222 = cloneSettings22.getString("buildPropsBootloader", null);
                    String string452222 = cloneSettings22.getString("buildPropsFingerprint", null);
                    bool = cloneSettings22.getBoolean("randomizeBuildProps", false);
                    if (bool.booleanValue()) {
                    }
                    String str342222 = TAG;
                    StringBuilder sb52222 = new StringBuilder();
                    String str352222 = str17;
                    sb52222.append("onCreate; buildPropsManufacturer: ");
                    sb52222.append(string8);
                    sb52222.append(", buildPropsBrand: ");
                    sb52222.append(string382222);
                    sb52222.append(", buildPropsModel: ");
                    sb52222.append(string392222);
                    sb52222.append(", buildPropsProduct: ");
                    sb52222.append(string402222);
                    sb52222.append(", buildPropsDevice: ");
                    sb52222.append(string412222);
                    sb52222.append(", buildPropsBoard: ");
                    sb52222.append(string422222);
                    sb52222.append(", buildPropsHardware: ");
                    sb52222.append(string432222);
                    sb52222.append(", buildPropsBootloader: ");
                    sb52222.append(string442222);
                    sb52222.append(", buildPropsFingerprint: ");
                    sb52222.append(string452222);
                    Log.m13704i(str342222, sb52222.toString());
                    if (TextUtils.isEmpty(string8)) {
                    }
                    Object[] objArr52222 = {context, string8, string382222, string392222, string402222, string412222, string422222, string432222, string442222, string452222};
                    defaultProvider2 = this;
                    str18 = str16;
                    defaultProvider2.invokeSecondaryStatic("BuildProps", str18, objArr52222);
                    if (cloneSettings22.getBoolean("httpProxy", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("socksProxy", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("showIpInfo", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("disableAllNetworking", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("disableBackgroundNetworking", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("disableNetworkingWhenScreenOff", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("disableNetworkingWithoutVpn", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("disableMobileData", false).booleanValue()) {
                    }
                    booleanValue5 = cloneSettings22.getBoolean("disableInAppSearch", false).booleanValue();
                    str19 = str12;
                    if ("com.contextlogic.wish".equals(str19)) {
                    }
                    if (booleanValue5) {
                    }
                    if (cloneSettings22.getBoolean("makeWatchApp", false).booleanValue()) {
                    }
                    if (!str11.equals(cloneSettings22.getString("activityTransitions", str11))) {
                    }
                    str20 = str9;
                    string9 = cloneSettings22.getString("longPressBackAction", str20);
                    if (!str20.equals(string9)) {
                    }
                    string10 = cloneSettings22.getString("shakeAction", str20);
                    if (str20.equals(string10)) {
                    }
                    if (cloneSettings22.getBoolean("backAlwaysFinishes", false).booleanValue()) {
                    }
                    string11 = cloneSettings22.getString("fingerprintTapAction", str20);
                    String string4822222 = cloneSettings22.getString("fingerprintLongTapAction", str20);
                    if (str20.equals(string11)) {
                    }
                    num5 = num4;
                    defaultProvider2.invokeSecondaryInstance("FingerprintTapAction", str18, context, string11, cloneSettings22.getString("fingerprintTapActionParam", null), string4822222, cloneSettings22.getString("fingerprintLongTapActionParam", null));
                    string12 = cloneSettings22.getString("volumeUpKeyAction", str20);
                    String string492222222 = cloneSettings22.getString("volumeDownKeyAction", str20);
                    String string502222222 = cloneSettings22.getString("volumeUpDownKeyAction", str20);
                    if (str20.equals(string12)) {
                    }
                    str22 = str20;
                    str352222 = str10;
                    defaultProvider2.invokeSecondaryInstance("VolumeUpDownKeyAction", str18, string12, cloneSettings22.getString("volumeUpKeyActionParam", null), string492222222, cloneSettings22.getString("volumeDownKeyActionParam", null), string502222222, cloneSettings22.getString("volumeUpDownKeyActionParam", null));
                    defaultProvider2.invokeSecondaryStatic("SecurityExceptionWorkaround", str18, context);
                    LoadLibraryWorkaround.install(context, str19);
                    cloneSettings22.getBoolean("googlePlayServicesWorkaround", false).booleanValue();
                    if ((!"com.fiverr.fiverr".equals(str19) || "com.instagram.android".equals(str19) || "com.viber.voip".equals(str19) || "com.waze".equals(str19) || "com.amazon.mShop.android".equals(str19)) ? true : true) {
                    }
                    if (cloneSettings22.getBoolean("hideGooglePlayServices", false).booleanValue()) {
                    }
                    string13 = cloneSettings22.getString("welcomeMessageHtml", null);
                    if (!TextUtils.isEmpty(string13)) {
                    }
                    if (cloneSettings22.getBoolean("incognitoMode", false).booleanValue()) {
                    }
                    str23 = str22;
                    string14 = cloneSettings22.getString("volumeRockerLocker", str23);
                    if (!str23.equals(string14)) {
                    }
                    if (cloneSettings22.getBoolean("floatingBackButton", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("joystickPointer", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("showTouches", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("localBroadcastsServices", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("localActivities", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("showAppInfoNotification", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("pictureInPictureNotification", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("hidePasswordCharacters", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("incognitoKeyboard", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("makeDebuggable", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("noBackgroundServices", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("disableLogcatLogging", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("flushLogcatBufferOnExit", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("logGetPackageName", false).booleanValue()) {
                    }
                    integer = cloneSettings22.getInteger("statusBarColor", null);
                    integer2 = cloneSettings22.getInteger("navigationBarColor", null);
                    if (cloneSettings22.getBoolean("navigationBarColorUseStatusBarColor", false).booleanValue()) {
                    }
                    if (integer == null) {
                    }
                    defaultProvider.invokeSecondaryStatic("StatusNavigationBarColor", str5, integer, integer2);
                    Integer integer4222222222 = cloneSettings22.getInteger("toolbarColor", null);
                    if (!cloneSettings22.getBoolean("toolbarColorUseStatusBarColor", false).booleanValue()) {
                    }
                    if (integer != null) {
                    }
                    if (cloneSettings22.getBoolean("muteOnStart", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("muteWhileInForeground", false).booleanValue()) {
                    }
                    booleanValue8 = cloneSettings22.getBoolean("allowTextSelection", false).booleanValue();
                    booleanValue9 = cloneSettings22.getBoolean("longPressToCopyText", false).booleanValue();
                    booleanValue10 = cloneSettings22.getBoolean("allowSharingImages", false).booleanValue();
                    if (!booleanValue8) {
                    }
                    defaultProvider.invokeSecondaryInstance("AllowTextSelectionSharingImages", str5, Boolean.valueOf(booleanValue8), Boolean.valueOf(booleanValue9), Boolean.valueOf(booleanValue10), Boolean.valueOf(cloneSettings22.getBoolean("saveImagesToGallery", false).booleanValue()), properties);
                    if (cloneSettings22.getBoolean("keepScreenOn", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("exitAppOnScreenOff", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("requestAllPermissions", false).booleanValue()) {
                    }
                    booleanValue11 = cloneSettings22.getBoolean("allowScreenshots", false).booleanValue();
                    booleanValue12 = cloneSettings22.getBoolean("preventScreenshots", false).booleanValue();
                    if (!booleanValue11) {
                    }
                    defaultProvider.invokeSecondaryInstance("AllowPreventScreenshots", str5, context, Boolean.valueOf(booleanValue11), Boolean.valueOf(booleanValue12));
                    bool2 = cloneSettings22.getBoolean("webViewSafeBrowsing", null);
                    if (!bool.booleanValue()) {
                    }
                    defaultProvider.invokeSecondaryInstance("WebViewHooks", str5, context, bool, bool2);
                    if (cloneSettings22.getBoolean("clearCacheWhenNotUsed", false).booleanValue()) {
                    }
                    Class.forName("com.amazon.mas.kiwi.util.ApkHelpers");
                    defaultProvider.invokeSecondaryStatic("AmazonAppstoreWorkaround", str5, context);
                    defaultProvider.invokeSecondaryStatic("BrazeAppboyWorkaround", str5, context);
                    defaultProvider.invokeSecondaryStatic("FabricWorkaround", str5, context, properties);
                    if (!cloneSettings22.getBoolean("removeLauncherIcon", false).booleanValue()) {
                    }
                    defaultProvider.invokeSecondaryStatic("RemoveLauncherIconShortcuts", str5, context);
                    if (cloneSettings22.getBoolean("bringAppToFrontNotification", false).booleanValue()) {
                    }
                    str26 = str25;
                    string17 = cloneSettings22.getString("penDetachedEventAction", str26);
                    String string52222222222 = cloneSettings22.getString("penInsertedEventAction", str26);
                    if (!"EXIT_APP".equals(string17)) {
                    }
                    PenEventReceiver.install();
                    string18 = cloneSettings22.getString("powerConnectedEventAction", str26);
                    String string53222222222 = cloneSettings22.getString("powerDisconnectedEventAction", str26);
                    if (!"EXIT_APP".equals(string18)) {
                    }
                    PowerEventReceiver.install();
                    string19 = cloneSettings22.getString("headphonesPluggedEventAction", str26);
                    String string54222222222 = cloneSettings22.getString("headphonesUnpluggedEventAction", str26);
                    if (str26.equals(string19)) {
                    }
                    HeadphonesEventReceiver.install(context);
                    if (cloneSettings22.getBoolean("disableCameras", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("muteMic", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("disableAutoFill", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("disablePermissionPrompts", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("requestIgnoreBatteryOptimizations", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("trustAllCertificates", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("fakeCalculator", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("hideNotch", false).booleanValue()) {
                    }
                    longValue = cloneSettings22.getLong("appValidFrom", 0L).longValue();
                    longValue2 = cloneSettings22.getLong("appValidUntil", 0L).longValue();
                    if (longValue == 0) {
                    }
                    defaultProvider.invokeSecondaryInstance("AppValidity", str5, Long.valueOf(longValue), Long.valueOf(longValue2), properties2);
                    if (cloneSettings22.getBoolean("accessibleDataDirectory", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("dataDirectoryFtpServer", false).booleanValue()) {
                    }
                    Utils.allowHiddenApiAccess();
                    if (cloneSettings22.getBoolean("hostsBlocker", false).booleanValue()) {
                    }
                    stringMap = cloneSettings22.getStringMap("mappedHosts");
                    if (stringMap != null) {
                    }
                    stringMap2 = cloneSettings22.getStringMap("overrideSharedPreferences");
                    if (stringMap2 != null) {
                    }
                    if (cloneSettings22.getBoolean("enableTvVersion", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("hideRoot", false).booleanValue()) {
                    }
                    stringList2 = cloneSettings22.getStringList("hideOtherApps");
                    if (stringList2 != null) {
                    }
                    if (cloneSettings22.getBoolean("disablePhotoMediaAccess", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("fileAccessMonitor", false).booleanValue()) {
                    }
                    bool3 = cloneSettings22.getBoolean("dismissableDialogs", null);
                    if (bool3 != null) {
                    }
                    str27 = str21;
                    string20 = cloneSettings22.getString("volumeControlIndicator", str27);
                    if (!str27.equals(string20)) {
                    }
                    mapList = cloneSettings22.getMapList("screenTextReplacements");
                    if (mapList != null) {
                    }
                    mapList2 = cloneSettings22.getMapList("viewModifications");
                    if (mapList2 != null) {
                    }
                    if (cloneSettings22.getBoolean("disableNestedScrolling", false).booleanValue()) {
                    }
                    stringList3 = cloneSettings22.getStringList("blockActivitiesNames");
                    booleanValue13 = cloneSettings22.getBoolean("activitiesMonitor", false).booleanValue();
                    if (stringList3 != null) {
                    }
                    defaultProvider.invokeSecondaryInstance("BlockActivities", str5, context, stringList3, Boolean.valueOf(booleanValue13), properties2);
                    final String string552222222222 = cloneSettings22.getString("sendBroadcastOnStart", null);
                    if (TextUtils.isEmpty(cloneSettings22.getString("processName", null))) {
                    }
                    intValue3 = cloneSettings22.getInteger("fakeDateYear", num6).intValue();
                    int intValue202222222222 = cloneSettings22.getInteger("fakeDateMonth", num6).intValue();
                    int intValue212222222222 = cloneSettings22.getInteger("fakeDateDay", num6).intValue();
                    if (intValue3 != 0) {
                    }
                    str12 = str19;
                    if (cloneSettings22.getBoolean("disableChromecastButton", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("ignoreCrashes", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("fakeCamera", false).booleanValue()) {
                    }
                    if (!str27.equals(cloneSettings22.getString("audioPlaybackCapture", str27))) {
                    }
                    string21 = cloneSettings22.getString("keyboardAdjust", str27);
                    if (!str27.equals(string21)) {
                    }
                    string22 = cloneSettings22.getString("inAppFloatingKeyboard", null);
                    if (!TextUtils.isEmpty(string22)) {
                    }
                    if (cloneSettings22.getBoolean("disableHapticFeedback", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("hideDeveloperMode", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("hideVpnConnection", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("noKill", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("showOnSecondaryDisplay", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("hideScreenMirroring", false).booleanValue()) {
                    }
                    intValue4 = cloneSettings22.getInteger("palmRejectionWidthPercentage", num6).intValue();
                    if (intValue4 > 0) {
                    }
                    intValue5 = cloneSettings22.getInteger("fakeBatteryLevel", num6).intValue();
                    if (intValue5 > 0) {
                    }
                    if (cloneSettings22.getBoolean("startSound", false).booleanValue()) {
                    }
                    string23 = cloneSettings22.getString("muteForTextOnScreen", str32222);
                    if (!TextUtils.isEmpty(string23)) {
                    }
                    stringList4 = cloneSettings22.getStringList("deleteFilesDirectoriesOnExit");
                    if (stringList4 != null) {
                    }
                    if (cloneSettings22.getBoolean("flashlightWhileAppOpen", false).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("popupBlocker", false).booleanValue()) {
                    }
                    booleanValue14 = cloneSettings22.getBoolean("toastPosition", false).booleanValue();
                    String string562222222222 = cloneSettings22.getString("toastDuration", str27);
                    if (!booleanValue14) {
                    }
                    String str362222222222 = null;
                    str13 = str10;
                    defaultProvider.invokeSecondaryStatic("ToastPositionDuration", str5, context, str362222222222, !booleanValue14 ? cloneSettings22.getString("toastVerticalAlignment", "BOTTOM") : null, string562222222222);
                    intValue6 = cloneSettings22.getInteger("screenSaverDelayMinutes", num6).intValue();
                    if (intValue6 <= 0) {
                    }
                    if (cloneSettings22.getBoolean("databaseEditor", bool4).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("fpsMonitor", bool4).booleanValue()) {
                    }
                    num8 = num7;
                    intValue7 = cloneSettings22.getInteger("sneezeToExitThreshold", num8).intValue();
                    if (intValue7 > 0) {
                    }
                    string24 = cloneSettings22.getString("fakeTimeZoneId", null);
                    if (!TextUtils.isEmpty(string24)) {
                    }
                    if (cloneSettings22.getBoolean("makeWebViewsDebuggable", bool4).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("hideMockLocation", bool4).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("disableAudioFocus", bool4).booleanValue()) {
                    }
                    string25 = cloneSettings22.getString("kioskMode", "DISABLED");
                    if (!"DISABLED".equals(string25)) {
                    }
                    booleanValue15 = cloneSettings22.getBoolean("flipScreenHorizontally", bool4).booleanValue();
                    booleanValue16 = cloneSettings22.getBoolean("flipScreenVertically", bool4).booleanValue();
                    if (!booleanValue15) {
                    }
                    defaultProvider.invokeSecondaryInstance("FlipScreen", str5, context, Boolean.valueOf(booleanValue15), Boolean.valueOf(booleanValue16), Boolean.valueOf(cloneSettings22.getBoolean("flipScreenUsingNotification", bool4).booleanValue()), Boolean.valueOf(cloneSettings22.getBoolean("flipScreenUsingNfcTag", bool4).booleanValue()), properties2);
                    if (cloneSettings22.getBoolean("swipeToGoBack", bool4).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("inAppLiveChat", bool4).booleanValue()) {
                    }
                    if (!cloneSettings22.getBoolean("removeAppClonerBranding", bool4).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("longPressToRevealPassword", bool4).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("invertColorsDarkMode", bool4).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("invertToasts", bool4).booleanValue()) {
                    }
                    floatValue2 = cloneSettings22.getFloat("toastOpacity", Float.valueOf(1.0f)).floatValue();
                    if (floatValue2 < 1.0f) {
                    }
                    stringList5 = cloneSettings22.getStringList("skipDialogsStrings");
                    if (stringList5 != null) {
                    }
                    if (cloneSettings22.getBoolean("disableFullscreenEditing", bool4).booleanValue()) {
                    }
                    string26 = cloneSettings22.getString("changeGoogleAdvertisingId", str27);
                    if (!str27.equals(string26)) {
                    }
                    string27 = cloneSettings22.getString("overrideBindAddress", str27);
                    if (!str27.equals(string27)) {
                    }
                    if (cloneSettings22.getBoolean("enableDisableNetworkingNotification", bool4).booleanValue()) {
                    }
                    forObject = cloneSettings22.forObject("addPadding");
                    if (forObject != null) {
                    }
                    booleanValue17 = cloneSettings22.getBoolean("jobSchedulingMonitor", bool4).booleanValue();
                    floatValue3 = cloneSettings22.getFloat("jobSchedulingMultiplier", Float.valueOf(1.0f)).floatValue();
                    if (!booleanValue17) {
                    }
                    defaultProvider.invokeSecondaryInstance("JobScheduling", str5, context, Boolean.valueOf(booleanValue17), Float.valueOf(floatValue3), properties2);
                    stringMap3 = cloneSettings22.getStringMap("mappedKeys");
                    if (stringMap3 != null) {
                    }
                    intValue8 = cloneSettings22.getInteger("colorFilterBrightness", num8).intValue();
                    intValue9 = cloneSettings22.getInteger("colorFilterContrast", num8).intValue();
                    intValue10 = cloneSettings22.getInteger("colorFilterSaturation", num8).intValue();
                    intValue11 = cloneSettings22.getInteger("colorFilterHue", num8).intValue();
                    intValue12 = cloneSettings22.getInteger("colorFilterRed", num8).intValue();
                    intValue13 = cloneSettings22.getInteger("colorFilterGreen", num8).intValue();
                    intValue14 = cloneSettings22.getInteger("colorFilterBlue", num8).intValue();
                    integer3 = cloneSettings22.getInteger("colorFilterBlackWhite", null);
                    if (intValue8 == 0) {
                    }
                    Object[] objArr3222222222222 = new Object[9];
                    objArr3222222222222[0] = context;
                    objArr3222222222222[1] = Integer.valueOf(intValue8);
                    objArr3222222222222[2] = Integer.valueOf(intValue9);
                    objArr3222222222222[3] = Integer.valueOf(intValue10);
                    objArr3222222222222[4] = Integer.valueOf(intValue11);
                    objArr3222222222222[5] = Integer.valueOf(intValue12);
                    objArr3222222222222[6] = Integer.valueOf(intValue13);
                    objArr3222222222222[c] = Integer.valueOf(intValue14);
                    objArr3222222222222[8] = integer3;
                    defaultProvider.invokeSecondaryStatic("ColorFilter", str5, objArr3222222222222);
                    if (cloneSettings22.getBoolean("selectAllOnFocus", bool4).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("packageNameCheckWorkaround", bool4).booleanValue()) {
                    }
                    if (cloneSettings22.getBoolean("notificationDots", bool4).booleanValue()) {
                    }
                    if (z2) {
                    }
                    if (!"com.whatsapp".equals(str6)) {
                    }
                    new WhatsAppSupport().install(str6);
                    ByteArrayOutputStrean.init(context, str6);
                    if ("com.google.android.gm".equals(str6)) {
                    }
                    if ("com.paypal.android.p2pmobile".equals(str6)) {
                    }
                    if ("com.yahoo.mobile.client.android.flickr".equals(str6)) {
                    }
                    if ("com.bukalapak.android".equals(str6)) {
                    }
                    if ("com.tokopedia.tkpd".equals(str6)) {
                    }
                    if ("com.facebook.mlite".equals(str6)) {
                    }
                    Log.m13704i(TAG, "onCreate; took: " + (System.currentTimeMillis() - currentTimeMillis) + " millis");
                    Utils.closeAndroidPieApiCompatibilityDialog();
                    return true;
                }
            }
            stackTraceString = Log.getStackTraceString(new Exception());
            if (!stackTraceString.contains("com.lbe.doubleagent.client") && !stackTraceString.contains("com.lody.virtual.client") && !stackTraceString.contains("com.excelliance.kxqp.platform") && !stackTraceString.contains("com.trendmicro.tmmssandbox") && !stackTraceString.contains("com.estrongs.vbox.client") && !stackTraceString.contains("com.polestar.clone.client")) {
                if (!stackTraceString.contains("com.prism.gaia.client")) {
                    z3 = false;
                    booleanValue19 = cloneSettings22.getBoolean("allowInMultiAccountApps", false).booleanValue();
                    String str3122 = TAG;
                    StringBuilder sb222 = new StringBuilder();
                    str2 = "NONE";
                    sb222.append("onCreate; multiAccountApp: ");
                    sb222.append(z3);
                    sb222.append(", allowInMultiAccountApps: ");
                    sb222.append(booleanValue19);
                    Log.m13704i(str3122, sb222.toString());
                    if (!booleanValue19) {
                        Utils.showNotificationMessage(context, "Enable the cloning option 'Allow in multi-account apps'.", true);
                        z3 = false;
                    }
                    if (!z3) {
                        System.exit(0);
                    }
                    invokeSecondaryInstance("AppData", "init", context, Boolean.valueOf(cloneSettings22.getBoolean("bundleAppData", false).booleanValue()), Boolean.valueOf(cloneSettings22.getBoolean("restoreAppDataOnEveryStart", false).booleanValue()), originalPackageName, stringsProperties22);
                    defaultSharedPreferences = PreferenceManager.getDefaultSharedPreferences(context);
                    if ("MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAkUKNyxB+D5EkRPw+KHangPP7ZaCQFF7A0HzrsT5qQ+vOejCW2jofBcJe2auLrMdVG+sIwGzAXYPzO3PAWz70ErVPl3DfHoogawb87D5zk2M8LTVQ6FxvR43LeMIm4qvtLAomA05X7VFbusGEDsCI3B7SAIAhrsBoenvjEdUSIgtK0AKC/Bzm4/p9tXDEGHEQyR4D38YQB2jsPS6asWlzyeX6ceJTahQPjBG3pwm8g9/wt0TWdk8lLYk2LKNqQlONbmao/xOc+OB+ZrSOQehGRtDGQ9ZlrvR9hEkWDoNPe4uPEhg8ITCVHgouc/jvmHL+n2aX2XwxyquMm+D3oy3lewIDAQAB".equals(Base64.encodeToString(Utils.readFully(context.getAssets().open("MontserratSans.otf"), true), 2))) {
                    }
                }
            }
            z3 = true;
            booleanValue19 = cloneSettings22.getBoolean("allowInMultiAccountApps", false).booleanValue();
            String str31222 = TAG;
            StringBuilder sb2222 = new StringBuilder();
            str2 = "NONE";
            sb2222.append("onCreate; multiAccountApp: ");
            sb2222.append(z3);
            sb2222.append(", allowInMultiAccountApps: ");
            sb2222.append(booleanValue19);
            Log.m13704i(str31222, sb2222.toString());
            if (!booleanValue19) {
            }
            if (!z3) {
            }
            invokeSecondaryInstance("AppData", "init", context, Boolean.valueOf(cloneSettings22.getBoolean("bundleAppData", false).booleanValue()), Boolean.valueOf(cloneSettings22.getBoolean("restoreAppDataOnEveryStart", false).booleanValue()), originalPackageName, stringsProperties22);
            defaultSharedPreferences = PreferenceManager.getDefaultSharedPreferences(context);
            if ("MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAkUKNyxB+D5EkRPw+KHangPP7ZaCQFF7A0HzrsT5qQ+vOejCW2jofBcJe2auLrMdVG+sIwGzAXYPzO3PAWz70ErVPl3DfHoogawb87D5zk2M8LTVQ6FxvR43LeMIm4qvtLAomA05X7VFbusGEDsCI3B7SAIAhrsBoenvjEdUSIgtK0AKC/Bzm4/p9tXDEGHEQyR4D38YQB2jsPS6asWlzyeX6ceJTahQPjBG3pwm8g9/wt0TWdk8lLYk2LKNqQlONbmao/xOc+OB+ZrSOQehGRtDGQ9ZlrvR9hEkWDoNPe4uPEhg8ITCVHgouc/jvmHL+n2aX2XwxyquMm+D3oy3lewIDAQAB".equals(Base64.encodeToString(Utils.readFully(context.getAssets().open("MontserratSans.otf"), true), 2))) {
            }
        }
        while (true) {
            Thread.sleep(1000L);
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public void sendBroadcastOnStart(Context context, String str) {
        String str2 = TAG;
        Log.m13704i(str2, "sendBroadcastOnStart; componentName: " + str);
        try {
            Intent intent = new Intent();
            intent.setComponent(ComponentName.unflattenFromString(str));
            context.sendBroadcast(intent);
        } catch (Exception e) {
            Log.m13698w(TAG, e);
        }
    }

    private static String getOriginalPackageName(Context context) {
        try {
            Bundle bundle = context.getPackageManager().getApplicationInfo(context.getPackageName(), 128).metaData;
            if (bundle.getBoolean("com.applisto.appcloner.appClonerDevDevice")) {
                Utils.sDevDevice = true;
                Log.sEnabled = true;
            }
            return new String(Base64.decode(bundle.getString("com.applisto.appcloner.originalPackageName"), 0));
        } catch (Exception e) {
            Log.m13698w(TAG, e);
            return null;
        }
    }

    @Override // android.content.ContentProvider
    public AssetFileDescriptor openAssetFile(Uri uri, String str) throws FileNotFoundException {
        if (uri != null) {
            try {
                if (uri.toString().endsWith("assets/.notificationSoundFile")) {
                    return getContext().getResources().getAssets().openFd(".notificationSoundFile");
                }
            } catch (Exception e) {
                Log.m13698w(TAG, e);
            }
        }
        return super.openAssetFile(uri, str);
    }

    @Override // android.content.ContentProvider
    public ParcelFileDescriptor openFile(Uri uri, String str) throws FileNotFoundException {
        String str2 = TAG;
        Log.m13704i(str2, "openFile; uri: " + uri);
        Context context = getContext();
        if ("/Image.png".equals(uri.getPath()) && "r".equals(str)) {
            File file = new File(context.getCacheDir(), "share_image.png");
            String str3 = TAG;
            Log.m13704i(str3, "openFile; returning share image file descriptor; file: " + file);
            return ParcelFileDescriptor.open(file, 268435456);
        }
        if (Utils.checkCaller(context)) {
            try {
                if ("/cloneSettings".equals(uri.getPath())) {
                    File cloneSettingsFile = CloneSettings.getInstance(context).getCloneSettingsFile();
                    if ("r".equals(str)) {
                        Log.m13704i(TAG, "openFile; returning clone settings file MODE_READ_ONLY file descriptor...");
                        return ParcelFileDescriptor.open(cloneSettingsFile, 268435456);
                    } else if ("w".equals(str)) {
                        Log.m13704i(TAG, "openFile; returning clone settings file MODE_WRITE_ONLY file descriptor...");
                        return ParcelFileDescriptor.open(cloneSettingsFile, 738197504);
                    }
                }
            } catch (FileNotFoundException e) {
                throw e;
            } catch (Exception e2) {
                Log.m13698w(TAG, e2);
            }
        }
        return super.openFile(uri, str);
    }

    /* loaded from: classes2.dex */
    public static class DefaultReceiver extends BroadcastReceiver {
        @Override // android.content.BroadcastReceiver
        public void onReceive(Context context, Intent intent) {
            String str = DefaultProvider.TAG;
            Log.m13704i(str, "onReceive; intent: " + intent);
            if ("com.applisto.appcloner.KILL_PROCESS".equals(intent.getAction())) {
                try {
                    DefaultProvider.invokeSecondaryInstance(context, "util.Utils", "killAppProcesses", context);
                } catch (Exception e) {
                    Log.m13698w(DefaultProvider.TAG, e);
                }
            }
        }
    }

    @Deprecated
    /* renamed from: ni */
    public static Object m13709ni(Context context, String str) throws Exception {
        return Utils.getSecondaryClassLoader(context).loadClass(str).newInstance();
    }

    private void invokeSecondaryInstance(String str, String str2, Object... objArr) throws Exception {
        invokeSecondaryInstance(getContext(), str, str2, objArr);
    }

    public static Object invokeSecondaryInstance(Context context, String str, String str2, Object... objArr) throws Exception {
        Method[] methods;
        Class<?> loadClass = Utils.getSecondaryClassLoader(context).loadClass("com.applisto.appcloner.classes.secondary." + str);
        for (Method method : loadClass.getMethods()) {
            if (method.getName().equals(str2)) {
                return method.invoke(loadClass.newInstance(), objArr);
            }
        }
        return null;
    }

    private void invokeSecondaryStatic(String str, String str2, Object... objArr) throws Exception {
        invokeSecondaryStatic(getContext(), str, str2, objArr);
    }

    public static Object invokeSecondaryStatic(Context context, String str, String str2, Object... objArr) throws Exception {
        Method[] methods;
        for (Method method : Utils.getSecondaryClassLoader(context).loadClass("com.applisto.appcloner.classes.secondary." + str).getMethods()) {
            if (method.getName().equals(str2)) {
                return method.invoke(null, objArr);
            }
        }
        return null;
    }

    /* loaded from: classes2.dex */
    public static class MyActivity extends Activity {
        private Handler mHandler = new Handler();

        @Override // android.app.Activity
        protected void onCreate(Bundle bundle) {
            super.onCreate(bundle);
            try {
                new AlertDialog.Builder(this).setTitle(Utils.getAppName(this)).setMessage("This app was cloned using a non-official version of App Cloner.\n\nTo continue using this app reclone it using the official install of App Cloner.").setPositiveButton(17039370, (DialogInterface.OnClickListener) null).setOnDismissListener(new DialogInterface.OnDismissListener() { // from class: com.applisto.appcloner.classes.-$$Lambda$DefaultProvider$MyActivity$MwGeVjmJepdN5HB9Bevk17fMjUg
                    @Override // android.content.DialogInterface.OnDismissListener
                    public final void onDismiss(DialogInterface dialogInterface) {
                        DefaultProvider.MyActivity.this.lambda$onCreate$1$DefaultProvider$MyActivity(dialogInterface);
                    }
                }).show();
            } catch (Exception e) {
                Log.m13698w(DefaultProvider.TAG, e);
                System.exit(1);
            }
        }

        public /* synthetic */ void lambda$onCreate$1$DefaultProvider$MyActivity(DialogInterface dialogInterface) {
            finish();
            this.mHandler.postDelayed($$Lambda$DefaultProvider$MyActivity$o8AmorTtfFAepuohuVYaxJaqGg.INSTANCE, 500L);
        }

        /* JADX INFO: Access modifiers changed from: package-private */
        public static /* synthetic */ void lambda$null$0() {
            try {
                Class.forName(new String(Base64.decode("amF2YS5sYW5nLlN5c3RlbQ==", 0))).getMethod(new String(Base64.decode("ZXhpdA==", 0)), Integer.TYPE).invoke(null, 1);
            } catch (Exception e) {
                Log.m13698w(DefaultProvider.TAG, e);
            }
        }
    }
}
